[{"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\index.js":"1","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\App.js":"2","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\reportWebVitals.js":"3","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\index.js":"4","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Header.js":"5","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Banner.js":"6","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Services.js":"7","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Testimonials.js":"8","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\StartTutoringBanner.js":"9","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\HaveQuestion.js":"10","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Footer.js":"11","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\Router.js":"12","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\index.js":"13","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\Home.js":"14","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\Tutors.js":"15","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\TutorsFilter.js":"16","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\SearchTutors.js":"17","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\TutorListInfo.js":"18","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\TutorsFilterControls.js":"19","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\Register.js":"20","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\Dashboard.js":"21","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSHeader.js":"22","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSMenu.js":"23","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSContent.js":"24","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSAbout.js":"25","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSContact.js":"26","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\HttpClient.js":"27","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\views\\register-view.js":"28","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\views\\login-view.js":"29","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\views\\forgot-password.js":"30","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\index.js":"31","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\Router.js":"32","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\reportWebVitals.js":"33","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\index.js":"34","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\index.js":"35","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Banner.js":"36","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Header.js":"37","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Services.js":"38","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\StartTutoringBanner.js":"39","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\HaveQuestion.js":"40","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Footer.js":"41","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSHeader.js":"42","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\TutorsFilter.js":"43","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSMenu.js":"44","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Home.js":"45","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Tutors.js":"46","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSContent.js":"47","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSAbout.js":"48","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSContact.js":"49","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Register.js":"50","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Dashboard.js":"51","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Testimonials.js":"52","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\views\\forgot-password.js":"53","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\SearchTutors.js":"54","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\TutorsFilterControls.js":"55","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\views\\register-view.js":"56","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\views\\login-view.js":"57","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\TutorListInfo.js":"58","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\user.js":"59","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\HttpClient.js":"60","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\MessageBox.js":"61","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\index.js":"62","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\PageHistory.js":"63","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\VerifyEmail.js":"64","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\ResetPassword.js":"65","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\User.js":"66","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Dashboard\\Dashboard.js":"67","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\PostList.js":"68","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSExpertise.js":"69","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSEducation.js":"70","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSMediums.js":"71","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\ViewProfile.js":"72","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\common\\Spinner.js":"73","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\views\\ContactUs.js":"74","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\webrtc\\App.js":"75","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\webrtc\\Components\\Footer\\Footer.js":"76","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\webrtc\\Components\\Watermark\\Watermark.js":"77","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\webrtc\\Components\\Navigation\\Navigation.js":"78","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\StudentRequest.js":"79","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSNewRequests.js":"80","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSChatBox.js":"81","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\common\\Socket.js":"82","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSClasses.js":"83","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSClassesDetails.js":"84","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\AcceptStudentRequest.js":"85"},{"size":530,"mtime":1611426446477,"results":"86","hashOfConfig":"87"},{"size":535,"mtime":1611422535659,"results":"88","hashOfConfig":"87"},{"size":362,"mtime":499162500000,"results":"89","hashOfConfig":"87"},{"size":728,"mtime":1611482718529,"results":"90","hashOfConfig":"87"},{"size":858,"mtime":1611506692959,"results":"91","hashOfConfig":"87"},{"size":911,"mtime":1611415250148,"results":"92","hashOfConfig":"87"},{"size":1424,"mtime":1611417927673,"results":"93","hashOfConfig":"87"},{"size":1859,"mtime":1611419657614,"results":"94","hashOfConfig":"87"},{"size":841,"mtime":1611434357841,"results":"95","hashOfConfig":"87"},{"size":1132,"mtime":1611434295059,"results":"96","hashOfConfig":"87"},{"size":2656,"mtime":1611424509725,"results":"97","hashOfConfig":"87"},{"size":2038,"mtime":1611543364983,"results":"98","hashOfConfig":"87"},{"size":292,"mtime":1611508866884,"results":"99","hashOfConfig":"87"},{"size":412,"mtime":1611426658454,"results":"100","hashOfConfig":"87"},{"size":405,"mtime":1611429208168,"results":"101","hashOfConfig":"87"},{"size":725,"mtime":1611432806101,"results":"102","hashOfConfig":"87"},{"size":1200,"mtime":1611435763742,"results":"103","hashOfConfig":"87"},{"size":2545,"mtime":1611431544626,"results":"104","hashOfConfig":"87"},{"size":4124,"mtime":1611462011091,"results":"105","hashOfConfig":"87"},{"size":2785,"mtime":1611508358247,"results":"106","hashOfConfig":"87"},{"size":805,"mtime":1611478385587,"results":"107","hashOfConfig":"87"},{"size":863,"mtime":1611472275083,"results":"108","hashOfConfig":"87"},{"size":3829,"mtime":1611478737920,"results":"109","hashOfConfig":"87"},{"size":643,"mtime":1611482695389,"results":"110","hashOfConfig":"87"},{"size":3459,"mtime":1611482515735,"results":"111","hashOfConfig":"87"},{"size":1368,"mtime":1611482758883,"results":"112","hashOfConfig":"87"},{"size":381,"mtime":1611498831646,"results":"113","hashOfConfig":"87"},{"size":5036,"mtime":1611507467077,"results":"114","hashOfConfig":"87"},{"size":3461,"mtime":1611508184640,"results":"115","hashOfConfig":"87"},{"size":2835,"mtime":1611508610987,"results":"116","hashOfConfig":"87"},{"size":530,"mtime":1611426446477,"results":"117","hashOfConfig":"118"},{"size":3381,"mtime":1612553932861,"results":"119","hashOfConfig":"118"},{"size":362,"mtime":499162500000,"results":"120","hashOfConfig":"118"},{"size":1238,"mtime":1612988819675,"results":"121","hashOfConfig":"118"},{"size":611,"mtime":1612988794769,"results":"122","hashOfConfig":"118"},{"size":911,"mtime":1611415250148,"results":"123","hashOfConfig":"118"},{"size":858,"mtime":1611506692959,"results":"124","hashOfConfig":"118"},{"size":1429,"mtime":1612084120049,"results":"125","hashOfConfig":"118"},{"size":890,"mtime":1612033404473,"results":"126","hashOfConfig":"118"},{"size":1185,"mtime":1612083990888,"results":"127","hashOfConfig":"118"},{"size":2743,"mtime":1612070447407,"results":"128","hashOfConfig":"118"},{"size":863,"mtime":1611472275083,"results":"129","hashOfConfig":"118"},{"size":3147,"mtime":1612025721382,"results":"130","hashOfConfig":"118"},{"size":4426,"mtime":1612706031383,"results":"131","hashOfConfig":"118"},{"size":412,"mtime":1611426658454,"results":"132","hashOfConfig":"118"},{"size":405,"mtime":1611429208168,"results":"133","hashOfConfig":"118"},{"size":2172,"mtime":1612988579394,"results":"134","hashOfConfig":"118"},{"size":7614,"mtime":1612524383220,"results":"135","hashOfConfig":"118"},{"size":4219,"mtime":1612083333490,"results":"136","hashOfConfig":"118"},{"size":2246,"mtime":1611548415270,"results":"137","hashOfConfig":"118"},{"size":807,"mtime":1612019207871,"results":"138","hashOfConfig":"118"},{"size":1859,"mtime":1611419657614,"results":"139","hashOfConfig":"118"},{"size":4788,"mtime":1612032783922,"results":"140","hashOfConfig":"118"},{"size":1907,"mtime":1612010067037,"results":"141","hashOfConfig":"118"},{"size":6025,"mtime":1612010150106,"results":"142","hashOfConfig":"118"},{"size":11296,"mtime":1612032879767,"results":"143","hashOfConfig":"118"},{"size":6305,"mtime":1612083211716,"results":"144","hashOfConfig":"118"},{"size":3719,"mtime":1612211080433,"results":"145","hashOfConfig":"118"},{"size":657,"mtime":1611773913994,"results":"146","hashOfConfig":"118"},{"size":1236,"mtime":1611774047825,"results":"147","hashOfConfig":"118"},{"size":1058,"mtime":1611582277507,"results":"148","hashOfConfig":"118"},{"size":751,"mtime":1612990252585,"results":"149","hashOfConfig":"118"},{"size":188,"mtime":1611584091954,"results":"150","hashOfConfig":"118"},{"size":4515,"mtime":1611650575650,"results":"151","hashOfConfig":"118"},{"size":7293,"mtime":1612032774728,"results":"152","hashOfConfig":"118"},{"size":2621,"mtime":1612992247825,"results":"153","hashOfConfig":"118"},{"size":419,"mtime":1611907100530,"results":"154","hashOfConfig":"118"},{"size":263,"mtime":1611906872818,"results":"155","hashOfConfig":"118"},{"size":5936,"mtime":1612083389846,"results":"156","hashOfConfig":"118"},{"size":4830,"mtime":1612083357808,"results":"157","hashOfConfig":"118"},{"size":5468,"mtime":1612032826969,"results":"158","hashOfConfig":"118"},{"size":10833,"mtime":1612212591951,"results":"159","hashOfConfig":"118"},{"size":450,"mtime":1612024921099,"results":"160","hashOfConfig":"118"},{"size":7803,"mtime":1612073944229,"results":"161","hashOfConfig":"118"},{"size":14875,"mtime":1612556803604,"results":"162","hashOfConfig":"118"},{"size":761,"mtime":1612086132437,"results":"163","hashOfConfig":"118"},{"size":366,"mtime":1612086132506,"results":"164","hashOfConfig":"118"},{"size":1639,"mtime":1612086132476,"results":"165","hashOfConfig":"118"},{"size":8334,"mtime":1612524717989,"results":"166","hashOfConfig":"118"},{"size":2835,"mtime":1612988417452,"results":"167","hashOfConfig":"118"},{"size":5957,"mtime":1612629743965,"results":"168","hashOfConfig":"118"},{"size":1663,"mtime":1612561878381,"results":"169","hashOfConfig":"118"},{"size":2774,"mtime":1612992399211,"results":"170","hashOfConfig":"118"},{"size":1511,"mtime":1612708039970,"results":"171","hashOfConfig":"118"},{"size":8975,"mtime":1612991066686,"results":"172","hashOfConfig":"118"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},"1e1oujq",{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"175"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"175"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"175"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"175"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"175"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"175"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"175"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"175"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"175"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"175"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"175"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"175"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"175"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},"tyxqb7",{"filePath":"250","messages":"251","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"249"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"249"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"249"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"249"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"249"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"249"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"249"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"249"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"249"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"249"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"249"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"249"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"249"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"249"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"249"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"249"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"249"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"249"},{"filePath":"319","messages":"320","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"249"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"249"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"249"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"249"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"249"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"249"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"249"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"249"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"249"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"249"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"249"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"249"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"249"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"249"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"249"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"384","messages":"385","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"249"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\index.js",[],["389","390"],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\App.js",["391"],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\reportWebVitals.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\index.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Header.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Banner.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Services.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Testimonials.js",["392","393"],"\r\nimport React from \"react\";\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nexport default class Testimonials extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div id=\"testimonials\" className=\"section\">\r\n              <Container>\r\n                  <Row>\r\n                      <Col md={12}>\r\n                          <h2 className=\"section-heading\">\r\n                          See what students say about us\r\n                          </h2>\r\n                      </Col>\r\n                  </Row>\r\n                  <Row>\r\n                      <Col md={6}>\r\n                          <p><strong>Good Website</strong></p>\r\n                          <p>I had no idea where to start finding a web tutor for a project I was working on. Thank goodness a Google search led me to Wyzant. They did all the work for me and I found someone excellent!</p>\r\n                          <img src=\"images/tutor2-280x300.jpg\" alt=\"customer image\" />\r\n                          <p className=\"author\"><strong>Neha</strong> from <strong>Lahore </strong></p>\r\n                          {/* <div className=\"author-city\">from Karachi</div> */}\r\n                      </Col>\r\n\r\n                      <Col md={6}>\r\n                          <p><strong>Happy to have found you</strong></p>\r\n                          <p>I am a lawyer struggling with scientific concepts later in life. I find that using Wyzant to shore up my deficiencies has worked well.</p>\r\n                          <img src=\"images/tutor4-740x792.jpg\" alt=\"customer image\" />\r\n                          <p className=\"author\"><strong>Ali</strong> from <strong>Lahore </strong></p>\r\n                          {/* <div className=\"author-city\"></div> */}\r\n                      </Col>\r\n\r\n                  </Row>\r\n              </Container>\r\n          </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\StartTutoringBanner.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\HaveQuestion.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Footer.js",["394","395","396","397","398"],"import React from \"react\";\r\n\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default class Footer extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div id=\"footer\">\r\n              <Container>\r\n                  <Row>\r\n                      <Col md={4}>\r\n                          <div id=\"logo\">\r\n                              <h2>Foster</h2>\r\n                              <p>Et scaevola delicata vix, mea ei invidunt quodsi eripuit definiebas at pri. Placerat voluptaria meleos malis civibus an dolor</p>\r\n                          </div>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                      <h4>Quick Links</h4>\r\n                          <div style={{display: 'flex'}}>\r\n                                <div style={{marginRight:'10px'}}>\r\n                                <p >\r\n                                 <a href=\"\">About Us </a>\r\n                                 </p>\r\n                                 <p>\r\n                                <a href=\"\">Contact Us </a>\r\n                                </p>\r\n                             </div>\r\n\r\n                             <div style={{marginLeft:'10px'}}>\r\n                                <p >\r\n                                 <a href=\"\">Become a Tutor </a>\r\n                                 </p>\r\n                                 <p>\r\n                                <a href=\"\">Hire a Tutor </a>\r\n                                </p>\r\n                             </div>\r\n\r\n\r\n                          </div>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                      <h4>Our Contacts</h4>\r\n                        <div id=\"footer-contact\">\r\n                            <p>\r\n                                <i className=\"fa fa-user\"></i>\r\n                                Evacuee Trust Complex, Islamabad Pakistan\r\n                            </p>\r\n\r\n                            <p>\r\n                                <i className=\"fa fa-envelope\"></i>\r\n                                info@foster.com\r\n                            </p>\r\n                            <p>\r\n                                <i className=\"fa fa-phone\"></i>\r\n                                +92-313-6604801\r\n                            </p>\r\n\r\n                        </div>\r\n                        <div id=\"social-links\" >\r\n                            <i className=\"fa fa-facebook\"></i>\r\n                            <i className=\"fa fa-twitter\"></i>\r\n                        </div>\r\n                      </Col>\r\n                  </Row>\r\n              </Container>\r\n          </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\Router.js",["399"],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\index.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\Home.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\Tutors.js",["400","401","402"],"import React from \"react\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport {  TutorsFilter} from \"./../components\";\r\n\r\n\r\nexport default class Tutors extends React.Component {\r\n \r\n  render(){\r\n    return (\r\n        <div className=\"new-page section\">\r\n            <h2 className=\"section-heading\">Find Your Tutors</h2>\r\n            <TutorsFilter />\r\n           \r\n        </div>\r\n    )\r\n  }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\TutorsFilter.js",["403"],"import React from \"react\";\r\n\r\nimport { Container, Row, Col, Form } from 'react-bootstrap';\r\nimport SearchTutors from \"./SearchTutors\";\r\nimport TutorsFilterControls from \"./TutorsFilterControls\";\r\n\r\nexport default class TutorsFilter extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div>\r\n              <Container>\r\n                    <Row>\r\n                    <Col md={3} >\r\n                       <TutorsFilterControls />\r\n                      </Col>\r\n\r\n                    <Col md={9} >\r\n                        \r\n                       <SearchTutors />\r\n\r\n                    </Col>\r\n\r\n                    </Row>\r\n\r\n                </Container>\r\n              \r\n          </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\SearchTutors.js",["404","405","406","407"],"\r\nimport React from \"react\";\r\n\r\nimport { Container, Row, Col, \r\n    Form, InputGroup, FormControl,\r\n    Button, Badge\r\n  } from 'react-bootstrap';\r\n\r\n  import TutorListInfo from './TutorListInfo.js';\r\n\r\nexport default class SearchTutors extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div>\r\n            <div id=\"tutors-filter-search-box\">\r\n             <Form.Row>\r\n                <Col xs={10}>\r\n                <Form.Label htmlFor=\"inlineFormInput\" >\r\n                    Subject\r\n                </Form.Label>\r\n                <Form.Control placeholder=\"Subject\" />\r\n                </Col>\r\n               \r\n                <Col>\r\n                <Button style={{marginTop:'25px'}} variant=\"btn\" size=\"md\">Search</Button>{' '}\r\n                </Col>\r\n            </Form.Row>\r\n\r\n            <div id=\"tutor-results-info\" style={{marginTop:'25px'}}>\r\n                <h4>Total Found  <Badge variant=\"success\">200</Badge>{' '}</h4>\r\n            </div>\r\n\r\n            </div>\r\n\r\n\r\n            <TutorListInfo />\r\n            <TutorListInfo />\r\n            <TutorListInfo />\r\n            <TutorListInfo />\r\n            <TutorListInfo />\r\n\r\n\r\n              </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\TutorListInfo.js",["408","409","410","411","412","413"],"\r\nimport React from \"react\";\r\n\r\nimport { Container, Row, Col, \r\n    Form, InputGroup, FormControl,\r\n    Button, Badge\r\n  } from 'react-bootstrap';\r\n\r\n\r\nexport default class TutorListInfo extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div id=\"tutors-list-info\">\r\n              <Container>\r\n                  <Row>\r\n                      <Col md={12}  >\r\n                          <div>\r\n                              <a href=\"\" style={{display:'flex',}}>\r\n                          <div id=\"tutors-details-list\" style={{display:'flex'}}>\r\n                              <img src=\"images/tutor2-280x300.jpg\" alt=\"tutor image\" />\r\n                              <div>\r\n                              <h4>Muhammad BIlal</h4>\r\n                              <h6>Math expertiese</h6>\r\n                              <p>\r\n                              <Badge variant=\"success\">Math 1</Badge>{' '}\r\n                              <Badge variant=\"success\">Math 2</Badge>{' '}\r\n                              <Badge variant=\"success\">Math 3</Badge>{' '}\r\n                              </p>\r\n                              <p>\r\n                              ASSALAM o ALAIKUM ! I am well qualified and verified tutor . I love teaching coz i really enjoy it .\r\n                              </p>\r\n                              </div>\r\n                          </div>\r\n\r\n                          <div id=\"tutor-scoring-board\" className=\"float-md-right\">\r\n                              <p><strong>Rs400/hour</strong></p>\r\n                              <p>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                              <strong> 5 </strong>\r\n                              (4)\r\n                              </p>\r\n                              <p>\r\n                                  Offers \r\n                                  <strong> Online Classes</strong> &\r\n                                  <strong> In Person Classes</strong>\r\n                              </p>\r\n                           </div>\r\n\r\n                           </a>\r\n                           </div>\r\n                            \r\n                      </Col>\r\n                  </Row>\r\n              </Container>\r\n             \r\n           </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\TutorsFilterControls.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\Register.js",["414","415"],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\Dashboard.js",["416","417","418","419","420"],"import React from \"react\";\r\nimport { Container, Row, Col, Accordion, Card } from 'react-bootstrap';\r\nimport {  DSHeader, DSMenu, DSContent} from \"./../components\";\r\n\r\nexport default class Dashboard extends React.Component {\r\n \r\n  render(){\r\n    return (\r\n\r\n      <div id=\"dashboard\">\r\n          <DSHeader />\r\n          <div style={{display:'flex'}}>\r\n          <DSMenu />\r\n          <DSContent />\r\n          </div>\r\n          \r\n          {/* <Container>\r\n                <Row>\r\n                    <Col md={{span:3}} style={{marginLeft:0}}>\r\n                    \r\n                    </Col>\r\n                    <Col md={{span:9}}>\r\n                   \r\n                    </Col>\r\n                </Row>\r\n            </Container> */}\r\n         \r\n            \r\n\r\n         \r\n      </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSHeader.js",["421"],"\r\nimport React from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nexport default class DSHeader extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div id=\"header\" className=\"\">\r\n            <Container>\r\n            <Row>\r\n            <Col xs={4}>\r\n                <h1 id=\"logo\"> Foster </h1>\r\n            </Col>\r\n            <Col xs={8}>\r\n              {/* <ul id=\"menu\" className=\"float-md-right\">\r\n                <li> <Link to=\"/\">Home</Link> </li>\r\n                <li> <Link to=\"/tutors\">Find A Tutor</Link> </li>\r\n                <li> <Link to=\"/login\">Login</Link> </li>\r\n                <li> <Link to=\"/register\">Register</Link> </li>\r\n              </ul> */}\r\n            </Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n      </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSMenu.js",["422","423"],"\r\nimport React from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Accordion, Card } from 'react-bootstrap';\r\n\r\n\r\nexport default class DSMenu extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div id=\"dashboar-menu\">\r\n               <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n              <div id=\"dashboar-menu-heading\">\r\n              <img src=\"images/tutor4-740x792.jpg\" alt=\"user profile image\" />\r\n              <h4>Muhammad Bilal </h4>\r\n              {/* <p>\r\n                  <i className=\"fa fa-user\">\r\n                  </i>\r\n                  View Profile\r\n              </p> */}\r\n              </div>\r\n              <h5>Dashboard </h5>\r\n              \r\n            <Accordion defaultActiveKey=\"0\" id=\"menue-accordion\">\r\n            <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\" >\r\n                Profile\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\" className=\"accordions-links\">\r\n                <Card.Body>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link class=\"nav-link active\" to=\"/dashboard/about\">About</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link class=\"nav-link active\" to=\"/dashboard/contact\">Contact Info</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link class=\"nav-link active\" to=\"/\">Expertise</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link class=\"nav-link active\" to=\"/\">Education</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link class=\"nav-link active\" to=\"/\">Location</Link>\r\n                    </p>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            \r\n\r\n            <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"1\" >\r\n                Account\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"1\" className=\"accordions-links\">\r\n                <Card.Body>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                    <Link class=\"nav-link\" to=\"/\">Messages</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                    <Link class=\"nav-link\" to=\"/\">Online Classes</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link class=\"nav-link\" to=\"#\">Get Verified</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link class=\"nav-link\" to=\"/\">Student Reviews</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link class=\"nav-link active\" to=\"/\">Location</Link>\r\n                    </p>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n\r\n            </Accordion>\r\n            \r\n            <ul class=\"nav flex-column\">\r\n              \r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link \" href=\"#\">Log Out</a>\r\n                </li>\r\n                </ul>\r\n           \r\n                </Col>\r\n                </Row>\r\n            </Container>\r\n            </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSContent.js",["424","425","426","427","428","429"],"import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col, Accordion, Card } from 'react-bootstrap';\r\nimport { DSAbout, DSContact } from \"../components\";\r\n\r\nexport default class DSContent extends React.Component {\r\n \r\n  render(){\r\n    return (\r\n      \r\n            <Switch>\r\n                  <Route path=\"/dashboard/about\">\r\n                  <DSAbout />\r\n                  </Route>\r\n\r\n                  <Route path=\"/dashboard/contact\">\r\n                  <DSContact />\r\n                  </Route>\r\n\r\n            </Switch>\r\n        \r\n    )\r\n  }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSAbout.js",["430"],"import React from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default class DSAbout extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n        <div className=\"section\">\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:12, offset:4}}>\r\n                <h2 className=\"section-heading\">Personal Information</h2>\r\n                <Form>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Bilal\" />\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group as={Col} controlId=\"formGridEmail1\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Ali\" />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n                    <Form.Group controlId=\"tagline\">\r\n                        <Form.Label>Tagline </Form.Label>\r\n                        <Form.Control placeholder=\"Tagline\" />\r\n                    </Form.Group>\r\n                   \r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridFees\">\r\n                        <Form.Label>Fees</Form.Label>\r\n                        <Form.Control />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Per</Form.Label>\r\n                        <Form.Control as=\"select\" defaultValue=\"Month\">\r\n                            <option>Month</option>\r\n                            <option>Week</option>\r\n                            <option>Hour</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n\r\n                    <Form.Row>\r\n                        \r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Gender</Form.Label>\r\n                        <Form.Control as=\"select\" defaultValue=\"\">\r\n                            <option></option>\r\n                            <option>Male</option>\r\n                            <option>Female</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n                    <Form.Group controlId=\"formGridAddress2\">\r\n                        <Form.Label>What makes you a great tutor? </Form.Label>\r\n                        <Form.Control placeholder=\"tell students why your are the best\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridAddress2\">\r\n                        <Form.Label>Teaching experience</Form.Label>\r\n                        <Form.Control placeholder=\"mention your experience\" />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group id=\"formGridCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSContact.js",["431"],"import React from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default class DSContact extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n        <div className=\"section\">\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:12, offset:4}}>\r\n                <h2 className=\"section-heading\">Contact Information</h2>\r\n                <Form>\r\n                   \r\n                    <Form.Group controlId=\"formGridAddress2\">\r\n                        <Form.Label>Phone Number</Form.Label>\r\n                        <Form.Control placeholder=\"03136604801\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridAddress2\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control placeholder=\"bilal@gmail.com\" />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group id=\"formGridCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Make it public\" />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Update\r\n                    </Button>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\HttpClient.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\views\\register-view.js",["432"],"\r\nimport React, {setState} from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup, Spinner } from 'react-bootstrap';\r\n\r\n\r\nfunction RegisterView (props){\r\n    return (\r\n        <div id=\"register\" className=\"section\">\r\n        <Container>\r\n            <Row>\r\n                <Col md={5} id=\"register-left-side\">\r\n                    <h1>\r\n                        Welcome To Foster!\r\n                    </h1>\r\n                    <p>\r\n                        Meet with your tutor. We provide best online tutoring service.\r\n                    </p>\r\n                    <Link className=\"btn-link\" to=\"/login\" size=\"lg\">Login</Link>{' '}\r\n                </Col>\r\n\r\n                <Col md={7}  id=\"register-signup\">\r\n                    <div>\r\n                        <h2>\r\n                            Foster\r\n                        </h2>\r\n                        <p>\r\n                            Sign up with your email.\r\n                        </p>\r\n                        <Row>\r\n                            <Col md={{span:10, offset:2}}>\r\n                        <Form >\r\n                        \r\n                        <Form.Label htmlFor=\"inlineFormInputGroupUsername\" srOnly>\r\n                              Email\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" id=\"inlineFormInputGroupUsername\" placeholder=\"Username\" />\r\n                          </InputGroup>\r\n                          \r\n                          <Form.Label htmlFor=\"inlineFormInputGroupUsername\" srOnly>\r\n                              Name\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" id=\"inlineFormInputGroupUsername\" placeholder=\"Name\" />\r\n                          </InputGroup>\r\n\r\n                          <Form.Label htmlFor=\"inlineFormInputGroupUsername\" srOnly>\r\n                              Password\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" id=\"inlineFormInputGroupUsername\" placeholder=\"Password\" />\r\n                          </InputGroup>\r\n\r\n                          <Form.Label htmlFor=\"inlineFormInputGroupUsername\" srOnly>\r\n                              Confirm Password\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" id=\"inlineFormInputGroupUsername\" placeholder=\"Password\" />\r\n                          </InputGroup>\r\n\r\n                          <Form.Label htmlFor=\"inlineFormInputGroupUsername\" srOnly>\r\n                              City\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" id=\"inlineFormInputGroupUsername\" placeholder=\"City\" />\r\n                          </InputGroup>\r\n\r\n\r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={props.loading} className=\"btn-dark\" onClick={props.submitSignUp}>\r\n                               {props.loading && <Spinner\r\n                              as=\"span\"\r\n                              animation=\"grow\"\r\n                              size=\"sm\"\r\n                              role=\"status\"\r\n                              aria-hidden=\"true\"\r\n                              />}\r\n                              Sign Up\r\n                          </Button>\r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                        </Row>\r\n                            \r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default RegisterView","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\views\\login-view.js",["433"],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\views\\forgot-password.js",["434"],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\index.js",[],["435","436"],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\Router.js",["437","438","439"],"\r\nimport React from \"react\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n\r\nimport './App.css';\r\n\r\n/**import components */\r\nimport  {Header, Footer, }  from \"./components\";\r\n\r\nimport  {Home, Tutors, Register,  \r\n  Dashboard, ForgotPasswordView,\r\n  VerifyEmail,\r\n  ResetPassword,\r\n  ViewProfile,\r\n  ContactUs,\r\n  StudentRequest\r\n }  from \"./pages\";\r\n\r\n import { DSChatBox } from \"./components\";\r\n import Dashboard2 from \"./pages/Dashboard/Dashboard\";\r\n// React Notification\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer } from 'react-notifications';\r\n\r\nimport WebrtcApp from \"./webrtc/App\";\r\n\r\nexport default class App extends React.Component {\r\n    render(){\r\n\r\n        return (<div>\r\n           <NotificationContainer/>\r\n            <Router>\r\n            <Header />\r\n          \r\n        \r\n                {/*\r\n                  A <Switch> looks through all its children <Route>\r\n                  elements and renders the first one whose path\r\n                  matches the current URL. Use a <Switch> any time\r\n                  you have multiple routes, but you want only one\r\n                  of them to render at a time\r\n                */}\r\n                <Switch>\r\n                  <Route exact path=\"/\">\r\n                  {/* <Header /> */}\r\n                   <Home />\r\n                  \r\n                  </Route>\r\n\r\n                  <Route path=\"/customers/:id/verify/:code\" render={(props) => <VerifyEmail {...props} />} />\r\n                  <Route path=\"/customers/:customerId/reset-password\" render={(props) => <ResetPassword {...props} />} />\r\n                 \r\n\r\n                  <Route path=\"/login\">\r\n                    <Register />\r\n                   \r\n                  </Route>\r\n                  <Route path=\"/register\">\r\n                    <Register />\r\n                  \r\n                  </Route>\r\n                  <Route path=\"/forgotpassword\">\r\n                    <Register />\r\n                   \r\n                  </Route>\r\n                  <Route path=\"/tutors\">\r\n                    <Tutors />\r\n                  </Route>\r\n                  \r\n                  <Route path=\"/dashboard\">\r\n                    <Dashboard />\r\n                    {/* <Dashboard2 /> */}\r\n                   \r\n                  </Route>\r\n                  \r\n                  \r\n                  <Route path=\"/contact-us\">\r\n                    <ContactUs />\r\n                   \r\n                  </Route>\r\n                 \r\n                 \r\n                  <Route path=\"/webrtc\">\r\n                    <WebrtcApp />\r\n                  </Route>\r\n                  \r\n                  \r\n                  <Route path=\"/profile/:id\" render={(props) => <ViewProfile {...props} />} >\r\n                                        \r\n                  </Route>\r\n                  \r\n                  <Route path=\"/request/to/:tutorId\" render={(props) => <StudentRequest {...props} />} >\r\n                                        \r\n                  </Route>\r\n\r\n                  \r\n\r\n                 \r\n                </Switch>\r\n             \r\n                <Footer />\r\n           \r\n            </Router>\r\n            </div>\r\n          )\r\n    }\r\n  \r\n}\r\n\r\n// You can think of these components as \"pages\"\r\n// in your app.\r\n\r\n\r\n","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\reportWebVitals.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\index.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\index.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Banner.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Header.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Services.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\StartTutoringBanner.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\HaveQuestion.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Footer.js",["440","441"],"import React from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default class Footer extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div id=\"footer\">\r\n              <Container>\r\n                  <Row>\r\n                      <Col md={4}>\r\n                          <div id=\"logo\">\r\n                              <h2>Foster</h2>\r\n                              <p>Et scaevola delicata vix, mea ei invidunt quodsi eripuit definiebas at pri. Placerat voluptaria meleos malis civibus an dolor</p>\r\n                          </div>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                      <h4>Quick Links</h4>\r\n                          <div style={{display: 'flex'}}>\r\n                                <div style={{marginRight:'10px'}}>\r\n                                <p >\r\n                                 <a href=\"\">About Us </a>\r\n                                 </p>\r\n                                 <p>\r\n                                <Link to=\"/contact-us\">Contact Us </Link>\r\n                                </p>\r\n                             </div>\r\n\r\n                             <div style={{marginLeft:'10px'}}>\r\n                                <p >\r\n                                 <Link to=\"/register\">Become a Tutor </Link>\r\n                                 </p>\r\n                                 <p>\r\n                                <Link to=\"/tutors\">Hire a Tutor </Link>\r\n                                </p>\r\n                             </div>\r\n\r\n\r\n                          </div>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                      <h4>Our Contacts</h4>\r\n                        <div id=\"footer-contact\">\r\n                            <p>\r\n                                <i className=\"fa fa-user\"></i>\r\n                                Evacuee Trust Complex, Islamabad Pakistan\r\n                            </p>\r\n\r\n                            <p>\r\n                                <i className=\"fa fa-envelope\"></i>\r\n                                info@foster.com\r\n                            </p>\r\n                            <p>\r\n                                <i className=\"fa fa-phone\"></i>\r\n                                +92-313-6604801\r\n                            </p>\r\n\r\n                        </div>\r\n                        <div id=\"social-links\" >\r\n                            <i className=\"fa fa-facebook\"></i>\r\n                            <i className=\"fa fa-twitter\"></i>\r\n                        </div>\r\n                      </Col>\r\n                  </Row>\r\n              </Container>\r\n          </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSHeader.js",["442"],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\TutorsFilter.js",["443","444","445","446","447"],"import React, {useState, useEffect} from \"react\";\r\n\r\nimport { Container, Row, Col, Form } from 'react-bootstrap';\r\nimport SearchTutors from \"./SearchTutors\";\r\nimport TutorsFilterControls from \"./TutorsFilterControls\";\r\nimport { getTutors } from \"../services\";\r\nimport {useForm} from 'react-hook-form';\r\nimport Spinner from './common/Spinner';\r\n\r\n\r\nexport default function TutorsFilter() {\r\n  const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [tutors, setTutors] = useState([]);\r\n    const [totalTutors, setTotalTutors] = useState(0);\r\n    const [tutorFilter, settutorFilter] = useState({});\r\n    const [subject, setsubject] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n      // get user and set form fields\r\n      setIsLoading(true)\r\n      getTutors().then(tutors => {\r\n        setIsLoading(false)\r\n          setTutors(tutors);\r\n          setTotalTutors(tutors.length)\r\n      }).catch(error=>{\r\n        setIsLoading(false)\r\n        console.log(error)\r\n      })\r\n    }, []);\r\n\r\n\r\n    const findTutorsBySubject = (data)=>{\r\n    console.log(data)\r\n    setsubject(data.subject)\r\n\r\n    let filter = tutorFilter\r\n    if(data.subject){\r\n      filter.teachingSubjects = data.subject\r\n    }else {\r\n      delete filter.teachingSubjects\r\n    }\r\n \r\n    filterTutors(filter)\r\n      \r\n    }\r\n\r\n    const applyFilterOnSearchTutors = (data)=>{\r\n      //console.log(data)\r\n      \r\n      let fltr = data || tutorFilter\r\n      fltr = JSON.parse(JSON.stringify(fltr))\r\n\r\n      if(fltr.feesRange === \"\" || fltr.feesRange === \"0\") {\r\n        delete fltr.fees\r\n        delete fltr.feesRange\r\n      }\r\n      else {\r\n        fltr.fees = {gt:parseInt(fltr.feesRange)}\r\n        delete fltr.feesRange\r\n      }\r\n      if(fltr.feesPer === \"\") delete fltr.feesPer\r\n      if(fltr.teachingCity === \"\") delete fltr.teachingCity\r\n      if(fltr.gender === \"\") delete fltr.gender\r\n\r\n      settutorFilter(fltr)\r\n      if(subject){\r\n        fltr.teachingSubjects = subject\r\n      }\r\n     \r\n      filterTutors(fltr)\r\n      }\r\n    \r\n      function filterTutors (filter){\r\n        setIsLoading(true)\r\n        getTutors(filter).then(tutors => {\r\n          setIsLoading(false)\r\n          setTutors(tutors);\r\n          setTotalTutors(tutors.length)\r\n        }).catch(error=>{\r\n          setIsLoading(false)\r\n          console.log(error)\r\n        })\r\n      }\r\n\r\n      return (\r\n          <div>\r\n            {isLoading && <Spinner />}\r\n              <Container>\r\n                    <Row>\r\n                    <Col md={3} >\r\n                       <TutorsFilterControls\r\n                      filterTutors={applyFilterOnSearchTutors}\r\n                       />\r\n                      </Col>\r\n\r\n                    <Col md={9} >\r\n                        \r\n                       <SearchTutors \r\n                        totalTutors={totalTutors}\r\n                        tutors={tutors}\r\n                        findTutors={findTutorsBySubject}\r\n                       />\r\n\r\n                    </Col>\r\n\r\n                    </Row>\r\n\r\n                </Container>\r\n              \r\n          </div>\r\n      )\r\n    \r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSMenu.js",["448","449","450","451"],"\r\nimport React, {useState, useEffect, useRef} from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Accordion, Card } from 'react-bootstrap';\r\n\r\n\r\nexport default function DSMenu () {\r\n\r\n    const [customer, setcustomer] = useState({});\r\n    const [customerName, setcustomerName] = useState('');\r\n    const [customerImage, setcustomerImage] = useState('');\r\n\r\n  \r\n      \r\n  useEffect(() => {\r\n  \r\n    let user = localStorage.getItem('user')\r\n    if(!user){\r\n        window.location.href = '/'\r\n        return\r\n    }\r\n    user = JSON.parse(user)\r\n    setcustomerName(user.firstName +' '+ user.lastName)\r\n    setcustomerImage(user.imageUrl)\r\n   \r\n  }, []);\r\n\r\n      return (\r\n          <div id=\"dashboar-menu\">\r\n               <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n              <div id=\"dashboar-menu-heading\">\r\n              <img src={customerImage ? customerImage : '/images/tutor4-740x792.jpg'} alt=\"user profile image\" />\r\n              <h4>{customerName} </h4>\r\n              {/* <p>\r\n                  <i className=\"fa fa-user\">\r\n                  </i>\r\n                  View Profile\r\n              </p> */}\r\n              </div>\r\n              <h5>Dashboard </h5>\r\n              \r\n            <Accordion defaultActiveKey=\"0\" id=\"menue-accordion\">\r\n            <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\" >\r\n                Profile\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\" className=\"accordions-links\">\r\n                <Card.Body>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link className=\"nav-link active\" to=\"/dashboard/about\">About</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link className=\"nav-link active\" to=\"/dashboard/contact\">Contact Info</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link className=\"nav-link active\" to=\"/dashboard/expertise\">Expertise</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link className=\"nav-link active\" to=\"/dashboard/education\">Education</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link className=\"nav-link active\" to=\"/dashboard/mediums\">Teaching Mediums</Link>\r\n                    </p>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            \r\n\r\n            <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"1\" >\r\n                Account\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"1\" className=\"accordions-links\">\r\n                <Card.Body>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                    <Link className=\"nav-link\" to=\"/dashboard/new-requests\">New Requests</Link>\r\n                    </p>\r\n                    {/* <p>\r\n                    <i className=\"fa fa-user\"> </i>\r\n                    <Link className=\"nav-link\" to=\"/\">Online Classes</Link>\r\n                    </p>\r\n                    <p>\r\n                    <i className=\"fa fa-user\"> </i>\r\n                        <Link className=\"nav-link\" to=\"#\">Get Verified</Link>\r\n                    </p> */}\r\n                    {/* <p>\r\n                        <Link className=\"nav-link\" to=\"#\">Student Reviews</Link>\r\n                    </p> */}\r\n                    <p>\r\n                        <Link className=\"nav-link\" to=\"/dashboard/classes\">Classes</Link>\r\n                    </p>\r\n                    \r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n\r\n            </Accordion>\r\n            \r\n            <ul className=\"nav flex-column\">\r\n              \r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link \" to=\"/login\" onClick={()=> localStorage.clear()}>Log Out</Link>\r\n                </li>\r\n                </ul>\r\n           \r\n                </Col>\r\n                </Row>\r\n            </Container>\r\n            </div>\r\n      )\r\n    \r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Home.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Tutors.js",["452","453","454"],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSContent.js",["455"],"import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\nimport { DSAbout, DSContact, DSExpertise,\r\n  DSEducation,\r\n  DSMediums,\r\n  DSNewRequests,\r\n  DSChatBox,\r\n  DSClasses,\r\n  DSClassesDetails,\r\n  AcceptStudentRequest,\r\n } from \"../components\";\r\n\r\n import Socket from \"../components/common/Socket.js\";\r\n\r\nexport default class DSContent extends React.Component {\r\n \r\n  render(){\r\n    return (\r\n        <div>\r\n          <Socket />\r\n\r\n            <Switch>\r\n                  <Route path=\"/dashboard/about\">\r\n                  <DSAbout />\r\n                  </Route>\r\n\r\n                  <Route path=\"/dashboard/contact\">\r\n                  <DSContact />\r\n                  </Route>\r\n                  \r\n                  <Route path=\"/dashboard/expertise\">\r\n                  <DSExpertise />\r\n                  </Route>\r\n                  \r\n                  <Route path=\"/dashboard/education\">\r\n                  <DSEducation />\r\n                  </Route>\r\n                 \r\n                  <Route path=\"/dashboard/mediums\">\r\n                  <DSMediums />\r\n                  </Route>\r\n                 \r\n                  <Route path=\"/dashboard/new-requests\">\r\n                  <DSNewRequests />\r\n                  </Route>\r\n                  \r\n                  <Route path=\"/dashboard/chat-box/:to?\" render={(props) => <DSChatBox {...props} />} >\r\n                                                          \r\n                   </Route>\r\n\r\n                   <Route path=\"/dashboard/classes\">\r\n                  <DSClasses />\r\n                  </Route>\r\n\r\n\r\n                  <Route path=\"/dashboard/class/detail/:instructor\" render={(props) => <DSClassesDetails {...props} />} >\r\n                                                          \r\n                  </Route>\r\n                  \r\n                  <Route path=\"/dashboard/accept-request/:requestId/from/:requestFrom\" render={(props) => <AcceptStudentRequest {...props} />} >\r\n                                                          \r\n                  </Route>\r\n                 \r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n  }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSAbout.js",["456"],"import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\nfunction DSAbout  (props){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [customer, setCustomer] = useState({});\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    const onSubmit = (data) => {\r\n       if(data.fees){\r\n           data.fees = parseInt(data.fees)\r\n       }else {\r\n           delete data.fees\r\n       }\r\n       //data.userType = customer.userType;\r\n       let postData = {...customer, ...data};\r\n       setIsLoading(true)\r\n    updateCustomerInfo(postData, {customerId: userId})\r\n    .then(result =>{\r\n        setIsLoading(false)\r\n        //console.log(result)\r\n        NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n    })\r\n    .catch(error=>{\r\n        setIsLoading(false)\r\n       // console.log(error)\r\n        NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n    })\r\n    }\r\n\r\n    useEffect(() => {\r\n            // get user and set form fields\r\n            setIsLoading(true)\r\n            getCustomerById(userId).then(customer => {\r\n                setIsLoading(false)\r\n                const fields = ['firstName',\r\n                 'lastName',\r\n                 'tagLine',\r\n                 'fees',\r\n                 'feesPer',\r\n                 'gender',\r\n                 'greateTutorLine',\r\n                 'greateTutorLine',\r\n                 'teachingExperienceLine',\r\n                ];\r\n                fields.forEach(field => setValue(field, customer[field]));\r\n                setCustomer(customer);\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, []);\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n        {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:12, offset:4}}>\r\n                <h2 className=\"section-heading\">Personal Information</h2>\r\n                <Form >\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"firstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        placeholder=\"FirstName\" \r\n                        name=\"firstName\"\r\n                        value={props.firstName}\r\n                        ref={register({required: 'firstName is required!'})}\r\n                        />\r\n                        </Form.Group>\r\n                        \r\n\r\n                        <Form.Group as={Col} controlId=\"lastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        placeholder=\"last Name\" \r\n                        name=\"lastName\"\r\n                        value={props.lastName}\r\n                        ref={register({required:'last name is required'})}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n                    {errors.firstName && <p>{errors.firstName.message}</p> }\r\n                    {errors.lastName && <p>{errors.lastName.message}</p> }\r\n\r\n                    <Form.Group controlId=\"tagline\">\r\n                        <Form.Label>Tagline </Form.Label>\r\n                        <Form.Control placeholder=\"Tagline\"\r\n                        name=\"tagLine\"\r\n                        value={props.tagLine}\r\n                        ref={register()}\r\n                        />\r\n                    </Form.Group>\r\n                   \r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"fees\">\r\n                        <Form.Label>Fees</Form.Label>\r\n                        <Form.Control \r\n                        type=\"number\"\r\n                        placeholder=\"fees\"\r\n                        name=\"fees\"\r\n                        value={props.fees}\r\n                        ref={register()}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Per</Form.Label>\r\n                        <Form.Control as=\"select\" \r\n                        defaultValue=\"Month\"\r\n                        name=\"feesPer\"\r\n                        value={props.feesPer}\r\n                        ref={register()}\r\n                        >\r\n                            {/* <option  /> */}\r\n                            <option value=\"month\" >Month</option>\r\n                            <option value=\"week\">Week</option>\r\n                            <option value=\"hour\">Hour</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n\r\n                    <Form.Row>\r\n                        \r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Gender</Form.Label>\r\n                        <Form.Control as=\"select\" \r\n                        name=\"gender\"\r\n                        value={props.gender}\r\n                        ref={register()}\r\n                        defaultValue=\"\"\r\n                        >\r\n                            <option />\r\n                            <option>Male</option>\r\n                            <option>Female</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n                    <Form.Group controlId=\"greateTutorLine\">\r\n                        <Form.Label>What makes you a great tutor? </Form.Label>\r\n                        <Form.Control \r\n                        placeholder=\"tell students why your are the best\" \r\n                        as=\"textarea\"\r\n                        name=\"greateTutorLine\"\r\n                        value={props.greateTutorLine}\r\n                        ref={register()}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridAddress2\">\r\n                        <Form.Label>Teaching experience</Form.Label>\r\n                        <Form.Control \r\n                        placeholder=\"mention your experience\" \r\n                        as=\"textarea\"\r\n                        name=\"teachingExperienceLine\"\r\n                        value={props.teachingExperienceLine}\r\n                        ref={register()}\r\n                        />\r\n                    </Form.Group>\r\n\r\n\r\n                    {/* <Form.Group id=\"formGridCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group> */}\r\n\r\n                    <Form.Row>\r\n                    <Button as={Col}  className=\"btn-dark\"\r\n                     disabled={isLoading}\r\n                     size=\"sm\"\r\n                     md={{span:8, offset:2}}\r\n                     onClick={handleSubmit(onSubmit)}\r\n                     >\r\n                        Update Personal information\r\n                    </Button>\r\n                    </Form.Row>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSAbout","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSContact.js",["457"],"import React, {useState, useEffect} from \"react\";\r\n\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nexport default function DSContact (props) {\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [customer, setCustomer] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    let userId = localStorage.getItem('userId')\r\n\r\nconst onSubmit = (data) => {\r\n       \r\n       let postData = {...customer, ...data};\r\n       setIsLoading(true)\r\n    updateCustomerInfo(postData, {customerId: userId})\r\n    .then(result =>{\r\n        setIsLoading(false)\r\n        //console.log(result)\r\n        NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n    })\r\n    .catch(error=>{\r\n        setIsLoading(false)\r\n        console.log(error)\r\n        NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n    })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // get user and set form fields\r\n        setIsLoading(true)\r\n        getCustomerById(userId).then(customer => {\r\n            setIsLoading(false)\r\n            const fields = [\r\n             'phone',\r\n             'email',\r\n             'addressLine',\r\n             'isPublicContactInfo',\r\n             \r\n             \r\n            ];\r\n            fields.forEach(field => setValue(field, customer[field]));\r\n            setCustomer(customer);\r\n        }).catch(error=>{\r\n            setIsLoading(false)\r\n            console.log(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n        })\r\n    }, []);\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n            {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:12, offset:6}}>\r\n                <h2 className=\"section-heading\">Contact Information</h2>\r\n                <Form>\r\n                   \r\n                    <Form.Group controlId=\"phone\">\r\n                        <Form.Label>Phone Number</Form.Label>\r\n                        <Form.Control placeholder=\"phone number\" \r\n                        name=\"phone\"\r\n                        value={props.phone}\r\n                        ref={register({required:'phone number is required.'})}\r\n                        />\r\n                    </Form.Group>\r\n                    {errors.phone && <p>{errors.phone.message}</p> }\r\n                   \r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control placeholder=\"Email address\"\r\n                        name=\"email\"\r\n                        \r\n                        ref={register({required:'email is required.'})}\r\n                        />\r\n                    </Form.Group>\r\n                    {errors.email && <p>{errors.email.message}</p> }\r\n\r\n                    <Form.Group controlId=\"addressLine\">\r\n                        <Form.Label>Living Address</Form.Label>\r\n                        <Form.Control placeholder=\"enter your address\"\r\n                        name=\"addressLine\"\r\n                        as=\"textarea\"\r\n                        ref={register()}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group id=\"isPublicContactInfo\">\r\n                        <Form.Check type=\"checkbox\"\r\n                         label=\"Make it public\"\r\n                         name=\"isPublicContactInfo\"\r\n                         ref={register()}\r\n                         />\r\n                    </Form.Group>\r\n\r\n                    <Button \r\n                    as={Col}  className=\"btn-dark\"\r\n                     disabled={isLoading}\r\n                     size=\"sm\"\r\n                     md={{span:6, offset:3}}\r\n                     onClick={handleSubmit(onSubmit)}\r\n                    >\r\n                        Update\r\n                    </Button>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Register.js",["458","459"],"\r\nimport React, {setState} from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\n\r\nimport RegisterView from \"./views/register-view\";\r\nimport LoginView from \"./views/login-view\";\r\nimport ForgotPasswordView from \"./views/forgot-password\";\r\n\r\nexport default class Register extends React.Component {\r\n\r\n    // constructor (){\r\n    //     super()\r\n    //     this.state = {\r\n    //         loading: false,\r\n    //         locationPath: '/register'\r\n    //     }\r\n\r\n    //     this.submitSignUp = this.submitSignUp.bind(this)\r\n    //     // this.showLoginView = this.showLoginView.bind(this)\r\n    // }\r\n  \r\n    \r\n\r\n    componentDidMount(){\r\n       \r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            \r\n            <Switch>\r\n                  <Route path=\"/register\">\r\n                  <RegisterView />\r\n                  </Route>\r\n\r\n                  <Route path=\"/login\">\r\n                  <LoginView />\r\n                  </Route>\r\n                  \r\n                  <Route path=\"/forgotpassword\">\r\n                  <ForgotPasswordView />\r\n                  </Route>\r\n                  \r\n                  \r\n                  {/* <Route path=\"/forgotpassword\" component={ForgotPasswordView} /> */}\r\n\r\n            </Switch>\r\n        )\r\n    //   return (\r\n    //       <span>\r\n    //            {this.state.locationPath === '/register'? <RegisterView \r\n    //             submitSignUp={this.submitSignUp}\r\n    //             showLoginView={()=> this.setState({locationPath:'/login'})}\r\n    //      />: null }\r\n\r\n    //         {this.state.locationPath === '/login'? <LoginView \r\n    //             submitSignIn={this.submitSignUp}\r\n    //             showRegisterView={()=> this.setState({locationPath:'/register'})}\r\n    //             forgotPassword={()=> this.setState({locationPath:'/forgot-password'})}\r\n    //      />: null }\r\n           \r\n    //         {this.state.locationPath === '/forgot-password'? <ForgotPassword \r\n    //             submitSignIn={this.submitSignUp}\r\n    //             showRegisterView={()=> this.setState({locationPath:'/register'})}\r\n                \r\n    //      />: null }\r\n    //       </span>\r\n        \r\n         \r\n\r\n    //   )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Dashboard.js",["460","461","462","463","464"],"import React from \"react\";\r\nimport { Container, Row, Col, Accordion, Card } from 'react-bootstrap';\r\nimport {  DSHeader, DSMenu, DSContent} from \"./../components\";\r\n\r\n\r\nexport default class Dashboard extends React.Component {\r\n \r\n  render(){\r\n    return (\r\n\r\n      <div id=\"dashboard\">\r\n          <DSHeader />\r\n          <div style={{display:'flex'}}>\r\n          <DSMenu />\r\n          <DSContent />\r\n          </div>\r\n          \r\n          {/* <Container>\r\n                <Row>\r\n                    <Col md={{span:3}} style={{marginLeft:0}}>\r\n                    \r\n                    </Col>\r\n                    <Col md={{span:9}}>\r\n                   \r\n                    </Col>\r\n                </Row>\r\n            </Container> */}\r\n         \r\n            \r\n\r\n         \r\n      </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Testimonials.js",["465","466"],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\views\\forgot-password.js",["467","468","469","470","471","472"],"\r\nimport React, {setState, useState} from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup, } from 'react-bootstrap';\r\n\r\nimport {useForm} from 'react-hook-form';\r\nimport { MessageBox, forGotPassword } from \"../../services\"\r\nimport Spinner from '../../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction ForgotPasswordView (props){\r\n\r\n    const { register, handleSubmit, errors, watch } = useForm();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n    const onSubmit = (data) => {\r\n        setIsLoading(true)\r\n        forGotPassword(data)\r\n        .then((responseJson) => {\r\n            setIsLoading(false)\r\n            // Do something with the response\r\n            console.log('responseJson', responseJson)\r\n            if(responseJson.ok === false){\r\n                NotificationManager.error(responseJson.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n            if(responseJson.resultCode && responseJson.resultCode != 2001 ){\r\n                NotificationManager.error(responseJson.message, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n          \r\n            window.location.href =`/customers/${responseJson.customerId}/reset-password`;\r\n        \r\n\r\n          })\r\n          .catch((error) => {\r\n            setIsLoading(false)\r\n            console.trace(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n          });\r\n    };\r\n\r\n\r\n    return (\r\n        <div id=\"register\" className=\"section\">\r\n            {isLoading && <Spinner />}\r\n            <MessageBox\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n            />\r\n        <Container>\r\n            <Row>\r\n                <Col md={5} id=\"register-left-side\">\r\n                    <h1>\r\n                        Welcome To Foster!\r\n                    </h1>\r\n                    <p>\r\n                        Meet with your tutor. We provide best online tutoring service.\r\n                    </p>\r\n                    <Link className=\"btn-link\" to=\"/register\" size=\"lg\">Register</Link>{' '}\r\n                </Col>\r\n\r\n                <Col md={7}  id=\"register-signup\">\r\n                    <div>\r\n                        <h2>\r\n                            Foster\r\n                        </h2>\r\n                        <p>\r\n                            Reset password with your email.\r\n                        </p>\r\n                        <Row>\r\n                            <Col md={{span:10, offset:2}}>\r\n                        <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        \r\n                        <Form.Label htmlFor=\"email\" srOnly>\r\n                              Email\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" \r\n                              id=\"email\" \r\n                              name=\"username\" \r\n                              placeholder=\"Email\" \r\n                              ref={register({required:'Enter your email address'})}\r\n                              />\r\n                          </InputGroup>\r\n                          {errors.email && <p>{errors.email.message}</p>}\r\n                                                   \r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading} \r\n                           className=\"btn-dark\" \r\n                           type=\"submit\"\r\n                           >\r\n                               \r\n                              Reset Passowrd\r\n                          </Button>\r\n                          \r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                        </Row>\r\n                            \r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordView","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\SearchTutors.js",["473","474","475","476","477","478","479","480"],"\r\nimport React, {useState, } from \"react\";\r\n\r\nimport { Container, Row, Col, \r\n    Form, InputGroup, FormControl,\r\n    Button, Badge\r\n  } from 'react-bootstrap';\r\n\r\n  import TutorListInfo from './TutorListInfo.js';\r\n  import {useForm} from 'react-hook-form';\r\n\r\n\r\n\r\nexport default function SearchTutors (props) {\r\n  const { register, handleSubmit, setValue, errors, } = useForm();\r\n  const [subject, setSubject] = useState('');\r\n  let tutorsList = []\r\n  if(props.tutors && props.tutors.length > 0){\r\n     tutorsList = props.tutors.map(item=>{\r\n      // console.log(item)\r\n              return <TutorListInfo \r\n               tutor={item}\r\n               key={item.id}\r\n               />\r\n     })\r\n  }\r\n  \r\n    \r\n  const findTutors= (data)=>{\r\n    console.log(data)\r\n    props.findTutors(data)\r\n  }\r\n\r\n\r\n      return (\r\n          <div>\r\n            <div id=\"tutors-filter-search-box\">\r\n             <Form.Row>\r\n                <Col xs={10}>\r\n                <Form.Label htmlFor=\"inlineFormInput\" >\r\n                    Subject\r\n                </Form.Label>\r\n                <Form.Control placeholder=\"Subject\"\r\n                name=\"subject\"\r\n               // value={props.subject}\r\n                ref={register()}\r\n                />\r\n                </Col>\r\n               \r\n                <Col>\r\n                <Button style={{marginTop:'25px'}}\r\n                 variant=\"btn\" size=\"md\"\r\n                 onClick={handleSubmit(findTutors) }\r\n                 type=\"submit\"\r\n                 >\r\n                   Search\r\n                   </Button>{' '}\r\n                </Col>\r\n            </Form.Row>\r\n\r\n            <div id=\"tutor-results-info\" style={{marginTop:'25px'}}>\r\n                <h4>Total Found  <Badge variant=\"success\">{props.totalTutors}</Badge>{' '}</h4>\r\n            </div>\r\n\r\n            </div>\r\n\r\n\r\n            \r\n          {tutorsList}\r\n\r\n\r\n              </div>\r\n      )\r\n    \r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\TutorsFilterControls.js",["481"],"import React, {useState} from \"react\";\r\n\r\nimport { Form, Col } from 'react-bootstrap';\r\n\r\nexport default function TutorsFilterControls (props) {\r\n\r\n   const [tutorFilter, settutorFilter] = useState({}); \r\n   \r\n   const handleOnChange = (event)=>{\r\n       const {name, value} = event.target;\r\n       tutorFilter[name] = value;\r\n       settutorFilter(tutorFilter)\r\n       //console.log(event.target.name, event.target.value)\r\n       console.log(tutorFilter)\r\n\r\n       props.filterTutors(tutorFilter)\r\n   }\r\n      return (\r\n          <div>\r\n                \r\n                        <h6>Filters </h6>\r\n                        <Form>\r\n                        \r\n                            <Form.Group  controlId=\"feesRange\">\r\n                                <Form.Label>Fees {tutorFilter.feesRange}</Form.Label>\r\n                                <Form.Control \r\n                                 type=\"range\"\r\n                                 name=\"feesRange\"\r\n                                 min=\"\" \r\n                                 max=\"5000\"\r\n                                 onChange={handleOnChange}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group  controlId=\"feesPer\">\r\n                                <Form.Label>Fees Per</Form.Label>\r\n                                <Form.Control as=\"select\" \r\n                              //  defaultValue=\"Month\"\r\n                                name=\"feesPer\"\r\n                               onChange={handleOnChange}\r\n                                >\r\n                                    <option  />\r\n                                    <option value=\"month\" >Month</option>\r\n                                    <option value=\"week\">Week</option>\r\n                                    <option value=\"hour\">Hour</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group  controlId=\"teachingCity\">\r\n                                <Form.Label>City</Form.Label>\r\n                                <Form.Control as=\"select\" \r\n                            onChange={handleOnChange}\r\n                                name=\"teachingCity\"\r\n                                >\r\n                                    <option  />\r\n                                    <option value=\"Lahore\" >Lahore</option>\r\n                                    <option value=\"Islamabad\">Islamabad</option>\r\n                                    <option value=\"Karachi\">Karachi</option>\r\n                                </Form.Control>\r\n                        </Form.Group>\r\n\r\n\r\n                            {/* <Form.Group controlId=\"Availability\">\r\n                                <Form.Label className=\"mr-sm-2\" htmlFor=\"inlineFormCustomSelect\" >\r\n                                    Availability\r\n                                </Form.Label>\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Sunday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Monday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Tuesday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Wednessday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Thrisday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Friday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Saturday\"\r\n                                    custom\r\n                                />\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId=\"gender\">\r\n                            <Form.Label className=\"mr-sm-2\"  >\r\n                                Gender\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                className=\"mr-sm-2\"\r\n                                id=\"gender\"\r\n                                name=\"gender\"\r\n                                onChange={handleOnChange}\r\n                            >\r\n                                <option value=\"\">Gender...</option>\r\n                                {/* <option value=\"\">Not Matter</option> */}\r\n                                <option value=\"Female\">Female</option>\r\n                                <option value=\"Male\">Male</option>\r\n                            </Form.Control>\r\n                            </Form.Group>\r\n\r\n                        </Form>\r\n\r\n              </div>\r\n      )\r\n    \r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\views\\register-view.js",["482","483"],"\r\nimport React, {useState} from \"react\";\r\nimport {\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup } from 'react-bootstrap';\r\n    \r\n    import Spinner from '../../components/common/Spinner';\r\nimport {useForm} from 'react-hook-form';\r\nimport { MessageBox, signUp } from \"../../services\"\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction RegisterView (props){\r\n    const { register, handleSubmit, errors, watch } = useForm(); // initialize the hook\r\n    const password = {}\r\n    password.current = watch(\"password\", \"\");\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n    const onSubmit = (data) => {\r\n        setIsLoading(true)\r\n        signUp(data)\r\n        .then((responseJson) => {\r\n            setIsLoading(false)\r\n            // Do something with the response\r\n            console.log('responseJson', responseJson)\r\n            if(responseJson.ok === false){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.status || 'Error')\r\n                // setModalMessage(`${responseJson.statusText}`)\r\n                \r\n                // setModalShow(true)\r\n                NotificationManager.error(responseJson.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n            if(responseJson.resultCode && responseJson.resultCode != 2001){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.error.code || 'Error')\r\n                // setModalMessage(`${responseJson.error.message}`)\r\n                // setModalShow(true)\r\n\r\n                NotificationManager.error(responseJson.message, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n          //  window.location.href ='/dashboard';\r\n          setisSuccessModal(true)\r\n          setModalHeading('Thanks')\r\n          setModalMessage(`Thanks for Signup. please verify you Email: ${data.email}`)          \r\n          setModalShow(true)\r\n\r\n          })\r\n          .catch((error) => {\r\n            setIsLoading(false)\r\n            console.trace(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n          });\r\n    };\r\n\r\n   \r\n    return (\r\n\r\n        <div id=\"register\" className=\"section\">\r\n             \r\n            {isLoading && <Spinner />}\r\n             <MessageBox\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n            />\r\n\r\n        <Container>\r\n            <Row>\r\n                <Col md={5} id=\"register-left-side\">\r\n                    <h1>\r\n                        Welcome To Foster!\r\n                    </h1>\r\n                    <p>\r\n                        Meet with your tutor. We provide best online tutoring service.\r\n                    </p>\r\n                    <Link className=\"btn-link\" to=\"/login\" size=\"lg\">Login</Link>{' '}\r\n                </Col>\r\n\r\n                <Col md={7}  id=\"register-signup\">\r\n                    <div>\r\n                        <h2>\r\n                            Foster\r\n                        </h2>\r\n                        <p>\r\n                            Sign up with your email.\r\n                        </p>\r\n                        <Row>\r\n                            <Col md={{span:10, offset:2}}>\r\n                        <Form  onSubmit={handleSubmit(onSubmit)}>\r\n                        \r\n                        <Form.Label htmlFor=\"confirmPassword\" srOnly>\r\n                            User Type\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" \r\n                                as=\"select\"\r\n                                className=\"mr-sm-2\"\r\n                                id=\"userType\"\r\n                                name=\"userType\"\r\n                                custom\r\n                                placeholder=\"user tyoe\" \r\n                               value={props.userType}\r\n                                ref={register({\r\n                                    required: \"Select User Type\"\r\n                                  })}\r\n                                 title=\"userType is required\"\r\n                                >\r\n                                <option value=\"\" />\r\n                                <option value=\"tutor\">Tutor</option>\r\n                                <option value=\"student\">Student</option>\r\n                                <option value=\"parents\">Parents</option>\r\n                            </FormControl>\r\n                          </InputGroup>\r\n                          {errors.userType && <p>{errors.userType.message}</p> }\r\n\r\n                        <Form.Label htmlFor=\"firstName\" srOnly>\r\n                              First Name \r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" id=\"firstName\"\r\n                               name=\"firstName\" \r\n                               value={props.firstName} \r\n                               placeholder=\"first name\" \r\n                               ref={register({required: 'first name is required'}) } \r\n                               title=\"first name is required\" \r\n                               />\r\n                              \r\n                          </InputGroup>\r\n                          {errors.firstName && <p>{errors.firstName.message}</p> }\r\n\r\n                          <Form.Label htmlFor=\"lastName\" srOnly>\r\n                              Last Name\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" id=\"lastName\" \r\n                              name=\"lastName\" \r\n                              value={props.lastName} \r\n                              placeholder=\"last name\" \r\n                              ref={register({required: 'Required Last Name'}) } \r\n                              title=\"last name is required\"\r\n                               />\r\n                          </InputGroup>\r\n                          {errors.lastName && <p>{errors.lastName.message}</p> }\r\n\r\n                          <Form.Label htmlFor=\"email\" srOnly>\r\n                              Email\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" type=\"email\"\r\n                               value={props.emailAddress} \r\n                               id=\"email\" \r\n                               name=\"email\" \r\n                               placeholder=\"Email\" \r\n                               ref={register({\r\n                                   required: 'required a valid email',\r\n                                   \r\n                                }) }\r\n                                title=\"email is required\" />\r\n                          </InputGroup>\r\n                          {errors.email && <p>{errors.email.message}</p> }\r\n\r\n                          <Form.Label htmlFor=\"Password\" srOnly>\r\n                              Password\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" type=\"password\" id=\"password\" name=\"password\" \r\n                              value={props.password} placeholder=\"Password\" \r\n                              ref={register({\r\n                                required: \"You must specify a password\",\r\n                                minLength: {\r\n                                  value: 4,\r\n                                  message: \"Password must have at least 4 characters\"\r\n                                }\r\n                              })}\r\n                               title=\"password is required\" \r\n                               />\r\n                          </InputGroup>\r\n                          {errors.password && <p>{errors.password.message}</p>}\r\n                          \r\n\r\n                          {/* <Form.Label htmlFor=\"confirmPassword\" srOnly>\r\n                              Confirm Password\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" type=\"password\" \r\n                              id=\"confirmPassword\" \r\n                              name=\"confirmPassword\" \r\n                              placeholder=\"Confirm Password\" \r\n                              ref={register({\r\n                                validate: value =>\r\n                                \r\n                                  value === password.password || \"The passwords do not match\"\r\n                              })}\r\n                               />\r\n                               {errors.password_repeat && <p>{errors.password_repeat.message}</p>}\r\n                          </InputGroup> */}\r\n                        \r\n\r\n\r\n\r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading}\r\n                            className=\"btn-dark\"   \r\n                            type=\"submit\"\r\n                             >\r\n                              \r\n                              Sign Up\r\n                          </Button>\r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                        </Row>\r\n                            \r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default RegisterView","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\views\\login-view.js",["484","485","486","487","488","489"],"\r\nimport React, { useState} from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup, } from 'react-bootstrap';\r\n    \r\nimport {useForm} from 'react-hook-form';\r\nimport { MessageBox, login } from \"../../services\"\r\nimport Spinner from '../../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction LoginView (props){\r\n    const { register, handleSubmit, errors, watch } = useForm();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n    const onSubmit = (data) => {\r\n        setIsLoading(true)\r\n        login(data)\r\n        .then((responseJson) => {\r\n            setIsLoading(false)\r\n            // Do something with the response\r\n            console.log('responseJson', responseJson)\r\n            if(responseJson.ok === false){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.status || 'Error')\r\n                // setModalMessage(`${responseJson.statusText}`)\r\n                \r\n                // setModalShow(true)\r\n                NotificationManager.error(responseJson.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n            if(responseJson.resultCode && responseJson.resultCode != 2001){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.code || 'Error')\r\n                // setModalMessage(`${responseJson.message}`)\r\n                // setModalShow(true)\r\n                NotificationManager.error(responseJson.message, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n          \r\n            localStorage.setItem('userId', responseJson.id);\r\n            localStorage.setItem('access_token', responseJson.access_token);\r\n            localStorage.setItem('userType', responseJson.userType);\r\n            localStorage.setItem('user', JSON.stringify(responseJson));\r\n            window.location.href ='/dashboard/about';\r\n        \r\n\r\n          })\r\n          .catch((error) => {\r\n            setIsLoading(false)\r\n            console.trace(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n          });\r\n    };\r\n\r\n\r\n    return (\r\n        <div id=\"register\" className=\"section\">\r\n             {isLoading && <Spinner />}\r\n               <MessageBox\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n            />\r\n        <Container>\r\n            <Row>\r\n                <Col md={5} id=\"register-left-side\">\r\n                    <h1>\r\n                        Welcome To Foster!\r\n                    </h1>\r\n                    <p>\r\n                        Meet with your tutor. We provide best online tutoring service.\r\n                    </p>\r\n                    <Link className=\"btn-link\" to=\"/register\" size=\"lg\">Register</Link>{' '}\r\n                </Col>\r\n\r\n                <Col md={7}  id=\"register-signup\">\r\n                    <div>\r\n                        <h2>\r\n                            Foster\r\n                        </h2>\r\n                        <p>\r\n                            Login with your email.\r\n                        </p>\r\n                        <Row>\r\n                            <Col md={{span:10, offset:2}}>\r\n                        <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        \r\n                        <Form.Label htmlFor=\"email\" srOnly>\r\n                              Email\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text>\r\n                              <i className=\"fa fa-user\"></i>\r\n                              </InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" \r\n                              id=\"email\" \r\n                              name=\"username\" \r\n                              placeholder=\"Email\"\r\n                              ref={register({required: 'Enter Your Email'})}\r\n                               />\r\n                          </InputGroup>\r\n                          \r\n                          <Form.Label htmlFor=\"password\" srOnly>\r\n                              Password\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\"\r\n                              type=\"password\"\r\n                               id=\"password\"\r\n                               name=\"password\"\r\n                                placeholder=\"Password\" \r\n                                ref={register({required: 'Enter Your Password'})}\r\n                                />\r\n                          </InputGroup>\r\n\r\n                          \r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading} \r\n                           className=\"btn-dark\"\r\n                           type=\"submit\"\r\n                           >\r\n                              \r\n                              Login\r\n                          </Button>\r\n                          <Link className=\"forgot-password\" to=\"/forgotpassword\" size=\"lg\">Forgot Password?</Link>{' '}\r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                        </Row>\r\n                            \r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default LoginView","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\TutorListInfo.js",["490","491","492","493","494"],"\r\nimport React from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col, \r\n    Form, InputGroup, FormControl,\r\n    Button, Badge\r\n  } from 'react-bootstrap';\r\n\r\n\r\nexport default function TutorListInfo (props) {\r\n    let teachingSubjects = []\r\n    if(props.tutor.teachingSubjects && props.tutor.teachingSubjects.length>0){\r\n        teachingSubjects = props.tutor.teachingSubjects.map(subject=> <Badge key={subject} style={{marginRight:'5px'}} variant=\"success\">{subject}</Badge>  )\r\n    }\r\n    \r\n  \r\n      return (\r\n          <div id=\"tutors-list-info\">\r\n              <Container>\r\n                  <Row>\r\n                      <Col md={12}  >\r\n                          <div>\r\n                              <Link to={`/profile/${props.tutor.id}`} style={{display:'flex',}}>\r\n                                  <Col md={8}>\r\n                              <div id=\"tutors-details-list\" style={{display:'flex'}}>\r\n                              <img src={props.tutor.imageUrl ?props.tutor.imageUrl : \"/images/tutor2-280x300.jpg\"} alt=\"tutor image\" />\r\n                              <div>\r\n                              <h4>{props.tutor.firstName} {props.tutor.lastName}</h4>\r\n                              <h6>{props.tutor.tagLine}</h6>\r\n                              <p>\r\n                              {teachingSubjects}\r\n                              </p>\r\n                              <p>\r\n                              {props.tutor.greateTutorLine !== \"\" ? \r\n                                    props.tutor.greateTutorLine  :\r\n                             // props.tutor.greateTutorLine && \r\n                              'this teacher does not have a description of his profile.'\r\n                              }\r\n                              </p>\r\n                              {/* <p>\r\n                              {props.tutor.greateTutorLine}\r\n                              </p> */}\r\n                              </div>\r\n                          </div>\r\n\r\n                          </Col>\r\n                          <Col md={3} style={{float:'right'}}  >\r\n                          <div  id=\"tutor-scoring-board\" className=\"float-md-right\">\r\n                              <p><strong>Rs {props.tutor.fees}/{props.tutor.feesPer}</strong></p>\r\n                              <p>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                              <strong> 5 </strong>\r\n                              (4)\r\n                              </p>\r\n                              <p className=\"Offers-margin\">\r\n                              Offers \r\n                              </p>\r\n                            \r\n                              {props.tutor.isOnlineTeaching &&\r\n                              <p className=\"Offers-margin\">\r\n                                  <strong> Online </strong> Classes \r\n                                 \r\n                              </p>}\r\n\r\n                              {props.tutor.isOfflineTeaching &&\r\n                              <p> <strong> In Person </strong> Classes\r\n                              </p>}\r\n                           </div>\r\n                              </Col>\r\n                           </Link>\r\n                         </div>\r\n                            \r\n                     \r\n                      </Col>\r\n                  </Row>\r\n              </Container>\r\n             \r\n           </div>\r\n      )\r\n    \r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\user.js",["495"],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\HttpClient.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\MessageBox.js",["496"],"\r\nimport React, {useState} from \"react\";\r\n\r\nimport { Modal, Button } from 'react-bootstrap';\r\nfunction MessageBox(props) {\r\n  //const [isSuccess, setisSuccess] = useState(true);\r\n \r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className={props.isSuccess ? 'message-box-success' : 'message-box-error'}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            <i className={props.isSuccess ? 'fa fa-thumbs-up' : 'fa fa-warning'}></i>\r\n             {props.heading}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p><strong>{props.message}</strong></p>\r\n          {/* <p>\r\n            {props.message}\r\n            hello bilal\r\n          </p> */}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button className=\"btn-dark\" onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n  \r\n\r\n  export default MessageBox","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\index.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\PageHistory.js",["497","498"],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\VerifyEmail.js",["499"],"\r\nimport React, {useState} from \"react\";\r\n\r\nimport { Container, Row, Col, Button, Spinner } from 'react-bootstrap';\r\nimport { verifyEmail, MessageBox } from \"../services\";\r\n\r\nfunction VerifyEmail (props){\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n\r\n    const emailVerificationClickHandler = ()=>{\r\n        \r\n        let data = {\r\n            phone: props.match.params.id,\r\n            emailCode: +props.match.params.code\r\n        }\r\n        setIsLoading(true)\r\n        verifyEmail(data)\r\n        .then(responseJson => {\r\n            setIsLoading(false)\r\n            if(responseJson.ok === false){\r\n                setModalHeading(responseJson.status || 'Error')\r\n                setModalMessage(`${responseJson.statusText}`)\r\n                setModalShow(true)\r\n                return\r\n            }\r\n\r\n            if(responseJson.resultCode && responseJson.resultCode !== '2001'){\r\n                setModalHeading(responseJson.code || 'Error')\r\n                setModalMessage(`${responseJson.message}`)\r\n                setModalShow(true)\r\n\r\n            \r\n                return\r\n            }\r\n\r\n            setisSuccessModal(true)\r\n            setModalHeading(responseJson.code || 'Success')\r\n            setModalMessage(`${responseJson.message}`)\r\n                setModalShow(true)\r\n                setTimeout(() => {\r\n                    window.location.href = '/login'\r\n                }, 1500);\r\n            \r\n        })\r\n        .catch( error => {\r\n            setIsLoading(true)\r\n            console.log(error)\r\n            setModalMessage(error.toString())\r\n                setModalShow(true)\r\n                return\r\n        })\r\n    }\r\n\r\n        return(\r\n            <div id=\"verify-email\">\r\n                <MessageBox \r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n                />\r\n                <Container>\r\n                <Row>\r\n                    <Col md={{span: 12}}>\r\n                    <div className=\"custom-header\">\r\n                                <img src=\"\" alt=\"foster logo\" />\r\n                                {/* <h1>Foster</h1> */}\r\n                                    </div>\r\n                        </Col>\r\n                </Row>\r\n\r\n                    <Row>\r\n                    \r\n                        <Col md={{span: 8, offset:2}}>\r\n                            <div className=\"section\" >\r\n                               \r\n                               \r\n                                <h2 className=\"section-heading\">\r\n                                    Email Confirmation\r\n                                </h2>\r\n                                <p>\r\n                                    Hi You are all most ready to start with Foster.\r\n                                    Hope, You will enjoy your learning path.\r\n                                    </p>\r\n                                    <p>\r\n                                    <strong>Click </strong> below button to verify <strong> Email Address </strong>\r\n                                        </p>\r\n\r\n                                        <Button\r\n                                        size=\"lg\"\r\n                                        className=\"btn-dark\"\r\n                                        disabled={props.isLoading}\r\n                                        onClick={emailVerificationClickHandler}\r\n                                        > \r\n                                        {props.isLoading && <Spinner\r\n                                            as=\"span\"\r\n                                            animation=\"grow\"\r\n                                            size=\"sm\"\r\n                                            role=\"status\"\r\n                                            aria-hidden=\"true\"\r\n                                            />}\r\n                                        Verify Email Address\r\n                                        </Button>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default VerifyEmail","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\ResetPassword.js",["500","501","502","503"],"\r\nimport React, {useState} from \"react\";\r\n\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup,\r\n } from 'react-bootstrap';\r\n import {useForm} from 'react-hook-form';\r\nimport { passwordReset, MessageBox } from \"../services\";\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction ResetPassword (props){\r\n    const { register, handleSubmit, errors, watch } = useForm();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n\r\n    const onSubmit = (formData)=>{\r\n        \r\n        let data = {\r\n            customerId: props.match.params.customerId,\r\n            phone: props.match.params.customerId,\r\n            emailCode: +formData.code,\r\n            newPassword: formData.password,\r\n        }\r\n        setIsLoading(true)\r\n        passwordReset(data, {customerId: data.customerId})\r\n        .then(responseJson => {\r\n            setIsLoading(false)\r\n            if(responseJson.ok === false){\r\n                NotificationManager.error(responseJson.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n\r\n            if(responseJson.resultCode && responseJson.resultCode !== '2001'){\r\n                NotificationManager.error(responseJson.message, 'Error!', 2000);\r\n            \r\n                return\r\n            }\r\n\r\n            NotificationManager.error(responseJson.message, 'Error!', 2000);\r\n\r\n                setTimeout(() => {\r\n                    window.location.href = '/login'\r\n                }, 1500);\r\n            \r\n        })\r\n        .catch( error => {\r\n            setIsLoading(true)\r\n            console.log(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n                return\r\n        })\r\n    }\r\n\r\n        return(\r\n            <div id=\"verify-email\">\r\n                {isLoading && <Spinner />}\r\n                <MessageBox \r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n                />\r\n                <Container>\r\n                <Row>\r\n                    <Col md={{span: 12}}>\r\n                    <div className=\"custom-header\">\r\n                                <img src=\"\" alt=\"foster logo\" />\r\n                                {/* <h1>Foster</h1> */}\r\n                                    </div>\r\n                        </Col>\r\n                </Row>\r\n\r\n                    <Row>\r\n                    \r\n                        <Col md={{span: 8, offset:2}}>\r\n                            <div className=\"section\" >\r\n                               \r\n                               \r\n                                <h2 className=\"section-heading\">\r\n                                    Reset Password\r\n                                </h2>\r\n                                    <p>\r\n                                    Enter code and new password, click below button to <strong> reset password </strong>\r\n                                        </p>\r\n                                        <Row>\r\n                                            <Col md={{span:8, offset:2}}>\r\n                                            \r\n                                            <Form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                                                <Form.Label htmlFor=\"code\" srOnly>\r\n                                                    Code\r\n                                                </Form.Label>\r\n                                                <InputGroup>\r\n                                                    <InputGroup.Prepend>\r\n                                                    <InputGroup.Text>\r\n                                                    <i className=\"fa fa-user\"></i>\r\n                                                    </InputGroup.Text>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <FormControl size=\"lg\" \r\n                                                    id=\"code\" \r\n                                                    name=\"code\" \r\n                                                    placeholder=\"Code\"\r\n                                                    type=\"number\"\r\n                                                    ref={register({required: 'Enter Your Code'})}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                                {errors.code && <p>{errors.code.message}</p>}\r\n\r\n                                                <Form.Label htmlFor=\"password\" srOnly>\r\n                                                Password\r\n                                                </Form.Label>\r\n                                                <InputGroup>\r\n                                                <InputGroup.Prepend>\r\n                                                <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                                                </InputGroup.Prepend>\r\n                                                <FormControl size=\"lg\"\r\n                                                type=\"password\"\r\n                                                id=\"password\"\r\n                                                name=\"password\"\r\n                                                    placeholder=\"Password\" \r\n                                                    ref={register({required: 'Enter Your Password'})}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                                {errors.password && <p>{errors.password.message}</p>}\r\n\r\n                                                <div className=\"sign-up-link\">\r\n                                                    <Button\r\n                                                        size=\"lg\"\r\n                                                        className=\"btn-dark\"\r\n                                                        disabled={isLoading}\r\n                                                        type=\"submit\"\r\n                                                        > \r\n                                                        Reset Password\r\n                                                    </Button>\r\n                                                 \r\n                                                 </div>\r\n\r\n                                                </Form>\r\n\r\n                                                \r\n                                            </Col>\r\n                                        </Row>\r\n                                       \r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default ResetPassword","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\User.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Dashboard\\Dashboard.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\PostList.js",["504","505","506"],"import React from \"react\";\r\n\r\nimport { Admin, Resource } from 'react-admin';\r\nimport simpleRestProvider from 'ra-data-simple-rest';\r\n\r\nconst PostList = ()=>{\r\n    return (\r\n        <div>\r\n            hello post\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSExpertise.js",["507","508","509","510"],"import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo } from \"../services\"\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\nfunction DSExpertise  (props){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [customer, setCustomer] = useState({});\r\n    let userId = localStorage.getItem('userId')\r\n\r\n\r\n    props = {\r\n        subjects: [\r\n            'Math',\r\n            'Bio',\r\n            'physics',\r\n            'urdu',\r\n            'english',\r\n            'Math1 II',\r\n            'Math2 II',\r\n            'Math3 II',\r\n            'Math4 II',\r\n            'Math5 II',\r\n            'Math6 II',\r\n            'Math7 II',\r\n            'Math8 II',\r\n            'Math9 II',\r\n        ],\r\n        grades: [\r\n            'Nursery',\r\n            'KG',\r\n            'Class 1-5',\r\n            'Class 6-8',\r\n            'Class 9-10',\r\n            'O Levels',\r\n            'Fsc',\r\n        ]\r\n    };\r\n\r\n    const onSubjectSelect = (selectedList, selectedItem) =>{\r\n       // customer.teachingSubjects.push(selectedItem.title) \r\n        customer.teachingSubjects = selectedList;\r\n        console.log('customer.teachingSubjects', customer.teachingSubjects)     \r\n    }\r\n    \r\n   const onSubjectRemove =(selectedList, removedItem)=> {\r\n        \r\n        var index = customer.teachingSubjects.indexOf(removedItem.title);\r\n        if (index !== -1) {\r\n            customer.teachingSubjects.splice(index, 1);\r\n        }\r\n    }\r\n   \r\n    const onGradeSelect = (selectedList, selectedItem) =>{\r\n        //customer.teachingGrades.push(selectedItem.title)\r\n        customer.teachingGrades = selectedList\r\n        console.log('customer.teachingGrades', customer.teachingGrades)         \r\n    }\r\n    \r\n   const onGradeRemove =(selectedList, removedItem)=> {\r\n        \r\n        var index = customer.teachingGrades.indexOf(removedItem.title);\r\n        if (index !== -1) {\r\n            customer.teachingGrades.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    const onSubmit = () => {\r\n     \r\n    let postData = {...customer};\r\n    postData.teachingSubjects = customer.teachingSubjects\r\n    postData.teachingGrades = customer.teachingGrades\r\n\r\n    setIsLoading(true)\r\n    updateCustomerInfo(postData, {customerId: userId})\r\n    .then(result =>{\r\n        setIsLoading(false)\r\n        //console.log(result)\r\n        NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n    })\r\n    .catch(error=>{\r\n        setIsLoading(false)\r\n        console.log(error)\r\n        NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n    })\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n            // get user and set form fields\r\n            setIsLoading(true)\r\n            getCustomerById(userId).then(customer => {\r\n                setIsLoading(false)\r\n                \r\n                setCustomer(customer);\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n            })\r\n    }, []);\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n        {isLoading && <Spinner />}\r\n\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:12, offset: 4}}>\r\n                <h2 className=\"section-heading\">Subjects & Grades</h2>\r\n                {/* </Col>\r\n                </Row>\r\n                <Row> */}\r\n                <Form >\r\n                    <Form.Row >\r\n                        <Multiselect \r\n                        options={props.subjects} // Options to display in the dropdown\r\n                        selectedValues={customer.teachingSubjects} // Preselected value to persist in dropdown\r\n                        placeholder=\"subjects\"\r\n                        //displayValue=\"title\" \r\n                        isObject={false}\r\n                        style={{ searchBox: { border: \"none\", \"border-bottom\": \"1px solid blue\", \"border-radius\": \"0px\" } } }\r\n                        onSelect={onSubjectSelect} // Function will trigger on select event\r\n                        onRemove={onSubjectRemove} // Function will trigger on remove event\r\n                        />\r\n                       \r\n                    </Form.Row>\r\n\r\n\r\n                    <Form.Row>\r\n                        \r\n                    <Col md={8}>\r\n                        <Multiselect \r\n                        options={props.grades} // Options to display in the dropdown\r\n                        selectedValues={customer.teachingGrades} // Preselected value to persist in dropdown\r\n                        placeholder=\"grades\"\r\n                       // displayValue=\"title\" \r\n                       isObject={false}\r\n                        style={{ searchBox: { border: \"none\", \"border-bottom\": \"1px solid blue\", \"border-radius\": \"0px\" } } }\r\n                        onSelect={onGradeSelect} // Function will trigger on select event\r\n                        onRemove={onGradeRemove} // Function will trigger on remove event\r\n                        />\r\n                        </Col>\r\n                        \r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                    <Button as={Col}  className=\"btn-dark\"\r\n                     disabled={isLoading}\r\n                     size=\"sm\"\r\n                     md={{span:8, offset:3}}\r\n                     onClick={handleSubmit(onSubmit)}\r\n                     >\r\n                       Update Expertise\r\n                    </Button>\r\n                    </Form.Row>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSExpertise","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSEducation.js",["511"],"import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction DSEducation  (props){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [customer, setCustomer] = useState({});\r\n    //const [education, setEducation] = useState({});\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    \r\n    const onSubmit = (education) => {\r\n       \r\n    //let postData = {...customer, ...data};\r\n   // customer.education && customer.education.length > 0 ?customer.education.push(education)\r\n   customer.education = []\r\n   customer.education[0] = education\r\n   setIsLoading(true)\r\n    updateCustomerInfo(customer, {customerId: userId})\r\n    .then(result =>{\r\n        setIsLoading(false)\r\n       // console.log(result)\r\n        NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n    })\r\n    .catch(error=>{\r\n        setIsLoading(false)\r\n        console.log(error)\r\n        NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n    })\r\n    }\r\n\r\n    useEffect(() => {\r\n            // get user and set form fields\r\n            setIsLoading(true)\r\n            getCustomerById(userId).then(customer => {\r\n                setIsLoading(false)\r\n                let education = customer.education ? customer.education[0]: {}\r\n                const fields = ['institute',\r\n                 'degree',\r\n                 'passingYear',\r\n                ];\r\n                fields.forEach(field => setValue(field, education[field]));\r\n                setCustomer(customer);\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, []);\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n            {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:12, offset:2}}>\r\n                <h2 className=\"section-heading\">Your Last Education Degree</h2>\r\n                <Form >\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"institute\">\r\n                        <Form.Label>Institute Name</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        placeholder=\"institute\" \r\n                        name=\"institute\"\r\n                        value={props.institute}\r\n                        ref={register({required: 'institute is required!'})}\r\n                        />\r\n                        </Form.Group>\r\n                        \r\n\r\n                        <Form.Group as={Col} controlId=\"degree\">\r\n                        <Form.Label>Degree Title</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        placeholder=\"degree\" \r\n                        name=\"degree\"\r\n                        value={props.degree}\r\n                        ref={register({required:'degree is required'})}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"passingYear\">\r\n                        <Form.Label>Passing Year</Form.Label>\r\n                        <Form.Control \r\n                        type=\"number\"\r\n                        placeholder=\"passingYear\"\r\n                        name=\"passingYear\"\r\n                        value={props.passingYear}\r\n                        ref={register({required:'passing year is required'})}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n                    {errors.firstName && <p>{errors.firstName.message}</p> }\r\n                    {errors.lastName && <p>{errors.lastName.message}</p> }\r\n                    {errors.passingYear && <p>{errors.passingYear.message}</p> }\r\n\r\n\r\n                    {/* <Form.Group id=\"formGridCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group> */}\r\n\r\n                    <Form.Row>\r\n                    <Button as={Col}  className=\"btn-dark\"\r\n                     \r\n                     size=\"sm\"\r\n                     md={{span:8, offset:2}}\r\n                     onClick={handleSubmit(onSubmit)}\r\n                     >\r\n                        Update Education\r\n                    </Button>\r\n                    </Form.Row>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSEducation","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSMediums.js",["512","513","514","515"],"import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction DSMediums  (props){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [customer, setCustomer] = useState({});\r\n    const [isOfflineTeaching, setIsOfflineTeaching] = useState(false);\r\n    const [teachingCity, setTeachingCity] = useState(false);\r\n    const [teachingArea, setTeachingArea] = useState(false);\r\n\r\n    const onSubmit = (data) => {\r\n     \r\n       let postData = {...customer, ...data};\r\n       setIsLoading(true)\r\n    updateCustomerInfo(postData, {customerId: '600f23da7234a142acc51963'})\r\n    .then(result =>{\r\n        setIsLoading(false)\r\n        console.log(result)\r\n        NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n    })\r\n    .catch(error=>{\r\n        setIsLoading(false)\r\n        console.log(error)\r\n        NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n    })\r\n    }\r\n\r\n    useEffect(() => {\r\n            // get user and set form fields\r\n            setIsLoading(true)\r\n            getCustomerById('600f23da7234a142acc51963').then(customer => {\r\n                setIsLoading(false)\r\n                const fields = [\r\n                 'isOnlineTeaching',\r\n                 'isOfflineTeaching',\r\n                 'teachingCity',\r\n                 'teachingArea',\r\n                 \r\n                ];\r\n                fields.forEach(field => setValue(field, customer[field]));\r\n                setCustomer(customer);\r\n                setIsOfflineTeaching(customer.isOfflineTeaching)\r\n                setTeachingCity(customer.teachingCity)\r\n                setTeachingArea(customer.teachingArea)\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, []);\r\n\r\n    \r\n\r\n      return (\r\n        <div className=\"section\">\r\n        {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:12, offset:4}}>\r\n                <h2 className=\"section-heading\">Teaching Mediums</h2>\r\n                <Form >\r\n                    <Form.Row>\r\n                      <Col md={8}>\r\n                      <Form.Group id=\"isOnlineTeaching\">\r\n                        <Form.Check type=\"checkbox\" \r\n                        label=\"I can teach online\" \r\n                        name=\"isOnlineTeaching\"\r\n                        ref={register()}\r\n\r\n                        />\r\n                         </Form.Group>\r\n                      </Col>\r\n                    \r\n                    <Col md={8}>\r\n                    <Form.Group id=\"isOfflineTeaching\">\r\n                        <Form.Check type=\"checkbox\" \r\n                        label=\"I can teach in person\" \r\n                        name=\"isOfflineTeaching\"\r\n                        value={props.isOfflineTeaching}\r\n                        ref={register()}\r\n                        onChange={()=>{setIsOfflineTeaching(!isOfflineTeaching)}}\r\n                        />\r\n                    </Form.Group>\r\n                    </Col>\r\n                                         \r\n                    </Form.Row>\r\n\r\n                \r\n                    \r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"teachingCity\">\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control as=\"select\" \r\n                       \r\n                        name=\"teachingCity\"\r\n                        value={props.teachingCity}\r\n                        ref={register()}\r\n                        >\r\n                            <option  />\r\n                            <option value=\"Lahore\" >Lahore</option>\r\n                            <option value=\"Islamabad\">Islamabad</option>\r\n                            <option value=\"Karachi\">Karachi</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    \r\n\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"teachingArea\">\r\n                        <Form.Label>Teaching Area</Form.Label>\r\n                        <Form.Control\r\n                       as=\"textarea\"\r\n                        name=\"teachingArea\"\r\n                        value={props.teachingArea}\r\n                        ref={register()}\r\n                        >\r\n                         \r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                    <Button as={Col}  className=\"btn-dark\"\r\n                     disabled={isLoading}\r\n                     size=\"sm\"\r\n                     md={{span:8, offset:2}}\r\n                     onClick={handleSubmit(onSubmit)}\r\n                     >\r\n                        Update Mediums\r\n                    </Button>\r\n                    </Form.Row>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSMediums","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\ViewProfile.js",["516","517","518","519","520"],"\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col, Badge,\r\n     Button, Spinner,Card\r\n     } from 'react-bootstrap';\r\n\r\n\r\n\r\nimport { getCustomerById } from \"../services\";\r\n\r\n\r\nexport default function ViewProfile (props){\r\n    if(!props.match || !props.match.params){\r\n        window.location.href = \"/\"\r\n    }\r\n   // console.log('props.match.params:', props.match.params)\r\n   const [tutor, settutor] = useState({});\r\n\r\n   useEffect(() => {\r\n    getCustomerById(props.match.params.id)\r\n    .then(result=>{\r\n        console.log(result)\r\n        settutor(result)\r\n        settutor(prevState =>{\r\n            return {\r\n                ...prevState,\r\n                teachingSubjects: result.teachingSubjects || [],\r\n                teachingGrades: result.teachingGrades || [],\r\n                education: result.education || []\r\n            }\r\n        })\r\n\r\n        console.log('tutor.teachingSubjects ', tutor.teachingSubjects)\r\n   \r\n\r\n    }).catch(error=>{\r\n        console.log(error)\r\n    })\r\n      \r\n   }, []);\r\n\r\n    return (\r\n        <div style={{marginTop:'50px', marginBottom:'50px'}} className=\"section\">\r\n\r\n            <Container>\r\n                <Row>\r\n                    <Col md={{span: 8}}>\r\n                    <div style={{display:'flex'}}>\r\n                    <img className=\"profile-img\" src={tutor.imageUrl ?tutor.imageUrl : \"/images/tutor2-280x300.jpg\"}alt=\"user profile image\"></img>\r\n                        <span style={{marginLeft:'20px'}} className=\"user-profile-title\">\r\n                            <h2>{tutor.firstName} {tutor.lastName}</h2>\r\n                            <p><strong>\r\n                                {tutor.tagLine}\r\n                                </strong></p>\r\n                            <p>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                              <strong> 5 </strong>\r\n                              (4)\r\n                              </p>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"bio\">\r\n                        <h4>About {tutor.lastName}</h4>\r\n                        <hr></hr>\r\n                                              \r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>Bio</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                            <p>\r\n                                {tutor.greateTutorLine}\r\n                                </p>\r\n                                <p>\r\n                                {tutor.teachingExperienceLine}\r\n                                </p>\r\n                            </Col>\r\n\r\n                        </span>\r\n                                                \r\n\r\n                    </div>\r\n\r\n                    <div className=\"education\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>Education</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                               \r\n                            { tutor.education &&\r\n                            tutor.education.map(edu=>  <span>\r\n                                <p>{edu.institute}</p>\r\n                                <p>{edu.degree}</p>\r\n                                <p>Passing year <strong>{edu.passingYear}</strong></p>\r\n                                </span>)\r\n                            }\r\n                            {/* <p >\r\n                                {tutor.education.institute}\r\n                            </p>\r\n                            <p >\r\n                                {tutor.education.institute}\r\n                            </p> */}\r\n                            </Col>\r\n                        </span>\r\n\r\n                    </div>\r\n                    \r\n                    <div className=\"policies\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                                <p>Policies</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                            <p>Teaching Rate: <strong>Rs{tutor.fees}</strong>/{tutor.feesPer}</p>\r\n                            </Col>\r\n                        </span>\r\n                       \r\n                    </div>\r\n\r\n                    <div className=\"schedule\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>Schedule</p> \r\n                            </Col>\r\n                            <Col md={10}>\r\n                            {tutor.isOnlineTeaching && <p>Teaches Online</p> }\r\n                            {tutor.isOfflineTeaching && <p>Teaches In person</p> }\r\n                            </Col>\r\n                        </span>\r\n                       \r\n                    </div>\r\n\r\n                    <div className=\"subjects\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>Subjects</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                                \r\n                            {/* {teachingSubjects} */}\r\n                            { tutor.teachingSubjects &&\r\n                            tutor.teachingSubjects.map(subject=> <Badge key={subject} style={{marginRight:'5px'}} variant=\"success\">{subject}</Badge>  ) }\r\n                            \r\n                            </Col>\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"grades\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>Teaching Grades</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                                <p>\r\n                                { tutor.teachingGrades &&\r\n                                tutor.teachingGrades.map(grade=> <Badge key={grade} style={{marginRight:'5px'}} variant=\"success\">{grade}</Badge>  )}\r\n                                </p>\r\n                            </Col>\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"ratings\">\r\n                        <h4>Ratting & Reviews</h4>\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>ratings</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                            <p>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                              <strong> 5 </strong>\r\n                              (4 ratings)\r\n                              </p>\r\n                              <p><strong>5 stars</strong> ================================ (100)</p>\r\n                              <p><strong>4 stars</strong> ================================ (80)</p>\r\n                              <p><strong>3 stars</strong> ================================ (80)</p>\r\n                              <p><strong>2 stars</strong> ================================ (80)</p>\r\n                              <p><strong>1 stars</strong> ================================ (80)</p>\r\n                            </Col>\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"reviews\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <p>Reviews</p>\r\n                            <span style={{marginLeft:'100px'}}>\r\n                            <p><strong>Greate Experience</strong></p>\r\n                            <p>\r\n                            Douglas is an amazing teacher and I recommend asking for his help!!!! I told him I needed him on Monday morning and I had an appointment scheduled for Tuesday afternoon! I thought the assignment I needed help on was going to take multiple sessions but Douglas helped me.\r\n                            </p>\r\n                            <p> <em>bilal</em></p>\r\n                            </span>\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    </Col>\r\n                        <Col md={{span: 4}}>\r\n                        <Card style={{ width: '18rem', marginTop:'70px' }} className=\"sticky\">\r\n                        <Card.Header style={{background:'#e74c3c', color:'#fff'}}>Fees Rs{tutor.fees}/{tutor.feesPer}</Card.Header>\r\n                            <Card.Body>\r\n                            \r\n                                <Card.Subtitle className=\"mb-2 text-muted\"></Card.Subtitle>\r\n                                \r\n                                <Card.Text>No subscriptions or upfront payments</Card.Text>\r\n                                <Card.Text>Only pay for the time you need </Card.Text>\r\n                                <Card.Text>Find the right fit, or your first hour is free</Card.Text>\r\n                                \r\n                                <Link\r\n                                to={`/request/to/${props.match.params.id}`}\r\n                                className=\"btn-dark\"\r\n                                style={{marginLeft:'10%',}}\r\n                                >\r\n                                    Connect to {tutor.lastName}\r\n                                </Link> \r\n                                {/* <Card.Link href=\"#\">Card Link</Card.Link>\r\n                                <Card.Link href=\"#\">Another Link</Card.Link> */}\r\n                            </Card.Body>\r\n                            <Card.Footer  className=\"text-muted\">Response Time: 24 hours</Card.Footer>\r\n                        </Card>\r\n                            \r\n                        </Col>\r\n                </Row>\r\n            </Container>\r\n           \r\n        </div>\r\n    )\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\common\\Spinner.js",["521"],"import React from 'react';\r\nimport spinner from './ecd6bc09da634e4e2efa16b571618a22.gif';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: '200px', margin: 'auto', display: 'block',\r\n         opacity: '.5',\r\n          position: 'fixed', top:'50%', bottom:'50%', left:'25%', right:'25%',\r\n           height: '200px', zIndex:'9999' }}\r\n        alt=\"Loading...\"\r\n      />\r\n    </div>\r\n  );\r\n};","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\views\\ContactUs.js",["522","523","524","525"],"\r\nimport React, {useState} from \"react\";\r\nimport {\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup } from 'react-bootstrap';\r\n    \r\nimport Spinner from '../../components/common/Spinner';\r\nimport {useForm} from 'react-hook-form';\r\nimport { MessageBox, sendContactUs } from \"../../services\"\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction ContactUs (props){\r\n    const { register, handleSubmit, errors, watch } = useForm(); // initialize the hook\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        setIsLoading(true)\r\n        sendContactUs(data)\r\n        .then((responseJson) => {\r\n            setIsLoading(false)\r\n            // Do something with the response\r\n            console.log('responseJson', responseJson)\r\n            if(responseJson.ok === false){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.status || 'Error')\r\n                // setModalMessage(`${responseJson.statusText}`)\r\n                \r\n                // setModalShow(true)\r\n                NotificationManager.error(responseJson.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n            if(responseJson.resultCode && responseJson.resultCode != 2001){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.error.code || 'Error')\r\n                // setModalMessage(`${responseJson.error.message}`)\r\n                // setModalShow(true)\r\n\r\n                NotificationManager.error(responseJson.message, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n          //  window.location.href ='/dashboard';\r\n          setisSuccessModal(true)\r\n          setModalHeading('Thank You')\r\n          setModalMessage(`Our team will contact you soon.`)          \r\n          setModalShow(true)\r\n\r\n          })\r\n          .catch((error) => {\r\n            setIsLoading(false)\r\n            console.trace(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n          });\r\n    };\r\n\r\n   \r\n    return (\r\n\r\n        <div id=\"register\" className=\"section\">\r\n             \r\n            {isLoading && <Spinner />}\r\n             <MessageBox\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n            />\r\n\r\n        <Container>\r\n            <Row>\r\n                <Col md={5} id=\"contact-us-left-side\">\r\n                    <h1>\r\n                        Contact Information\r\n                    </h1>\r\n                    <div id=\"contact-us-info\">\r\n                            <p>\r\n                               <strong>Address: </strong> \r\n                               {/* <i className=\"fa fa-user\"></i> */}\r\n                                Evacuee Trust Complex, Islamabad Pakistan\r\n                            </p>\r\n\r\n                            <p>\r\n                            <strong>Email: </strong> \r\n                                <i className=\"fa fa-envelope\"></i>\r\n                                info@foster.com\r\n                            </p>\r\n                            <p>\r\n                            <strong>Phone: </strong> \r\n                                <i className=\"fa fa-phone\"></i> \r\n                                +92-313-6604801\r\n                            </p>\r\n\r\n                        </div>\r\n                        <div id=\"contact-us-social-links\"  style={{float:'right', marginRight:'25px'}} >\r\n                            <i className=\"fa fa-facebook\"></i>\r\n                            <i className=\"fa fa-twitter\"></i>\r\n                        </div>\r\n                </Col>\r\n\r\n                <Col md={7}  id=\"register-signup\">\r\n                    <div>\r\n                        <h2>\r\n                            Send, Your Request\r\n                        </h2>\r\n                        <p>\r\n                           We will get back to you in short. \r\n                        </p>\r\n                        <Row>\r\n                            <Col md={{span:10, offset:2}}>\r\n                        <Form  onSubmit={handleSubmit(onSubmit)}>\r\n                        \r\n                        \r\n                        <Form.Label htmlFor=\"fullname\" >\r\n                            Full Name \r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\"\r\n                               name=\"fullname\" \r\n                               placeholder=\"full name\" \r\n                               ref={register({required: 'full name is required'}) } \r\n                               \r\n                               />\r\n                              \r\n                          </InputGroup>\r\n                          {errors.fullname && <p>{errors.fullname.message}</p> }\r\n\r\n                          \r\n                          <Form.Label htmlFor=\"phone\" >\r\n                              Phone or Email\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              type=\"text\"\r\n                               \r\n                               name=\"phone\" \r\n                               placeholder=\"phone or email\" \r\n                               ref={register({\r\n                                   required: 'required a valid phone or email',\r\n                                   \r\n                                }) }\r\n                               \r\n                                />\r\n                          </InputGroup>\r\n                          {errors.phone && <p>{errors.phone.message}</p> }\r\n\r\n\r\n                          <Form.Label htmlFor=\"message\" >\r\n                            Message \r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              {/* <InputGroup.Prepend>\r\n                             \r\n                              </InputGroup.Prepend> */}\r\n                              <FormControl size=\"lg\"\r\n                               name=\"message\"  \r\n                               placeholder=\"message\" \r\n                               ref={register({required: 'message is required'}) } \r\n                               as=\"textarea\"\r\n                               />\r\n                              \r\n                          </InputGroup>\r\n                          {errors.message && <p>{errors.message.message}</p> }\r\n\r\n\r\n                         \r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading}\r\n                            className=\"btn-dark\"   \r\n                            type=\"submit\"\r\n                             >\r\n                              \r\n                              Send Request\r\n                          </Button>\r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                        </Row>\r\n                            \r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ContactUs","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\webrtc\\App.js",["526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578"],"import React, { useEffect, useState, useRef, Suspense } from 'react';\r\n//import io from \"socket.io-client\";\r\nimport './index.css';\r\nimport Peer from \"simple-peer\";\r\nimport Rodal from 'rodal'\r\nimport {Howl} from 'howler'\r\n\r\nimport Navigation from './Components/Navigation/Navigation'\r\nimport Footer from './Components/Footer/Footer'\r\n\r\nimport  'rodal/lib/rodal.css'\r\n\r\nimport camera from './Icons/camera.svg'\r\nimport camerastop from './Icons/camera-stop.svg'\r\nimport microphone from './Icons/microphone.svg'\r\nimport microphonestop from './Icons/microphone-stop.svg'\r\nimport share from './Icons/share.svg'\r\nimport hangup from './Icons/hang-up.svg'\r\nimport fullscreen from './Icons/fullscreen.svg'\r\nimport minimize from './Icons/minimize.svg'\r\nimport ringtone from './Sounds/ringtone.mp3'\r\n\r\nconst Watermark = React.lazy(()=>import('./Components/Watermark/Watermark'))\r\n\r\nconst ringtoneSound = new Howl({\r\n  src: [ringtone],\r\n  loop: true,\r\n  preload: true\r\n})\r\n\r\nfunction WebrtcApp() {\r\n  const [yourID, setYourID] = useState(\"\");\r\n  const [users, setUsers] = useState({});\r\n  const [stream, setStream] = useState();\r\n  const [receivingCall, setReceivingCall] = useState(false);\r\n  const [caller, setCaller] = useState(\"\");\r\n  const [callingFriend, setCallingFriend] = useState(false);\r\n  const [callerSignal, setCallerSignal] = useState();\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [callRejected, setCallRejected] = useState(false);\r\n  const [receiverID, setReceiverID] = useState('')\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [modalMessage, setModalMessage] = useState('')\r\n  const [audioMuted, setAudioMuted] = useState(false)\r\n  const [videoMuted, setVideoMuted] = useState(false)\r\n  const [isfullscreen, setFullscreen] = useState(false)\r\n  const [copied, setCopied] = useState(false)\r\n  \r\n  const userVideo = useRef();\r\n  const partnerVideo = useRef();\r\n  const socket = useRef();\r\n  const myPeer=useRef();\r\n\r\n  let landingHTML=<>\r\n    {/* <Navigation/> */}\r\n    <main>\r\n      <div className=\"u-margin-top-xxlarge u-margin-bottom-xxlarge\">\r\n    <div className=\"o-wrapper-l\">\r\n        <div className=\"hero flex flex-column\">\r\n            <div>\r\n                <div className=\"welcomeText\">\r\n                    Anonymous Video Calls\r\n                </div>\r\n                <div className=\"descriptionText\">\r\n                    across the world for free\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"actionText\">Who do you want to call, <span className={copied?\"username highlight copied\":\"username highlight\"} onClick={()=>{showCopiedMessage()}}>{yourID}</span>?</div>\r\n            </div>\r\n            <div className=\"callBox flex\">\r\n                <input type=\"text\" placeholder=\"Friend ID\" value={receiverID} onChange={e => setReceiverID(e.target.value)} className=\"form-input\"/>\r\n                <button onClick={() => callPeer(receiverID.toLowerCase().trim())} className=\"primaryButton\">Call</button>\r\n            </div>\r\n            <div>\r\n                To call your friend, ask them to open Cuckoo in their browser. <br/>\r\n                Send your username (<span className=\"username\">{yourID}</span>) and wait for their call <span style={{fontWeight: 600}}>OR</span> enter their username and hit call!\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    </main>\r\n    {/* <Footer/> */}\r\n  </>\r\n\r\n  // useEffect(() => {\r\n  \r\n  //   socket.current = io.connect(\"http://127.0.0.1:8000\");\r\n   \r\n  //   socket.current.on('connect_error', function(error) {\r\n  //     console.log(\"connect_error to WS server\", error);\r\n    \r\n  //   });\r\n   \r\n  //   socket.current.on('disconnect', function() {\r\n  //     console.log('Client disconnected.');\r\n  //   });\r\n\r\n  //   //console.log('socket.current ', socket.current)\r\n\r\n  //   socket.current.on(\"yourID\", (id) => {\r\n  //     console.log('received userid: ', id)\r\n  //     setYourID(id);\r\n  //   })\r\n  //   socket.current.on(\"allUsers\", (users) => {\r\n  //     setUsers(users);\r\n  //   })\r\n\r\n  //   socket.current.on(\"hey\", (data) => {\r\n  //     setReceivingCall(true);\r\n  //     ringtoneSound.play();\r\n  //     setCaller(data.from);\r\n  //     setCallerSignal(data.signal);\r\n  //   })\r\n  // }, []);\r\n\r\n  function callPeer(id) {\r\n    console.log('callPeer id: ', id)\r\n    if(id!=='' && users[id] && id!==yourID){\r\n      console.log('callPeer users found: ', id)\r\n      navigator\r\n      .mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then(stream => {\r\n        setStream(stream);\r\n        setCallingFriend(true)\r\n        setCaller(id)\r\n        console.log('userVideo: ',userVideo)\r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = stream;\r\n        }\r\n        const peer = new Peer({\r\n          initiator: true,\r\n          trickle: false,\r\n          config: {\r\n    \r\n            iceServers: [\r\n                {\r\n                    urls: \"stun:numb.viagenie.ca\",\r\n                    username: \"sultan1640@gmail.com\",\r\n                    credential: \"98376683\"\r\n                },\r\n                {\r\n                    urls: \"turn:numb.viagenie.ca\",\r\n                    username: \"sultan1640@gmail.com\",\r\n                    credential: \"98376683\"\r\n                }\r\n            ]\r\n        },\r\n          stream: stream,\r\n        });\r\n\r\n        myPeer.current=peer;\r\n    \r\n        peer.on(\"signal\", data => {\r\n          socket.current.emit(\"callUser\", { userToCall: id, signalData: data, from: yourID })\r\n        })\r\n    \r\n        peer.on(\"stream\", stream => {\r\n          if (partnerVideo.current) {\r\n            partnerVideo.current.srcObject = stream;\r\n          }\r\n        });\r\n\r\n        peer.on('error', (err)=>{\r\n          console.log(err)\r\n          endCall()\r\n        })\r\n    \r\n        socket.current.on(\"callAccepted\", signal => {\r\n          setCallAccepted(true);\r\n          peer.signal(signal);\r\n        })\r\n\r\n        socket.current.on('close', ()=>{\r\n          console.log('socket closed')\r\n          window.location.reload()\r\n        })\r\n  \r\n        socket.current.on('rejected', ()=>{\r\n          console.log('socket rejected')\r\n          window.location.reload()\r\n        })\r\n      })\r\n      .catch((error)=>{\r\n        console.log('error', error)\r\n        setModalMessage('You cannot place/ receive a call without granting video and audio permissions! Please change your settings to use Cuckoo.')\r\n        setModalVisible(true)\r\n      })\r\n    } else {\r\n      setModalMessage('We think the username entered is wrong. Please check again and retry!')\r\n      setModalVisible(true)\r\n      return\r\n    }\r\n  }\r\n\r\n  function acceptCall() {\r\n    ringtoneSound.unload();\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\r\n      setStream(stream);\r\n      if (userVideo.current) {\r\n        userVideo.current.srcObject = stream;\r\n      }\r\n      setCallAccepted(true);\r\n      const peer = new Peer({\r\n        initiator: false,\r\n        trickle: false,\r\n        stream: stream,\r\n      });\r\n\r\n      myPeer.current=peer\r\n\r\n      peer.on(\"signal\", data => {\r\n        socket.current.emit(\"acceptCall\", { signal: data, to: caller })\r\n      })\r\n\r\n      peer.on(\"stream\", stream => {\r\n        partnerVideo.current.srcObject = stream;\r\n      });\r\n\r\n      peer.on('error', (err)=>{\r\n        endCall()\r\n      })\r\n\r\n      peer.signal(callerSignal);\r\n\r\n      socket.current.on('close', ()=>{\r\n        console.log('socket closed')\r\n        window.location.reload()\r\n      })\r\n    })\r\n    .catch(()=>{\r\n      setModalMessage('You cannot place/ receive a call without granting video and audio permissions! Please change your settings to use Cuckoo.')\r\n      setModalVisible(true)\r\n    })\r\n  }\r\n\r\n  function rejectCall(){\r\n    ringtoneSound.unload();\r\n    setCallRejected(true)\r\n    socket.current.emit('rejected', {to:caller})\r\n    window.location.reload()\r\n  }\r\n\r\n  function endCall(){\r\n    myPeer.current.destroy()\r\n    socket.current.emit('close',{to:caller})\r\n    window.location.reload()\r\n  }\r\n\r\n  function shareScreen(){\r\n    navigator.mediaDevices.getDisplayMedia({cursor:true})\r\n    .then(screenStream=>{\r\n      myPeer.current.replaceTrack(stream.getVideoTracks()[0],screenStream.getVideoTracks()[0],stream)\r\n      userVideo.current.srcObject=screenStream\r\n      screenStream.getTracks()[0].onended = () =>{\r\n      myPeer.current.replaceTrack(screenStream.getVideoTracks()[0],stream.getVideoTracks()[0],stream)\r\n      userVideo.current.srcObject=stream\r\n      }\r\n    })\r\n  }\r\n\r\n  function toggleMuteAudio(){\r\n    if(stream){\r\n      setAudioMuted(!audioMuted)\r\n      stream.getAudioTracks()[0].enabled = audioMuted\r\n    }\r\n  }\r\n\r\n  function toggleMuteVideo(){\r\n    if(stream){\r\n      setVideoMuted(!videoMuted)\r\n      stream.getVideoTracks()[0].enabled = videoMuted\r\n    }\r\n  }\r\n\r\n  function renderLanding() {\r\n    if(!callRejected && !callAccepted && !callingFriend)\r\n      return 'block'\r\n    return 'none'\r\n  }\r\n\r\n  function renderCall() {\r\n    if(!callRejected && !callAccepted && !callingFriend)\r\n      return 'none'\r\n    return 'block'\r\n  }\r\n\r\n  function isMobileDevice() {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\r\n    return check;\r\n  };\r\n\r\n  function showCopiedMessage(){\r\n    navigator.clipboard.writeText(yourID)\r\n    setCopied(true)\r\n    setInterval(()=>{\r\n      setCopied(false)\r\n    },1000)\r\n  }\r\n\r\n  let UserVideo;\r\n  if (stream) {\r\n    UserVideo = (\r\n      <video className=\"userVideo\" playsInline muted ref={userVideo} autoPlay />\r\n    );\r\n  }\r\n\r\n  let PartnerVideo;\r\n  if (callAccepted && isfullscreen) {\r\n    PartnerVideo = (\r\n      <video className=\"partnerVideo cover\" playsInline ref={partnerVideo} autoPlay />\r\n    );\r\n  } else if (callAccepted && !isfullscreen){\r\n    PartnerVideo = (\r\n      <video className=\"partnerVideo\" playsInline ref={partnerVideo} autoPlay />\r\n    );\r\n  }\r\n\r\n  let incomingCall;\r\n  if (receivingCall && !callAccepted && !callRejected) {\r\n    incomingCall = (\r\n      <div className=\"incomingCallContainer\">\r\n        <div className=\"incomingCall flex flex-column\">\r\n          <div><span className=\"callerID\">{caller}</span> is calling you!</div>\r\n          <div className=\"incomingCallButtons flex\">\r\n          <button name=\"accept\" className=\"alertButtonPrimary\" onClick={()=>acceptCall()}>Accept</button>\r\n          <button name=\"reject\" className=\"alertButtonSecondary\" onClick={()=>rejectCall()}>Reject</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  let audioControl;\r\n  if(audioMuted){\r\n    audioControl=<span className=\"iconContainer\" onClick={()=>toggleMuteAudio()}>\r\n      <img src={microphonestop} alt=\"Unmute audio\"/>\r\n    </span>\r\n  } else {\r\n    audioControl=<span className=\"iconContainer\" onClick={()=>toggleMuteAudio()}>\r\n      <img src={microphone} alt=\"Mute audio\"/>\r\n    </span>\r\n  }\r\n\r\n  let videoControl;\r\n  if(videoMuted){\r\n    videoControl=<span className=\"iconContainer\" onClick={()=>toggleMuteVideo()}>\r\n      <img src={camerastop} alt=\"Resume video\"/>\r\n    </span>\r\n  } else {\r\n    videoControl=<span className=\"iconContainer\" onClick={()=>toggleMuteVideo()}>\r\n      <img src={camera} alt=\"Stop audio\"/>\r\n    </span>\r\n  }\r\n\r\n  let screenShare=<span className=\"iconContainer\" onClick={()=>shareScreen()}>\r\n    <img src={share} alt=\"Share screen\"/>\r\n  </span>\r\n  if(isMobileDevice()){\r\n    screenShare=<></>\r\n  }\r\n\r\n  let hangUp=<span className=\"iconContainer\" onClick={()=>endCall()}>\r\n    <img src={hangup} alt=\"End call\"/>\r\n  </span>\r\n\r\n  let fullscreenButton;  \r\n  if(isfullscreen){\r\n    fullscreenButton=<span className=\"iconContainer\" onClick={()=>{setFullscreen(false)}}>\r\n      <img src={minimize} alt=\"fullscreen\"/>\r\n    </span>\r\n  } else {\r\n    fullscreenButton=<span className=\"iconContainer\" onClick={()=>{setFullscreen(true)}}>\r\n      <img src={fullscreen} alt=\"fullscreen\"/>\r\n    </span>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{display: renderLanding()}}>\r\n        {landingHTML}\r\n        <Rodal \r\n          visible={modalVisible} \r\n          onClose={()=>setModalVisible(false)} \r\n          width={20} \r\n          height={5} \r\n          measure={'em'}\r\n          closeOnEsc={true}\r\n        >\r\n          <div>{modalMessage}</div>\r\n        </Rodal>\r\n        {incomingCall}\r\n      </div>\r\n      <div className=\"callContainer\" style={{display: renderCall()}}>\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Watermark/>\r\n        </Suspense>\r\n        <div className=\"partnerVideoContainer\">\r\n          {PartnerVideo}\r\n        </div>\r\n        <div className=\"userVideoContainer\">\r\n          {UserVideo}\r\n        </div>\r\n        <div className=\"controlsContainer flex\">\r\n          {audioControl}\r\n          {videoControl}\r\n          {screenShare}\r\n          {fullscreenButton}\r\n          {hangUp}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WebrtcApp;","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\webrtc\\Components\\Footer\\Footer.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\webrtc\\Components\\Watermark\\Watermark.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\webrtc\\Components\\Navigation\\Navigation.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\StudentRequest.js",["579","580","581","582","583","584","585","586","587","588","589"],"\r\nimport React, {useState} from \"react\";\r\nimport {\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup } from 'react-bootstrap';\r\n    \r\nimport Spinner from '../components/common/Spinner';\r\nimport {useForm} from 'react-hook-form';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nimport { studyRequests } from \"../services\";\r\n\r\n\r\n\r\n\r\nexport default function StudentRequest (props){\r\n    const { register, handleSubmit, errors, watch } = useForm(); // initialize the hook\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n\r\n    const onSubbmit = (data)=>{\r\n        data.from = '01'\r\n        data.to = props.match.params.tutorId\r\n        if(data.message){\r\n            data.messages = []\r\n            data.messages.push({from: data.from, to: data.to, text: data.message}) \r\n        }\r\n        delete data.message\r\n        setIsLoading(true)\r\n        studyRequests(data)\r\n        .then(result => {\r\n            setIsLoading(false)\r\n            console.log('study requests', result)\r\n            NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n        })\r\n        .catch(error => {\r\n            setIsLoading(false)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n            <div style={{ marginBottom:'50px'}} className=\"section\">\r\n            {isLoading && <Spinner />}\r\n\r\n                <Container>\r\n                    <Row>\r\n                    <Col md={7}  id=\"register-signup\">\r\n                    {/* <div> */}\r\n                        <h2>\r\n                            Send, Your Request\r\n                        </h2>\r\n                        <p>\r\n                           Your instructor will contact you soon.\r\n                        </p>\r\n                        {/* <Row> */}\r\n                            {/* <Col md={{span:10, offset:2}}> */}\r\n                        <Form  onSubmit={handleSubmit(onSubbmit)}>\r\n                        \r\n                        \r\n                        <Form.Label htmlFor=\"subjects\" >\r\n                            Subject\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\"\r\n                               name=\"subjects\" \r\n                               placeholder=\"subject\" \r\n                               ref={register({required: 'subject is required'}) } \r\n                               \r\n                               />\r\n                              \r\n                          </InputGroup>\r\n                          {errors.subjects && <p>{errors.subjects.message}</p> }\r\n\r\n                          <Form.Row>\r\n                              <Col>\r\n                              <Form.Label htmlFor=\"lessonType\" >\r\n                            Lesson Type\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              as=\"select\"\r\n                               \r\n                               name=\"lessonType\" \r\n                               ref={register({\r\n                                   required: 'Select a lesson Type',\r\n                                   \r\n                                }) }\r\n                               \r\n                                >\r\n                                    <option value=\"\" />\r\n                                <option value=\"online\">Online Lesson</option>\r\n                                <option value=\"inperson\">In Person Lesson</option>\r\n                                </FormControl>\r\n                          </InputGroup>\r\n                          {errors.lessonType && <p>{errors.lessonType.message}</p> }\r\n\r\n\r\n                              </Col>\r\n\r\n                              <Col>\r\n                              <Form.Label htmlFor=\"timeFrom\" >\r\n                            Availability From\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              as=\"select\"\r\n                               \r\n                               name=\"timeFrom\" \r\n                               ref={register({\r\n                                   required: 'Select a time',\r\n                                   \r\n                                }) }\r\n                               \r\n                                >\r\n                                    <option value=\"\" />\r\n                                <option value=\"10:00 AM\">10:00 AM</option>\r\n                                <option value=\"11:00 AM\">11:00 AM</option>\r\n                                <option value=\"12:00 AM\">12:00 AM</option>\r\n                                <option value=\"1:00 PM\">1:00 PM</option>\r\n                                </FormControl>\r\n                          </InputGroup>\r\n                          {errors.timeFrom && <p>{errors.timeFrom.message}</p> }\r\n\r\n                              </Col>\r\n\r\n                              <Col>\r\n                              <Form.Label htmlFor=\"timeTo\" >\r\n                            Availability To\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              as=\"select\"\r\n                               \r\n                               name=\"timeTo\" \r\n                               ref={register({\r\n                                   required: 'Select a time',\r\n                                   \r\n                                }) }\r\n                               \r\n                                >\r\n                                    <option value=\"\" />\r\n                                <option value=\"10:00 AM\">10:00 AM</option>\r\n                                <option value=\"11:00 AM\">11:00 AM</option>\r\n                                <option value=\"12:00 AM\">12:00 AM</option>\r\n                                <option value=\"1:00 PM\">1:00 PM</option>\r\n                                </FormControl>\r\n                          </InputGroup>\r\n                          {errors.timeTo && <p>{errors.timeTo.message}</p> }\r\n                          </Col>\r\n                          </Form.Row>\r\n                                                \r\n\r\n\r\n                          <Form.Label htmlFor=\"message\" >\r\n                            Message \r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              {/* <InputGroup.Prepend>\r\n                             \r\n                              </InputGroup.Prepend> */}\r\n                              <FormControl size=\"lg\"\r\n                               name=\"message\"  \r\n                               placeholder=\"message\" \r\n                               ref={register({required: 'message is required'}) } \r\n                               as=\"textarea\"\r\n                               />\r\n                              \r\n                          </InputGroup>\r\n                          {errors.message && <p>{errors.message.message}</p> }\r\n\r\n\r\n                         \r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading}\r\n                            className=\"btn-dark\"   \r\n                            type=\"submit\"\r\n                            style={{marginLeft:'25%'}}\r\n                             >\r\n                              \r\n                              Send Request\r\n                          </Button>\r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n    )\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSNewRequests.js",["590","591","592","593","594","595","596"],"import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col,Form, Button, Table } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getStudentRequests } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\nfunction DSNewRequests  (props){\r\n    \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [requests, setrequests] = useState([]);\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    \r\n    useEffect(() => {\r\n            setIsLoading(true)\r\n            getStudentRequests({to: '60166cf606ea483ed889951b'}).then(requests => {\r\n                setIsLoading(false)\r\n                setrequests(requests);\r\n\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, []);\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n        {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row> \r\n                <Col md={{span:12, offset:0}}>\r\n                <h2 className=\"section-heading\">New Requests</h2>\r\n                <Table striped bordered hover  responsive  size=\"md\" >\r\n                    <thead>\r\n                        <tr> \r\n                        <th>From</th>\r\n                        <th>To</th>\r\n                        <th>Availability From</th>\r\n                        <th>Availability To</th>\r\n                        <th>Lesson Type</th>\r\n                        <th>Subjects</th>\r\n                        {/* <th>Status</th> */}\r\n                        <th>Reply</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {requests.map(((r, index) => <tr key={index}> \r\n                            <td>{r.from}</td>\r\n                            <td>{r.to}</td>\r\n                            <td>{r.timeFrom}</td>\r\n                            <td>{r.timeTo}</td>\r\n                            <td>{r.lessonType}</td>\r\n                            <td>{r.subjects}</td>\r\n                            {/* <td>{r.status}</td> */}\r\n                            <td><Link to={`/dashboard/chat-box/${r.to}`} > Chat </Link> </td>\r\n                            <td><Link to={`/dashboard/accept-request/${r.id}/from/${r.from}`} > Accept </Link> </td>\r\n                             </tr>\r\n                             )) }\r\n                        \r\n\r\n                    </tbody>\r\n                </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSNewRequests","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSChatBox.js",["597","598","599","600","601","602","603","604","605","606","607","608","609","610"],"import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col,Form, Button, Table, InputGroup, FormControl } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getMessages, getConnectedUsers } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\nfunction DSChatBox  (props){\r\n    \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [chatWith, setchatWith] = useState(props.match.params.to ? props.match.params.to : '' );\r\n   const [messagesList, setmessagesList] = useState([]);\r\n   const [message, setmessage] = useState('');\r\n    let userId = localStorage.getItem('userId')\r\n   //const socket =  localStorage.getItem('currentSocket')\r\n   //console.log('local storage socket', socket)\r\n   //socket = JSON.parse(socket)\r\n   //console.log('local storage socket', socket)\r\n    // if(props.match && props.match.params){\r\n    //     console.log(props.match.params)\r\n    //     setchatWith(props.match.params.to)\r\n    // }\r\n\r\n    useEffect(() => {\r\n        if(chatWith){\r\n            getMessages({to:chatWith, from: userId})\r\n            .then(result=>{\r\n                console.log(result)\r\n                setmessagesList(result)\r\n                console.log(messagesList)\r\n\r\n                window.currentSocket.on('message', (data)=>{\r\n                    console.log('received new message..', data)\r\n                    let newMessages = messagesList.slice()\r\n                    newMessages.push(data)\r\n                    setmessagesList(newMessages)\r\n                })\r\n                //messagesList.concat({to:'1', from: '2', message:'hi'})\r\n            })\r\n            .catch(error=>{\r\n                console.log(error)\r\n            })\r\n        }\r\n       \r\n        getConnectedUsers({id: userId})\r\n        .then(connections => {\r\n\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n        })\r\n        \r\n\r\n    }, []);\r\n\r\n    const changeHandler = (event)=>{\r\n        let {name, value} = event.target;\r\n        setmessage(value)\r\n    }\r\n    const sendMessage = ()=>{\r\n        if(!message) return\r\n\r\n        let data = {\r\n            from:userId,\r\n            to: chatWith,\r\n            message: message,\r\n        }\r\n        let newMessages = messagesList.slice()\r\n        newMessages.push(data)\r\n        setmessagesList(newMessages)\r\n\r\n        window.currentSocket.emit('message', data)\r\n       \r\n        setmessage('')\r\n    }\r\n\r\n   \r\n\r\n\r\n\r\n    return (\r\n        <div className=\"\">\r\n        {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row style={{width:'150%'}}> \r\n                <Col md={{span:8, offset:0}} style={{marginBottom:'20%', marginTop:'40%' }}>\r\n                {/* <h2 className=\"section-heading\"></h2> */}\r\n                <div>\r\n                {messagesList &&\r\n                messagesList.map((msg, index)=>{\r\n                    if(msg.from == userId){\r\n                       return <div key={index} className=\"message-from\">\r\n                            \r\n                            <p >\r\n                                {msg.message}\r\n                            </p>\r\n                            <img src=\"\" alt=\"user image\"  />\r\n                        </div>\r\n\r\n                    }\r\n                    else{\r\n                       return <div key={index} className=\"message-to\">\r\n                                <img  src=\"\" alt=\"user image\" />\r\n                                <p>\r\n                                    {msg.message}\r\n                                </p>\r\n                            </div>\r\n                    }\r\n                })\r\n                }\r\n                </div>\r\n                \r\n                <div >\r\n                <Form >\r\n                    <Form.Row className=\"align-items-center\">\r\n                        \r\n                        <Col xs=\"auto\" md=\"10\">\r\n                        <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\r\n                            Message\r\n                        </Form.Label>\r\n                        <InputGroup className=\"\">\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>@</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl \r\n                             placeholder=\"type your message\" \r\n                             as=\"textarea\"\r\n                             name=\"message\"\r\n                             value={message}\r\n                             onChange={changeHandler}\r\n                             />\r\n                        </InputGroup>\r\n                        </Col>\r\n                       \r\n                        <Col xs=\"auto\" >\r\n                        <Button onClick={handleSubmit(sendMessage)} className=\"mb-2\">\r\n                            Send\r\n                        </Button>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    </Form>\r\n                </div>\r\n\r\n                </Col>\r\n                <Col md={{span:4, offset:0}} className=\"chat-box-right\">\r\n                <h4 className=\"\">Connected Users</h4>\r\n\r\n                    <div style={{display:'flex'}} className=\"chat-users\">\r\n                        <img width=\"59px\" src=\"\" alt=\"user image\" />\r\n                        <span>\r\n                            <p style={{marginBottom:'0'}}><strong>bilal </strong></p>\r\n                            <p>from: karachi</p>\r\n                        </span>\r\n                        <span style={{background:'#cc2d1c', height:'30px', width:'30px',textAlign:'center', borderRadius:'50%', color:'#fff' }}> 1 </span>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n\r\n}\r\n\r\nexport default DSChatBox","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\common\\Socket.js",["611","612"],"\r\nimport React, {useState, useEffect, useRef} from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nexport default function Socket () {\r\n\r\n    const [yourID, setYourID] = useState(\"\");\r\n    const [users, setUsers] = useState({});\r\n    const socket = useRef();\r\n\r\n    useEffect(() => {\r\n  \r\n        let user = localStorage.getItem('user')\r\n           \r\n        socket.current = io.connect(\"http://127.0.0.1:8000\");\r\n       \r\n        //window.currentSocket = socket.current;\r\n        socket.current.on('connect', () => {\r\n            socket.current.emit('session', {userId: user.id})\r\n            window.currentSocket = socket.current;\r\n            //localStorage.setItem('currentSocket', JSON.stringify(socket.current))\r\n           // console.log(socket.current)\r\n        })\r\n    \r\n        socket.current.on('connect_error', function(error) {\r\n          console.log(\"connect_error to WS server\", error);\r\n        \r\n        });\r\n       \r\n        socket.current.on('disconnect', function() {\r\n          console.log('Client disconnected.');\r\n        });\r\n    \r\n        //console.log('socket.current ', socket.current)\r\n    \r\n        socket.current.on(\"yourID\", (id) => {\r\n          console.log('received userid: ', id)\r\n          setYourID(id);\r\n          localStorage.setItem('socketId', id)\r\n        })\r\n        socket.current.on(\"allUsers\", (users) => {\r\n          setUsers(users);\r\n        })\r\n    \r\n        // socket.current.on(\"hey\", (data) => {\r\n        //   setReceivingCall(true);\r\n        //   ringtoneSound.play();\r\n        //   setCaller(data.from);\r\n        //   setCallerSignal(data.signal);\r\n        // })\r\n      }, []);\r\n\r\n      return (<div></div>)\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSClasses.js",["613","614","615","616","617","618","619"],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSClassesDetails.js",["620","621","622","623","624","625","626","627","628","629","630"],"import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col,Form, Button, Table } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getMyClasses } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport  WebrtcApp from \"../webrtc/App\";\r\n\r\nexport default function DSClassesDetails (){\r\n\r\n    \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [classes, setclasses] = useState([]);\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    useEffect(() => {\r\n            setIsLoading(true)\r\n            getMyClasses({instructorId: userId})\r\n            .then(cls => {\r\n                setIsLoading(false)\r\n                setclasses(cls);\r\n\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            {isLoading && <Spinner />}\r\n            <Container>\r\n                <Row> \r\n                    <Col md={{span:12, offset:0}}>\r\n                    <h2 className=\"section-heading\">Classes/Sessions</h2>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n       </div>\r\n    )  \r\n                \r\n} ","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\AcceptStudentRequest.js",["631","632","633","634","635","636","637","638","639","640","641"],{"ruleId":"642","replacedBy":"643"},{"ruleId":"644","replacedBy":"645"},{"ruleId":"646","severity":1,"message":"647","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":12},{"ruleId":"650","severity":1,"message":"651","line":24,"column":27,"nodeType":"652","endLine":24,"endColumn":87},{"ruleId":"650","severity":1,"message":"651","line":32,"column":27,"nodeType":"652","endLine":32,"endColumn":87},{"ruleId":"646","severity":1,"message":"653","line":3,"column":31,"nodeType":"648","messageId":"649","endLine":3,"endColumn":37},{"ruleId":"654","severity":1,"message":"655","line":24,"column":34,"nodeType":"652","endLine":24,"endColumn":45},{"ruleId":"654","severity":1,"message":"655","line":27,"column":33,"nodeType":"652","endLine":27,"endColumn":44},{"ruleId":"654","severity":1,"message":"655","line":33,"column":34,"nodeType":"652","endLine":33,"endColumn":45},{"ruleId":"654","severity":1,"message":"655","line":36,"column":33,"nodeType":"652","endLine":36,"endColumn":44},{"ruleId":"646","severity":1,"message":"656","line":15,"column":46,"nodeType":"648","messageId":"649","endLine":15,"endColumn":64},{"ruleId":"646","severity":1,"message":"657","line":2,"column":10,"nodeType":"648","messageId":"649","endLine":2,"endColumn":19},{"ruleId":"646","severity":1,"message":"658","line":2,"column":21,"nodeType":"648","messageId":"649","endLine":2,"endColumn":24},{"ruleId":"646","severity":1,"message":"659","line":2,"column":26,"nodeType":"648","messageId":"649","endLine":2,"endColumn":29},{"ruleId":"646","severity":1,"message":"660","line":3,"column":31,"nodeType":"648","messageId":"649","endLine":3,"endColumn":35},{"ruleId":"646","severity":1,"message":"657","line":4,"column":10,"nodeType":"648","messageId":"649","endLine":4,"endColumn":19},{"ruleId":"646","severity":1,"message":"658","line":4,"column":21,"nodeType":"648","messageId":"649","endLine":4,"endColumn":24},{"ruleId":"646","severity":1,"message":"661","line":5,"column":11,"nodeType":"648","messageId":"649","endLine":5,"endColumn":21},{"ruleId":"646","severity":1,"message":"662","line":5,"column":23,"nodeType":"648","messageId":"649","endLine":5,"endColumn":34},{"ruleId":"646","severity":1,"message":"660","line":5,"column":5,"nodeType":"648","messageId":"649","endLine":5,"endColumn":9},{"ruleId":"646","severity":1,"message":"661","line":5,"column":11,"nodeType":"648","messageId":"649","endLine":5,"endColumn":21},{"ruleId":"646","severity":1,"message":"662","line":5,"column":23,"nodeType":"648","messageId":"649","endLine":5,"endColumn":34},{"ruleId":"646","severity":1,"message":"653","line":6,"column":5,"nodeType":"648","messageId":"649","endLine":6,"endColumn":11},{"ruleId":"654","severity":1,"message":"655","line":19,"column":31,"nodeType":"652","endLine":19,"endColumn":68},{"ruleId":"650","severity":1,"message":"651","line":21,"column":31,"nodeType":"652","endLine":21,"endColumn":88},{"ruleId":"646","severity":1,"message":"663","line":2,"column":16,"nodeType":"648","messageId":"649","endLine":2,"endColumn":24},{"ruleId":"646","severity":1,"message":"664","line":4,"column":22,"nodeType":"648","messageId":"649","endLine":4,"endColumn":28},{"ruleId":"646","severity":1,"message":"657","line":2,"column":10,"nodeType":"648","messageId":"649","endLine":2,"endColumn":19},{"ruleId":"646","severity":1,"message":"658","line":2,"column":21,"nodeType":"648","messageId":"649","endLine":2,"endColumn":24},{"ruleId":"646","severity":1,"message":"659","line":2,"column":26,"nodeType":"648","messageId":"649","endLine":2,"endColumn":29},{"ruleId":"646","severity":1,"message":"665","line":2,"column":31,"nodeType":"648","messageId":"649","endLine":2,"endColumn":40},{"ruleId":"646","severity":1,"message":"666","line":2,"column":42,"nodeType":"648","messageId":"649","endLine":2,"endColumn":46},{"ruleId":"646","severity":1,"message":"667","line":4,"column":3,"nodeType":"648","messageId":"649","endLine":4,"endColumn":7},{"ruleId":"650","severity":1,"message":"651","line":18,"column":15,"nodeType":"652","endLine":18,"endColumn":79},{"ruleId":"654","severity":1,"message":"655","line":95,"column":21,"nodeType":"652","endLine":95,"endColumn":51},{"ruleId":"646","severity":1,"message":"664","line":3,"column":22,"nodeType":"648","messageId":"649","endLine":3,"endColumn":28},{"ruleId":"646","severity":1,"message":"657","line":7,"column":10,"nodeType":"648","messageId":"649","endLine":7,"endColumn":19},{"ruleId":"646","severity":1,"message":"658","line":7,"column":21,"nodeType":"648","messageId":"649","endLine":7,"endColumn":24},{"ruleId":"646","severity":1,"message":"659","line":7,"column":26,"nodeType":"648","messageId":"649","endLine":7,"endColumn":29},{"ruleId":"646","severity":1,"message":"665","line":7,"column":31,"nodeType":"648","messageId":"649","endLine":7,"endColumn":40},{"ruleId":"646","severity":1,"message":"666","line":7,"column":42,"nodeType":"648","messageId":"649","endLine":7,"endColumn":46},{"ruleId":"646","severity":1,"message":"667","line":3,"column":3,"nodeType":"648","messageId":"649","endLine":3,"endColumn":7},{"ruleId":"646","severity":1,"message":"667","line":3,"column":3,"nodeType":"648","messageId":"649","endLine":3,"endColumn":7},{"ruleId":"646","severity":1,"message":"663","line":2,"column":16,"nodeType":"648","messageId":"649","endLine":2,"endColumn":24},{"ruleId":"646","severity":1,"message":"663","line":2,"column":16,"nodeType":"648","messageId":"649","endLine":2,"endColumn":24},{"ruleId":"646","severity":1,"message":"663","line":2,"column":16,"nodeType":"648","messageId":"649","endLine":2,"endColumn":24},{"ruleId":"642","replacedBy":"668"},{"ruleId":"644","replacedBy":"669"},{"ruleId":"646","severity":1,"message":"656","line":17,"column":14,"nodeType":"648","messageId":"649","endLine":17,"endColumn":32},{"ruleId":"646","severity":1,"message":"670","line":25,"column":11,"nodeType":"648","messageId":"649","endLine":25,"endColumn":20},{"ruleId":"646","severity":1,"message":"671","line":26,"column":9,"nodeType":"648","messageId":"649","endLine":26,"endColumn":19},{"ruleId":"646","severity":1,"message":"653","line":5,"column":31,"nodeType":"648","messageId":"649","endLine":5,"endColumn":37},{"ruleId":"654","severity":1,"message":"655","line":26,"column":34,"nodeType":"652","endLine":26,"endColumn":45},{"ruleId":"646","severity":1,"message":"667","line":4,"column":3,"nodeType":"648","messageId":"649","endLine":4,"endColumn":7},{"ruleId":"646","severity":1,"message":"660","line":3,"column":31,"nodeType":"648","messageId":"649","endLine":3,"endColumn":35},{"ruleId":"646","severity":1,"message":"672","line":12,"column":11,"nodeType":"648","messageId":"649","endLine":12,"endColumn":19},{"ruleId":"646","severity":1,"message":"673","line":12,"column":21,"nodeType":"648","messageId":"649","endLine":12,"endColumn":33},{"ruleId":"646","severity":1,"message":"674","line":12,"column":35,"nodeType":"648","messageId":"649","endLine":12,"endColumn":43},{"ruleId":"646","severity":1,"message":"675","line":12,"column":45,"nodeType":"648","messageId":"649","endLine":12,"endColumn":51},{"ruleId":"646","severity":1,"message":"676","line":2,"column":37,"nodeType":"648","messageId":"649","endLine":2,"endColumn":43},{"ruleId":"646","severity":1,"message":"677","line":11,"column":12,"nodeType":"648","messageId":"649","endLine":11,"endColumn":20},{"ruleId":"646","severity":1,"message":"678","line":11,"column":22,"nodeType":"648","messageId":"649","endLine":11,"endColumn":33},{"ruleId":"650","severity":1,"message":"651","line":36,"column":15,"nodeType":"652","endLine":36,"endColumn":114},{"ruleId":"646","severity":1,"message":"657","line":2,"column":10,"nodeType":"648","messageId":"649","endLine":2,"endColumn":19},{"ruleId":"646","severity":1,"message":"658","line":2,"column":21,"nodeType":"648","messageId":"649","endLine":2,"endColumn":24},{"ruleId":"646","severity":1,"message":"659","line":2,"column":26,"nodeType":"648","messageId":"649","endLine":2,"endColumn":29},{"ruleId":"646","severity":1,"message":"664","line":3,"column":22,"nodeType":"648","messageId":"649","endLine":3,"endColumn":28},{"ruleId":"679","severity":1,"message":"680","line":63,"column":8,"nodeType":"681","endLine":63,"endColumn":10,"suggestions":"682"},{"ruleId":"679","severity":1,"message":"680","line":59,"column":8,"nodeType":"681","endLine":59,"endColumn":10,"suggestions":"683"},{"ruleId":"646","severity":1,"message":"663","line":2,"column":16,"nodeType":"648","messageId":"649","endLine":2,"endColumn":24},{"ruleId":"646","severity":1,"message":"664","line":4,"column":22,"nodeType":"648","messageId":"649","endLine":4,"endColumn":28},{"ruleId":"646","severity":1,"message":"657","line":2,"column":10,"nodeType":"648","messageId":"649","endLine":2,"endColumn":19},{"ruleId":"646","severity":1,"message":"658","line":2,"column":21,"nodeType":"648","messageId":"649","endLine":2,"endColumn":24},{"ruleId":"646","severity":1,"message":"659","line":2,"column":26,"nodeType":"648","messageId":"649","endLine":2,"endColumn":29},{"ruleId":"646","severity":1,"message":"665","line":2,"column":31,"nodeType":"648","messageId":"649","endLine":2,"endColumn":40},{"ruleId":"646","severity":1,"message":"666","line":2,"column":42,"nodeType":"648","messageId":"649","endLine":2,"endColumn":46},{"ruleId":"650","severity":1,"message":"651","line":24,"column":27,"nodeType":"652","endLine":24,"endColumn":87},{"ruleId":"650","severity":1,"message":"651","line":32,"column":27,"nodeType":"652","endLine":32,"endColumn":87},{"ruleId":"646","severity":1,"message":"663","line":2,"column":16,"nodeType":"648","messageId":"649","endLine":2,"endColumn":24},{"ruleId":"646","severity":1,"message":"684","line":19,"column":45,"nodeType":"648","messageId":"649","endLine":19,"endColumn":50},{"ruleId":"646","severity":1,"message":"685","line":23,"column":26,"nodeType":"648","messageId":"649","endLine":23,"endColumn":41},{"ruleId":"646","severity":1,"message":"686","line":24,"column":26,"nodeType":"648","messageId":"649","endLine":24,"endColumn":41},{"ruleId":"646","severity":1,"message":"687","line":25,"column":28,"nodeType":"648","messageId":"649","endLine":25,"endColumn":45},{"ruleId":"688","severity":1,"message":"689","line":39,"column":67,"nodeType":"690","messageId":"691","endLine":39,"endColumn":69},{"ruleId":"646","severity":1,"message":"657","line":4,"column":10,"nodeType":"648","messageId":"649","endLine":4,"endColumn":19},{"ruleId":"646","severity":1,"message":"658","line":4,"column":21,"nodeType":"648","messageId":"649","endLine":4,"endColumn":24},{"ruleId":"646","severity":1,"message":"661","line":5,"column":11,"nodeType":"648","messageId":"649","endLine":5,"endColumn":21},{"ruleId":"646","severity":1,"message":"662","line":5,"column":23,"nodeType":"648","messageId":"649","endLine":5,"endColumn":34},{"ruleId":"646","severity":1,"message":"674","line":15,"column":35,"nodeType":"648","messageId":"649","endLine":15,"endColumn":43},{"ruleId":"646","severity":1,"message":"675","line":15,"column":45,"nodeType":"648","messageId":"649","endLine":15,"endColumn":51},{"ruleId":"646","severity":1,"message":"692","line":16,"column":10,"nodeType":"648","messageId":"649","endLine":16,"endColumn":17},{"ruleId":"646","severity":1,"message":"693","line":16,"column":19,"nodeType":"648","messageId":"649","endLine":16,"endColumn":29},{"ruleId":"646","severity":1,"message":"659","line":3,"column":16,"nodeType":"648","messageId":"649","endLine":3,"endColumn":19},{"ruleId":"646","severity":1,"message":"694","line":5,"column":3,"nodeType":"648","messageId":"649","endLine":5,"endColumn":13},{"ruleId":"688","severity":1,"message":"689","line":46,"column":67,"nodeType":"690","messageId":"691","endLine":46,"endColumn":69},{"ruleId":"646","severity":1,"message":"675","line":18,"column":37,"nodeType":"648","messageId":"649","endLine":18,"endColumn":43},{"ruleId":"646","severity":1,"message":"684","line":18,"column":45,"nodeType":"648","messageId":"649","endLine":18,"endColumn":50},{"ruleId":"646","severity":1,"message":"685","line":22,"column":26,"nodeType":"648","messageId":"649","endLine":22,"endColumn":41},{"ruleId":"646","severity":1,"message":"686","line":23,"column":26,"nodeType":"648","messageId":"649","endLine":23,"endColumn":41},{"ruleId":"646","severity":1,"message":"687","line":24,"column":28,"nodeType":"648","messageId":"649","endLine":24,"endColumn":45},{"ruleId":"688","severity":1,"message":"689","line":43,"column":67,"nodeType":"690","messageId":"691","endLine":43,"endColumn":69},{"ruleId":"646","severity":1,"message":"660","line":7,"column":5,"nodeType":"648","messageId":"649","endLine":7,"endColumn":9},{"ruleId":"646","severity":1,"message":"661","line":7,"column":11,"nodeType":"648","messageId":"649","endLine":7,"endColumn":21},{"ruleId":"646","severity":1,"message":"662","line":7,"column":23,"nodeType":"648","messageId":"649","endLine":7,"endColumn":34},{"ruleId":"646","severity":1,"message":"653","line":8,"column":5,"nodeType":"648","messageId":"649","endLine":8,"endColumn":11},{"ruleId":"650","severity":1,"message":"651","line":28,"column":31,"nodeType":"652","endLine":28,"endColumn":136},{"ruleId":"695","severity":2,"message":"696","line":25,"column":11,"nodeType":"648","messageId":"697","endLine":25,"endColumn":14},{"ruleId":"646","severity":1,"message":"698","line":2,"column":16,"nodeType":"648","messageId":"649","endLine":2,"endColumn":24},{"ruleId":"646","severity":1,"message":"699","line":2,"column":8,"nodeType":"648","messageId":"649","endLine":2,"endColumn":13},{"ruleId":"646","severity":1,"message":"698","line":2,"column":16,"nodeType":"648","messageId":"649","endLine":2,"endColumn":24},{"ruleId":"646","severity":1,"message":"700","line":9,"column":12,"nodeType":"648","messageId":"649","endLine":9,"endColumn":21},{"ruleId":"646","severity":1,"message":"684","line":18,"column":45,"nodeType":"648","messageId":"649","endLine":18,"endColumn":50},{"ruleId":"646","severity":1,"message":"685","line":22,"column":26,"nodeType":"648","messageId":"649","endLine":22,"endColumn":41},{"ruleId":"646","severity":1,"message":"686","line":23,"column":26,"nodeType":"648","messageId":"649","endLine":23,"endColumn":41},{"ruleId":"646","severity":1,"message":"687","line":24,"column":28,"nodeType":"648","messageId":"649","endLine":24,"endColumn":45},{"ruleId":"646","severity":1,"message":"701","line":3,"column":10,"nodeType":"648","messageId":"649","endLine":3,"endColumn":15},{"ruleId":"646","severity":1,"message":"702","line":3,"column":17,"nodeType":"648","messageId":"649","endLine":3,"endColumn":25},{"ruleId":"646","severity":1,"message":"703","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":26},{"ruleId":"646","severity":1,"message":"672","line":13,"column":13,"nodeType":"648","messageId":"649","endLine":13,"endColumn":21},{"ruleId":"646","severity":1,"message":"674","line":13,"column":37,"nodeType":"648","messageId":"649","endLine":13,"endColumn":45},{"ruleId":"646","severity":1,"message":"675","line":13,"column":47,"nodeType":"648","messageId":"649","endLine":13,"endColumn":53},{"ruleId":"679","severity":1,"message":"704","line":108,"column":8,"nodeType":"681","endLine":108,"endColumn":10,"suggestions":"705"},{"ruleId":"679","severity":1,"message":"680","line":59,"column":8,"nodeType":"681","endLine":59,"endColumn":10,"suggestions":"706"},{"ruleId":"646","severity":1,"message":"675","line":13,"column":47,"nodeType":"648","messageId":"649","endLine":13,"endColumn":53},{"ruleId":"646","severity":1,"message":"707","line":16,"column":12,"nodeType":"648","messageId":"649","endLine":16,"endColumn":24},{"ruleId":"646","severity":1,"message":"708","line":17,"column":12,"nodeType":"648","messageId":"649","endLine":17,"endColumn":24},{"ruleId":"679","severity":1,"message":"709","line":61,"column":8,"nodeType":"681","endLine":61,"endColumn":10,"suggestions":"710"},{"ruleId":"646","severity":1,"message":"676","line":2,"column":38,"nodeType":"648","messageId":"649","endLine":2,"endColumn":44},{"ruleId":"646","severity":1,"message":"653","line":7,"column":6,"nodeType":"648","messageId":"649","endLine":7,"endColumn":12},{"ruleId":"646","severity":1,"message":"711","line":7,"column":14,"nodeType":"648","messageId":"649","endLine":7,"endColumn":21},{"ruleId":"679","severity":1,"message":"712","line":43,"column":7,"nodeType":"681","endLine":43,"endColumn":9,"suggestions":"713"},{"ruleId":"650","severity":1,"message":"651","line":52,"column":21,"nodeType":"652","endLine":52,"endColumn":142},{"ruleId":"714","severity":1,"message":"715","line":4,"column":1,"nodeType":"716","endLine":17,"endColumn":3},{"ruleId":"646","severity":1,"message":"667","line":4,"column":3,"nodeType":"648","messageId":"649","endLine":4,"endColumn":7},{"ruleId":"646","severity":1,"message":"694","line":5,"column":3,"nodeType":"648","messageId":"649","endLine":5,"endColumn":13},{"ruleId":"646","severity":1,"message":"684","line":19,"column":45,"nodeType":"648","messageId":"649","endLine":19,"endColumn":50},{"ruleId":"688","severity":1,"message":"689","line":45,"column":67,"nodeType":"690","messageId":"691","endLine":45,"endColumn":69},{"ruleId":"646","severity":1,"message":"717","line":1,"column":17,"nodeType":"648","messageId":"649","endLine":1,"endColumn":26},{"ruleId":"646","severity":1,"message":"718","line":8,"column":8,"nodeType":"648","messageId":"649","endLine":8,"endColumn":18},{"ruleId":"646","severity":1,"message":"719","line":9,"column":8,"nodeType":"648","messageId":"649","endLine":9,"endColumn":14},{"ruleId":"646","severity":1,"message":"720","line":32,"column":18,"nodeType":"648","messageId":"649","endLine":32,"endColumn":27},{"ruleId":"646","severity":1,"message":"721","line":33,"column":17,"nodeType":"648","messageId":"649","endLine":33,"endColumn":25},{"ruleId":"646","severity":1,"message":"722","line":35,"column":25,"nodeType":"648","messageId":"649","endLine":35,"endColumn":41},{"ruleId":"646","severity":1,"message":"723","line":38,"column":24,"nodeType":"648","messageId":"649","endLine":38,"endColumn":39},{"ruleId":"724","severity":1,"message":"725","line":291,"column":410,"nodeType":"726","messageId":"727","endLine":291,"endColumn":411,"suggestions":"728"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":491,"nodeType":"726","messageId":"727","endLine":291,"endColumn":492,"suggestions":"729"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":556,"nodeType":"726","messageId":"727","endLine":291,"endColumn":557,"suggestions":"730"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":583,"nodeType":"726","messageId":"727","endLine":291,"endColumn":584,"suggestions":"731"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":604,"nodeType":"726","messageId":"727","endLine":291,"endColumn":605,"suggestions":"732"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":642,"nodeType":"726","messageId":"727","endLine":291,"endColumn":643,"suggestions":"733"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":676,"nodeType":"726","messageId":"727","endLine":291,"endColumn":677,"suggestions":"734"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":745,"nodeType":"726","messageId":"727","endLine":291,"endColumn":746,"suggestions":"735"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":768,"nodeType":"726","messageId":"727","endLine":291,"endColumn":769,"suggestions":"736"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":773,"nodeType":"726","messageId":"727","endLine":291,"endColumn":774,"suggestions":"737"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":811,"nodeType":"726","messageId":"727","endLine":291,"endColumn":812,"suggestions":"738"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":824,"nodeType":"726","messageId":"727","endLine":291,"endColumn":825,"suggestions":"739"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":849,"nodeType":"726","messageId":"727","endLine":291,"endColumn":850,"suggestions":"740"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":858,"nodeType":"726","messageId":"727","endLine":291,"endColumn":859,"suggestions":"741"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":891,"nodeType":"726","messageId":"727","endLine":291,"endColumn":892,"suggestions":"742"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":915,"nodeType":"726","messageId":"727","endLine":291,"endColumn":916,"suggestions":"743"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1019,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1020,"suggestions":"744"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1063,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1064,"suggestions":"745"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1084,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1085,"suggestions":"746"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1126,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1127,"suggestions":"747"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1179,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1180,"suggestions":"748"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1276,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1277,"suggestions":"749"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1361,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1362,"suggestions":"750"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1396,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1397,"suggestions":"751"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1425,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1426,"suggestions":"752"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1431,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1432,"suggestions":"753"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1453,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1454,"suggestions":"754"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1462,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1463,"suggestions":"755"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1536,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1537,"suggestions":"756"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1543,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1544,"suggestions":"757"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1558,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1559,"suggestions":"758"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1582,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1583,"suggestions":"759"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1594,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1595,"suggestions":"760"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1602,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1603,"suggestions":"761"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1652,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1653,"suggestions":"762"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1656,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1657,"suggestions":"763"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1709,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1710,"suggestions":"764"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1715,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1716,"suggestions":"765"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1730,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1731,"suggestions":"766"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1734,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1735,"suggestions":"767"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1756,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1757,"suggestions":"768"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1768,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1769,"suggestions":"769"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1829,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1830,"suggestions":"770"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1887,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1888,"suggestions":"771"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1934,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1935,"suggestions":"772"},{"ruleId":"724","severity":1,"message":"725","line":291,"column":1950,"nodeType":"726","messageId":"727","endLine":291,"endColumn":1951,"suggestions":"773"},{"ruleId":"646","severity":1,"message":"667","line":4,"column":3,"nodeType":"648","messageId":"649","endLine":4,"endColumn":7},{"ruleId":"646","severity":1,"message":"694","line":5,"column":3,"nodeType":"648","messageId":"649","endLine":5,"endColumn":13},{"ruleId":"646","severity":1,"message":"684","line":20,"column":45,"nodeType":"648","messageId":"649","endLine":20,"endColumn":50},{"ruleId":"646","severity":1,"message":"774","line":23,"column":12,"nodeType":"648","messageId":"649","endLine":23,"endColumn":21},{"ruleId":"646","severity":1,"message":"775","line":23,"column":23,"nodeType":"648","messageId":"649","endLine":23,"endColumn":35},{"ruleId":"646","severity":1,"message":"776","line":24,"column":12,"nodeType":"648","messageId":"649","endLine":24,"endColumn":24},{"ruleId":"646","severity":1,"message":"685","line":24,"column":26,"nodeType":"648","messageId":"649","endLine":24,"endColumn":41},{"ruleId":"646","severity":1,"message":"777","line":25,"column":12,"nodeType":"648","messageId":"649","endLine":25,"endColumn":24},{"ruleId":"646","severity":1,"message":"686","line":25,"column":26,"nodeType":"648","messageId":"649","endLine":25,"endColumn":41},{"ruleId":"646","severity":1,"message":"778","line":26,"column":12,"nodeType":"648","messageId":"649","endLine":26,"endColumn":26},{"ruleId":"646","severity":1,"message":"687","line":26,"column":28,"nodeType":"648","messageId":"649","endLine":26,"endColumn":45},{"ruleId":"646","severity":1,"message":"660","line":5,"column":30,"nodeType":"648","messageId":"649","endLine":5,"endColumn":34},{"ruleId":"646","severity":1,"message":"653","line":5,"column":36,"nodeType":"648","messageId":"649","endLine":5,"endColumn":42},{"ruleId":"646","severity":1,"message":"672","line":16,"column":13,"nodeType":"648","messageId":"649","endLine":16,"endColumn":21},{"ruleId":"646","severity":1,"message":"673","line":16,"column":23,"nodeType":"648","messageId":"649","endLine":16,"endColumn":35},{"ruleId":"646","severity":1,"message":"674","line":16,"column":37,"nodeType":"648","messageId":"649","endLine":16,"endColumn":45},{"ruleId":"646","severity":1,"message":"675","line":16,"column":47,"nodeType":"648","messageId":"649","endLine":16,"endColumn":53},{"ruleId":"646","severity":1,"message":"779","line":18,"column":9,"nodeType":"648","messageId":"649","endLine":18,"endColumn":15},{"ruleId":"646","severity":1,"message":"667","line":3,"column":5,"nodeType":"648","messageId":"649","endLine":3,"endColumn":9},{"ruleId":"646","severity":1,"message":"780","line":5,"column":44,"nodeType":"648","messageId":"649","endLine":5,"endColumn":49},{"ruleId":"646","severity":1,"message":"781","line":9,"column":10,"nodeType":"648","messageId":"649","endLine":9,"endColumn":29},{"ruleId":"646","severity":1,"message":"782","line":15,"column":23,"nodeType":"648","messageId":"649","endLine":15,"endColumn":35},{"ruleId":"646","severity":1,"message":"672","line":16,"column":13,"nodeType":"648","messageId":"649","endLine":16,"endColumn":21},{"ruleId":"646","severity":1,"message":"674","line":16,"column":37,"nodeType":"648","messageId":"649","endLine":16,"endColumn":45},{"ruleId":"646","severity":1,"message":"675","line":16,"column":47,"nodeType":"648","messageId":"649","endLine":16,"endColumn":53},{"ruleId":"646","severity":1,"message":"783","line":17,"column":22,"nodeType":"648","messageId":"649","endLine":17,"endColumn":33},{"ruleId":"679","severity":1,"message":"784","line":60,"column":8,"nodeType":"681","endLine":60,"endColumn":10,"suggestions":"785"},{"ruleId":"646","severity":1,"message":"786","line":63,"column":14,"nodeType":"648","messageId":"649","endLine":63,"endColumn":18},{"ruleId":"688","severity":1,"message":"787","line":97,"column":33,"nodeType":"690","messageId":"691","endLine":97,"endColumn":35},{"ruleId":"650","severity":1,"message":"651","line":103,"column":29,"nodeType":"652","endLine":103,"endColumn":61},{"ruleId":"650","severity":1,"message":"651","line":109,"column":33,"nodeType":"652","endLine":109,"endColumn":65},{"ruleId":"650","severity":1,"message":"651","line":155,"column":25,"nodeType":"652","endLine":155,"endColumn":69},{"ruleId":"646","severity":1,"message":"788","line":7,"column":12,"nodeType":"648","messageId":"649","endLine":7,"endColumn":18},{"ruleId":"646","severity":1,"message":"789","line":8,"column":12,"nodeType":"648","messageId":"649","endLine":8,"endColumn":17},{"ruleId":"646","severity":1,"message":"660","line":5,"column":30,"nodeType":"648","messageId":"649","endLine":5,"endColumn":34},{"ruleId":"646","severity":1,"message":"653","line":5,"column":36,"nodeType":"648","messageId":"649","endLine":5,"endColumn":42},{"ruleId":"646","severity":1,"message":"672","line":16,"column":13,"nodeType":"648","messageId":"649","endLine":16,"endColumn":21},{"ruleId":"646","severity":1,"message":"673","line":16,"column":23,"nodeType":"648","messageId":"649","endLine":16,"endColumn":35},{"ruleId":"646","severity":1,"message":"674","line":16,"column":37,"nodeType":"648","messageId":"649","endLine":16,"endColumn":45},{"ruleId":"646","severity":1,"message":"675","line":16,"column":47,"nodeType":"648","messageId":"649","endLine":16,"endColumn":53},{"ruleId":"679","severity":1,"message":"704","line":33,"column":8,"nodeType":"681","endLine":33,"endColumn":10,"suggestions":"790"},{"ruleId":"646","severity":1,"message":"667","line":3,"column":5,"nodeType":"648","messageId":"649","endLine":3,"endColumn":9},{"ruleId":"646","severity":1,"message":"660","line":5,"column":30,"nodeType":"648","messageId":"649","endLine":5,"endColumn":34},{"ruleId":"646","severity":1,"message":"653","line":5,"column":36,"nodeType":"648","messageId":"649","endLine":5,"endColumn":42},{"ruleId":"646","severity":1,"message":"780","line":5,"column":44,"nodeType":"648","messageId":"649","endLine":5,"endColumn":49},{"ruleId":"646","severity":1,"message":"791","line":10,"column":9,"nodeType":"648","messageId":"649","endLine":10,"endColumn":18},{"ruleId":"646","severity":1,"message":"672","line":16,"column":13,"nodeType":"648","messageId":"649","endLine":16,"endColumn":21},{"ruleId":"646","severity":1,"message":"673","line":16,"column":23,"nodeType":"648","messageId":"649","endLine":16,"endColumn":35},{"ruleId":"646","severity":1,"message":"674","line":16,"column":37,"nodeType":"648","messageId":"649","endLine":16,"endColumn":45},{"ruleId":"646","severity":1,"message":"675","line":16,"column":47,"nodeType":"648","messageId":"649","endLine":16,"endColumn":53},{"ruleId":"646","severity":1,"message":"792","line":17,"column":12,"nodeType":"648","messageId":"649","endLine":17,"endColumn":19},{"ruleId":"679","severity":1,"message":"704","line":33,"column":8,"nodeType":"681","endLine":33,"endColumn":10,"suggestions":"793"},{"ruleId":"646","severity":1,"message":"667","line":4,"column":3,"nodeType":"648","messageId":"649","endLine":4,"endColumn":7},{"ruleId":"646","severity":1,"message":"694","line":5,"column":3,"nodeType":"648","messageId":"649","endLine":5,"endColumn":13},{"ruleId":"646","severity":1,"message":"774","line":23,"column":12,"nodeType":"648","messageId":"649","endLine":23,"endColumn":21},{"ruleId":"646","severity":1,"message":"775","line":23,"column":23,"nodeType":"648","messageId":"649","endLine":23,"endColumn":35},{"ruleId":"646","severity":1,"message":"776","line":24,"column":12,"nodeType":"648","messageId":"649","endLine":24,"endColumn":24},{"ruleId":"646","severity":1,"message":"685","line":24,"column":26,"nodeType":"648","messageId":"649","endLine":24,"endColumn":41},{"ruleId":"646","severity":1,"message":"777","line":25,"column":12,"nodeType":"648","messageId":"649","endLine":25,"endColumn":24},{"ruleId":"646","severity":1,"message":"686","line":25,"column":26,"nodeType":"648","messageId":"649","endLine":25,"endColumn":41},{"ruleId":"646","severity":1,"message":"778","line":26,"column":12,"nodeType":"648","messageId":"649","endLine":26,"endColumn":26},{"ruleId":"646","severity":1,"message":"687","line":26,"column":28,"nodeType":"648","messageId":"649","endLine":26,"endColumn":45},{"ruleId":"679","severity":1,"message":"794","line":75,"column":8,"nodeType":"681","endLine":75,"endColumn":10,"suggestions":"795"},"no-native-reassign",["796"],"no-negated-in-lhs",["797"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ForgotPasswordView' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'setState' is defined but never used.","'Router' is defined but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","'Link' is defined but never used.",["796"],["797"],"'DSChatBox' is defined but never used.","'Dashboard2' is defined but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'setValue' is assigned a value but never used.","'errors' is assigned a value but never used.","'useRef' is defined but never used.","'customer' is assigned a value but never used.","'setcustomer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setValue' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["798"],["799"],"'watch' is assigned a value but never used.","'setModalHeading' is assigned a value but never used.","'setModalMessage' is assigned a value but never used.","'setisSuccessModal' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'subject' is assigned a value but never used.","'setSubject' is assigned a value but never used.","'useHistory' is defined but never used.","no-undef","'put' is not defined.","undef","'useState' is defined but never used.","'React' is defined but never used.","'isLoading' is assigned a value but never used.","'Admin' is defined but never used.","'Resource' is defined but never used.","'simpleRestProvider' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["800"],["801"],"'teachingCity' is assigned a value but never used.","'teachingArea' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["802"],"'Spinner' is defined but never used.","React Hook useEffect has missing dependencies: 'props.match.params.id' and 'tutor.teachingSubjects'. Either include them or remove the dependency array.",["803"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'Navigation' is defined but never used.","'Footer' is defined but never used.","'setYourID' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'setReceivingCall' is assigned a value but never used.","'setCallerSignal' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["804","805"],["806","807"],["808","809"],["810","811"],["812","813"],["814","815"],["816","817"],["818","819"],["820","821"],["822","823"],["824","825"],["826","827"],["828","829"],["830","831"],["832","833"],["834","835"],["836","837"],["838","839"],["840","841"],["842","843"],["844","845"],["846","847"],["848","849"],["850","851"],["852","853"],["854","855"],["856","857"],["858","859"],["860","861"],["862","863"],["864","865"],["866","867"],["868","869"],["870","871"],["872","873"],["874","875"],["876","877"],["878","879"],["880","881"],["882","883"],["884","885"],["886","887"],["888","889"],["890","891"],["892","893"],["894","895"],"'modalShow' is assigned a value but never used.","'setModalShow' is assigned a value but never used.","'modalHeading' is assigned a value but never used.","'modalMessage' is assigned a value but never used.","'isSuccessModal' is assigned a value but never used.","'userId' is assigned a value but never used.","'Table' is defined but never used.","'NotificationManager' is defined but never used.","'setIsLoading' is assigned a value but never used.","'setchatWith' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chatWith', 'messagesList', and 'userId'. Either include them or remove the dependency array.",["896"],"'name' is assigned a value but never used.","Expected '===' and instead saw '=='.","'yourID' is assigned a value but never used.","'users' is assigned a value but never used.",["897"],"'WebrtcApp' is defined but never used.","'classes' is assigned a value but never used.",["898"],"React Hook useEffect has missing dependencies: 'props.match.params.requestId' and 'setValue'. Either include them or remove the dependency array.",["899"],"no-global-assign","no-unsafe-negation",{"desc":"900","fix":"901"},{"desc":"900","fix":"902"},{"desc":"903","fix":"904"},{"desc":"900","fix":"905"},{"desc":"906","fix":"907"},{"desc":"908","fix":"909"},{"messageId":"910","fix":"911","desc":"912"},{"messageId":"913","fix":"914","desc":"915"},{"messageId":"910","fix":"916","desc":"912"},{"messageId":"913","fix":"917","desc":"915"},{"messageId":"910","fix":"918","desc":"912"},{"messageId":"913","fix":"919","desc":"915"},{"messageId":"910","fix":"920","desc":"912"},{"messageId":"913","fix":"921","desc":"915"},{"messageId":"910","fix":"922","desc":"912"},{"messageId":"913","fix":"923","desc":"915"},{"messageId":"910","fix":"924","desc":"912"},{"messageId":"913","fix":"925","desc":"915"},{"messageId":"910","fix":"926","desc":"912"},{"messageId":"913","fix":"927","desc":"915"},{"messageId":"910","fix":"928","desc":"912"},{"messageId":"913","fix":"929","desc":"915"},{"messageId":"910","fix":"930","desc":"912"},{"messageId":"913","fix":"931","desc":"915"},{"messageId":"910","fix":"932","desc":"912"},{"messageId":"913","fix":"933","desc":"915"},{"messageId":"910","fix":"934","desc":"912"},{"messageId":"913","fix":"935","desc":"915"},{"messageId":"910","fix":"936","desc":"912"},{"messageId":"913","fix":"937","desc":"915"},{"messageId":"910","fix":"938","desc":"912"},{"messageId":"913","fix":"939","desc":"915"},{"messageId":"910","fix":"940","desc":"912"},{"messageId":"913","fix":"941","desc":"915"},{"messageId":"910","fix":"942","desc":"912"},{"messageId":"913","fix":"943","desc":"915"},{"messageId":"910","fix":"944","desc":"912"},{"messageId":"913","fix":"945","desc":"915"},{"messageId":"910","fix":"946","desc":"912"},{"messageId":"913","fix":"947","desc":"915"},{"messageId":"910","fix":"948","desc":"912"},{"messageId":"913","fix":"949","desc":"915"},{"messageId":"910","fix":"950","desc":"912"},{"messageId":"913","fix":"951","desc":"915"},{"messageId":"910","fix":"952","desc":"912"},{"messageId":"913","fix":"953","desc":"915"},{"messageId":"910","fix":"954","desc":"912"},{"messageId":"913","fix":"955","desc":"915"},{"messageId":"910","fix":"956","desc":"912"},{"messageId":"913","fix":"957","desc":"915"},{"messageId":"910","fix":"958","desc":"912"},{"messageId":"913","fix":"959","desc":"915"},{"messageId":"910","fix":"960","desc":"912"},{"messageId":"913","fix":"961","desc":"915"},{"messageId":"910","fix":"962","desc":"912"},{"messageId":"913","fix":"963","desc":"915"},{"messageId":"910","fix":"964","desc":"912"},{"messageId":"913","fix":"965","desc":"915"},{"messageId":"910","fix":"966","desc":"912"},{"messageId":"913","fix":"967","desc":"915"},{"messageId":"910","fix":"968","desc":"912"},{"messageId":"913","fix":"969","desc":"915"},{"messageId":"910","fix":"970","desc":"912"},{"messageId":"913","fix":"971","desc":"915"},{"messageId":"910","fix":"972","desc":"912"},{"messageId":"913","fix":"973","desc":"915"},{"messageId":"910","fix":"974","desc":"912"},{"messageId":"913","fix":"975","desc":"915"},{"messageId":"910","fix":"976","desc":"912"},{"messageId":"913","fix":"977","desc":"915"},{"messageId":"910","fix":"978","desc":"912"},{"messageId":"913","fix":"979","desc":"915"},{"messageId":"910","fix":"980","desc":"912"},{"messageId":"913","fix":"981","desc":"915"},{"messageId":"910","fix":"982","desc":"912"},{"messageId":"913","fix":"983","desc":"915"},{"messageId":"910","fix":"984","desc":"912"},{"messageId":"913","fix":"985","desc":"915"},{"messageId":"910","fix":"986","desc":"912"},{"messageId":"913","fix":"987","desc":"915"},{"messageId":"910","fix":"988","desc":"912"},{"messageId":"913","fix":"989","desc":"915"},{"messageId":"910","fix":"990","desc":"912"},{"messageId":"913","fix":"991","desc":"915"},{"messageId":"910","fix":"992","desc":"912"},{"messageId":"913","fix":"993","desc":"915"},{"messageId":"910","fix":"994","desc":"912"},{"messageId":"913","fix":"995","desc":"915"},{"messageId":"910","fix":"996","desc":"912"},{"messageId":"913","fix":"997","desc":"915"},{"messageId":"910","fix":"998","desc":"912"},{"messageId":"913","fix":"999","desc":"915"},{"messageId":"910","fix":"1000","desc":"912"},{"messageId":"913","fix":"1001","desc":"915"},{"messageId":"910","fix":"1002","desc":"912"},{"messageId":"913","fix":"1003","desc":"915"},{"messageId":"910","fix":"1004","desc":"912"},{"messageId":"913","fix":"1005","desc":"915"},{"desc":"1006","fix":"1007"},{"desc":"903","fix":"1008"},{"desc":"903","fix":"1009"},{"desc":"1010","fix":"1011"},"Update the dependencies array to be: [setValue, userId]",{"range":"1012","text":"1013"},{"range":"1014","text":"1013"},"Update the dependencies array to be: [userId]",{"range":"1015","text":"1016"},{"range":"1017","text":"1013"},"Update the dependencies array to be: [setValue]",{"range":"1018","text":"1019"},"Update the dependencies array to be: [props.match.params.id, tutor.teachingSubjects]",{"range":"1020","text":"1021"},"removeEscape",{"range":"1022","text":"1023"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1024","text":"1025"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1026","text":"1023"},{"range":"1027","text":"1025"},{"range":"1028","text":"1023"},{"range":"1029","text":"1025"},{"range":"1030","text":"1023"},{"range":"1031","text":"1025"},{"range":"1032","text":"1023"},{"range":"1033","text":"1025"},{"range":"1034","text":"1023"},{"range":"1035","text":"1025"},{"range":"1036","text":"1023"},{"range":"1037","text":"1025"},{"range":"1038","text":"1023"},{"range":"1039","text":"1025"},{"range":"1040","text":"1023"},{"range":"1041","text":"1025"},{"range":"1042","text":"1023"},{"range":"1043","text":"1025"},{"range":"1044","text":"1023"},{"range":"1045","text":"1025"},{"range":"1046","text":"1023"},{"range":"1047","text":"1025"},{"range":"1048","text":"1023"},{"range":"1049","text":"1025"},{"range":"1050","text":"1023"},{"range":"1051","text":"1025"},{"range":"1052","text":"1023"},{"range":"1053","text":"1025"},{"range":"1054","text":"1023"},{"range":"1055","text":"1025"},{"range":"1056","text":"1023"},{"range":"1057","text":"1025"},{"range":"1058","text":"1023"},{"range":"1059","text":"1025"},{"range":"1060","text":"1023"},{"range":"1061","text":"1025"},{"range":"1062","text":"1023"},{"range":"1063","text":"1025"},{"range":"1064","text":"1023"},{"range":"1065","text":"1025"},{"range":"1066","text":"1023"},{"range":"1067","text":"1025"},{"range":"1068","text":"1023"},{"range":"1069","text":"1025"},{"range":"1070","text":"1023"},{"range":"1071","text":"1025"},{"range":"1072","text":"1023"},{"range":"1073","text":"1025"},{"range":"1074","text":"1023"},{"range":"1075","text":"1025"},{"range":"1076","text":"1023"},{"range":"1077","text":"1025"},{"range":"1078","text":"1023"},{"range":"1079","text":"1025"},{"range":"1080","text":"1023"},{"range":"1081","text":"1025"},{"range":"1082","text":"1023"},{"range":"1083","text":"1025"},{"range":"1084","text":"1023"},{"range":"1085","text":"1025"},{"range":"1086","text":"1023"},{"range":"1087","text":"1025"},{"range":"1088","text":"1023"},{"range":"1089","text":"1025"},{"range":"1090","text":"1023"},{"range":"1091","text":"1025"},{"range":"1092","text":"1023"},{"range":"1093","text":"1025"},{"range":"1094","text":"1023"},{"range":"1095","text":"1025"},{"range":"1096","text":"1023"},{"range":"1097","text":"1025"},{"range":"1098","text":"1023"},{"range":"1099","text":"1025"},{"range":"1100","text":"1023"},{"range":"1101","text":"1025"},{"range":"1102","text":"1023"},{"range":"1103","text":"1025"},{"range":"1104","text":"1023"},{"range":"1105","text":"1025"},{"range":"1106","text":"1023"},{"range":"1107","text":"1025"},{"range":"1108","text":"1023"},{"range":"1109","text":"1025"},{"range":"1110","text":"1023"},{"range":"1111","text":"1025"},{"range":"1112","text":"1023"},{"range":"1113","text":"1025"},{"range":"1114","text":"1023"},{"range":"1115","text":"1025"},"Update the dependencies array to be: [chatWith, messagesList, userId]",{"range":"1116","text":"1117"},{"range":"1118","text":"1016"},{"range":"1119","text":"1016"},"Update the dependencies array to be: [props.match.params.requestId, setValue]",{"range":"1120","text":"1121"},[2114,2116],"[setValue, userId]",[1791,1793],[3322,3324],"[userId]",[2064,2066],[2211,2213],"[setValue]",[1098,1100],"[props.match.params.id, tutor.teachingSubjects]",[9561,9562],"",[9561,9561],"\\",[9642,9643],[9642,9642],[9707,9708],[9707,9707],[9734,9735],[9734,9734],[9755,9756],[9755,9755],[9793,9794],[9793,9793],[9827,9828],[9827,9827],[9896,9897],[9896,9896],[9919,9920],[9919,9919],[9924,9925],[9924,9924],[9962,9963],[9962,9962],[9975,9976],[9975,9975],[10000,10001],[10000,10000],[10009,10010],[10009,10009],[10042,10043],[10042,10042],[10066,10067],[10066,10066],[10170,10171],[10170,10170],[10214,10215],[10214,10214],[10235,10236],[10235,10235],[10277,10278],[10277,10277],[10330,10331],[10330,10330],[10427,10428],[10427,10427],[10512,10513],[10512,10512],[10547,10548],[10547,10547],[10576,10577],[10576,10576],[10582,10583],[10582,10582],[10604,10605],[10604,10604],[10613,10614],[10613,10613],[10687,10688],[10687,10687],[10694,10695],[10694,10694],[10709,10710],[10709,10709],[10733,10734],[10733,10733],[10745,10746],[10745,10745],[10753,10754],[10753,10753],[10803,10804],[10803,10803],[10807,10808],[10807,10807],[10860,10861],[10860,10860],[10866,10867],[10866,10866],[10881,10882],[10881,10881],[10885,10886],[10885,10885],[10907,10908],[10907,10907],[10919,10920],[10919,10919],[10980,10981],[10980,10980],[11038,11039],[11038,11038],[11085,11086],[11085,11085],[11101,11102],[11101,11101],[2106,2108],"[chatWith, messagesList, userId]",[1066,1068],[1113,1115],[2321,2323],"[props.match.params.requestId, setValue]"]