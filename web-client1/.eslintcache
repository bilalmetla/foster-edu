[{"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\index.js":"1","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\App.js":"2","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\reportWebVitals.js":"3","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\index.js":"4","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Header.js":"5","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Banner.js":"6","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Services.js":"7","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Testimonials.js":"8","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\StartTutoringBanner.js":"9","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\HaveQuestion.js":"10","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Footer.js":"11","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\Router.js":"12","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\index.js":"13","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\Home.js":"14","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\Tutors.js":"15","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\TutorsFilter.js":"16","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\SearchTutors.js":"17","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\TutorListInfo.js":"18","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\TutorsFilterControls.js":"19","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\Register.js":"20","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\Dashboard.js":"21","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSHeader.js":"22","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSMenu.js":"23","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSContent.js":"24","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSAbout.js":"25","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSContact.js":"26","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\HttpClient.js":"27","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\views\\register-view.js":"28","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\views\\login-view.js":"29","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\views\\forgot-password.js":"30","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\index.js":"31","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\Router.js":"32","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\reportWebVitals.js":"33","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\index.js":"34","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\index.js":"35","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Banner.js":"36","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Header.js":"37","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Services.js":"38","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\StartTutoringBanner.js":"39","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\HaveQuestion.js":"40","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Footer.js":"41","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSHeader.js":"42","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\TutorsFilter.js":"43","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSMenu.js":"44","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Home.js":"45","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Tutors.js":"46","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSContent.js":"47","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSAbout.js":"48","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSContact.js":"49","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Register.js":"50","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Dashboard.js":"51","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Testimonials.js":"52","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\views\\forgot-password.js":"53","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\SearchTutors.js":"54","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\TutorsFilterControls.js":"55","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\views\\register-view.js":"56","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\views\\login-view.js":"57","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\TutorListInfo.js":"58","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\user.js":"59","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\HttpClient.js":"60","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\MessageBox.js":"61","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\index.js":"62","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\PageHistory.js":"63","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\VerifyEmail.js":"64","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\ResetPassword.js":"65","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\User.js":"66","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Dashboard\\Dashboard.js":"67","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\PostList.js":"68","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSExpertise.js":"69","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSEducation.js":"70","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSMediums.js":"71","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\ViewProfile.js":"72","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\common\\Spinner.js":"73","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\views\\ContactUs.js":"74","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\webrtc\\App.js":"75","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\webrtc\\Components\\Footer\\Footer.js":"76","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\webrtc\\Components\\Watermark\\Watermark.js":"77","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\webrtc\\Components\\Navigation\\Navigation.js":"78","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\StudentRequest.js":"79","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSNewRequests.js":"80","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSChatBox.js":"81","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\common\\Socket.js":"82","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSClasses.js":"83","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSClassesDetails.js":"84","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\AcceptStudentRequest.js":"85","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\constants\\index.js":"86","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\RatingStars.js":"87","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSFeedBack.js":"88","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\CallingDemo.js":"89","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\StyledComponents.js":"90"},{"size":530,"mtime":1611426446477,"results":"91","hashOfConfig":"92"},{"size":535,"mtime":1611422535659,"results":"93","hashOfConfig":"92"},{"size":362,"mtime":499162500000,"results":"94","hashOfConfig":"92"},{"size":728,"mtime":1611482718529,"results":"95","hashOfConfig":"92"},{"size":858,"mtime":1611506692959,"results":"96","hashOfConfig":"92"},{"size":911,"mtime":1611415250148,"results":"97","hashOfConfig":"92"},{"size":1424,"mtime":1611417927673,"results":"98","hashOfConfig":"92"},{"size":1859,"mtime":1611419657614,"results":"99","hashOfConfig":"92"},{"size":841,"mtime":1611434357841,"results":"100","hashOfConfig":"92"},{"size":1132,"mtime":1611434295059,"results":"101","hashOfConfig":"92"},{"size":2656,"mtime":1611424509725,"results":"102","hashOfConfig":"92"},{"size":2038,"mtime":1611543364983,"results":"103","hashOfConfig":"92"},{"size":292,"mtime":1611508866884,"results":"104","hashOfConfig":"92"},{"size":412,"mtime":1611426658454,"results":"105","hashOfConfig":"92"},{"size":405,"mtime":1611429208168,"results":"106","hashOfConfig":"92"},{"size":725,"mtime":1611432806101,"results":"107","hashOfConfig":"92"},{"size":1200,"mtime":1611435763742,"results":"108","hashOfConfig":"92"},{"size":2545,"mtime":1611431544626,"results":"109","hashOfConfig":"92"},{"size":4124,"mtime":1611462011091,"results":"110","hashOfConfig":"92"},{"size":2785,"mtime":1611508358247,"results":"111","hashOfConfig":"92"},{"size":805,"mtime":1611478385587,"results":"112","hashOfConfig":"92"},{"size":863,"mtime":1611472275083,"results":"113","hashOfConfig":"92"},{"size":3829,"mtime":1611478737920,"results":"114","hashOfConfig":"92"},{"size":643,"mtime":1611482695389,"results":"115","hashOfConfig":"92"},{"size":3459,"mtime":1611482515735,"results":"116","hashOfConfig":"92"},{"size":1368,"mtime":1611482758883,"results":"117","hashOfConfig":"92"},{"size":381,"mtime":1611498831646,"results":"118","hashOfConfig":"92"},{"size":5036,"mtime":1611507467077,"results":"119","hashOfConfig":"92"},{"size":3461,"mtime":1611508184640,"results":"120","hashOfConfig":"92"},{"size":2835,"mtime":1611508610987,"results":"121","hashOfConfig":"92"},{"size":530,"mtime":1611426446477,"results":"122","hashOfConfig":"123"},{"size":3526,"mtime":1614079410168,"results":"124","hashOfConfig":"123"},{"size":362,"mtime":499162500000,"results":"125","hashOfConfig":"123"},{"size":1417,"mtime":1614083331998,"results":"126","hashOfConfig":"123"},{"size":611,"mtime":1612988794769,"results":"127","hashOfConfig":"123"},{"size":1129,"mtime":1614090917785,"results":"128","hashOfConfig":"123"},{"size":1555,"mtime":1614080572214,"results":"129","hashOfConfig":"123"},{"size":2188,"mtime":1614091755036,"results":"130","hashOfConfig":"123"},{"size":890,"mtime":1612033404473,"results":"131","hashOfConfig":"123"},{"size":1185,"mtime":1612083990888,"results":"132","hashOfConfig":"123"},{"size":3842,"mtime":1614093332675,"results":"133","hashOfConfig":"123"},{"size":888,"mtime":1614074432441,"results":"134","hashOfConfig":"123"},{"size":3147,"mtime":1612025721382,"results":"135","hashOfConfig":"123"},{"size":7737,"mtime":1614076200048,"results":"136","hashOfConfig":"123"},{"size":449,"mtime":1614083357858,"results":"137","hashOfConfig":"123"},{"size":405,"mtime":1611429208168,"results":"138","hashOfConfig":"123"},{"size":2579,"mtime":1614021727806,"results":"139","hashOfConfig":"123"},{"size":7933,"mtime":1613330250457,"results":"140","hashOfConfig":"123"},{"size":4219,"mtime":1612083333490,"results":"141","hashOfConfig":"123"},{"size":2246,"mtime":1611548415270,"results":"142","hashOfConfig":"123"},{"size":833,"mtime":1613183175649,"results":"143","hashOfConfig":"123"},{"size":1859,"mtime":1611419657614,"results":"144","hashOfConfig":"123"},{"size":4788,"mtime":1612032783922,"results":"145","hashOfConfig":"123"},{"size":2132,"mtime":1614109026744,"results":"146","hashOfConfig":"123"},{"size":5980,"mtime":1613156717919,"results":"147","hashOfConfig":"123"},{"size":11496,"mtime":1614106509418,"results":"148","hashOfConfig":"123"},{"size":6416,"mtime":1614107185214,"results":"149","hashOfConfig":"123"},{"size":3444,"mtime":1614108065904,"results":"150","hashOfConfig":"123"},{"size":657,"mtime":1611773913994,"results":"151","hashOfConfig":"152"},{"size":1404,"mtime":1613848106246,"results":"153","hashOfConfig":"123"},{"size":1058,"mtime":1611582277507,"results":"154","hashOfConfig":"123"},{"size":950,"mtime":1614004146544,"results":"155","hashOfConfig":"123"},{"size":188,"mtime":1611584091954,"results":"156","hashOfConfig":"152"},{"size":4531,"mtime":1614107061966,"results":"157","hashOfConfig":"123"},{"size":7314,"mtime":1614107087508,"results":"158","hashOfConfig":"123"},{"size":3089,"mtime":1614004409555,"results":"159","hashOfConfig":"123"},{"size":419,"mtime":1611907100530,"results":"160","hashOfConfig":"123"},{"size":263,"mtime":1611906872818,"results":"161","hashOfConfig":"123"},{"size":5936,"mtime":1612083389846,"results":"162","hashOfConfig":"123"},{"size":4830,"mtime":1613052177999,"results":"163","hashOfConfig":"123"},{"size":5477,"mtime":1613052330400,"results":"164","hashOfConfig":"123"},{"size":16739,"mtime":1614109052353,"results":"165","hashOfConfig":"123"},{"size":450,"mtime":1612024921099,"results":"166","hashOfConfig":"123"},{"size":8114,"mtime":1613847860291,"results":"167","hashOfConfig":"123"},{"size":18215,"mtime":1614081259923,"results":"168","hashOfConfig":"123"},{"size":761,"mtime":1612086132437,"results":"169","hashOfConfig":"123"},{"size":366,"mtime":1612086132506,"results":"170","hashOfConfig":"123"},{"size":1639,"mtime":1612086132476,"results":"171","hashOfConfig":"123"},{"size":8835,"mtime":1613160388554,"results":"172","hashOfConfig":"123"},{"size":3183,"mtime":1613731158445,"results":"173","hashOfConfig":"123"},{"size":6706,"mtime":1613741144022,"results":"174","hashOfConfig":"123"},{"size":1690,"mtime":1613811452677,"results":"175","hashOfConfig":"123"},{"size":3026,"mtime":1614079303896,"results":"176","hashOfConfig":"123"},{"size":1462,"mtime":1613050925377,"results":"177","hashOfConfig":"123"},{"size":8975,"mtime":1612991066686,"results":"178","hashOfConfig":"123"},{"size":674,"mtime":1614109168406,"results":"179","hashOfConfig":"123"},{"size":3167,"mtime":1614018647034,"results":"180","hashOfConfig":"123"},{"size":4297,"mtime":1614018196757,"results":"181","hashOfConfig":"123"},{"size":2593,"mtime":1614088313721,"results":"182","hashOfConfig":"123"},{"size":203,"mtime":1614090656070,"results":"183","hashOfConfig":"123"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},"1e1oujq",{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"186"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"186"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"186"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"186"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"186"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"186"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"186"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"186"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"186"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"186"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"186"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"186"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"186"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},"d3a7a9",{"filePath":"261","messages":"262","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"260"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"260"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"260"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"260"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"260"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"260"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"260"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"260"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"260"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"260"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"260"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"260"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"260"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"260"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"260"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"260"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"260"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"260"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"260"},{"filePath":"332","messages":"333","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"tyxqb7",{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"260"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"260"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"260"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"260"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"260"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"260"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"260"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"260"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"260"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"260"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":60,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"260"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"260"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"260"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"260"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"260"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"260"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"260"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"260"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"260"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"260"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\index.js",[],["416","417"],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\App.js",["418"],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\reportWebVitals.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\index.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Header.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Banner.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Services.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Testimonials.js",["419","420"],"\r\nimport React from \"react\";\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nexport default class Testimonials extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div id=\"testimonials\" className=\"section\">\r\n              <Container>\r\n                  <Row>\r\n                      <Col md={12}>\r\n                          <h2 className=\"section-heading\">\r\n                          See what students say about us\r\n                          </h2>\r\n                      </Col>\r\n                  </Row>\r\n                  <Row>\r\n                      <Col md={6}>\r\n                          <p><strong>Good Website</strong></p>\r\n                          <p>I had no idea where to start finding a web tutor for a project I was working on. Thank goodness a Google search led me to Wyzant. They did all the work for me and I found someone excellent!</p>\r\n                          <img src=\"images/tutor2-280x300.jpg\" alt=\"customer image\" />\r\n                          <p className=\"author\"><strong>Neha</strong> from <strong>Lahore </strong></p>\r\n                          {/* <div className=\"author-city\">from Karachi</div> */}\r\n                      </Col>\r\n\r\n                      <Col md={6}>\r\n                          <p><strong>Happy to have found you</strong></p>\r\n                          <p>I am a lawyer struggling with scientific concepts later in life. I find that using Wyzant to shore up my deficiencies has worked well.</p>\r\n                          <img src=\"images/tutor4-740x792.jpg\" alt=\"customer image\" />\r\n                          <p className=\"author\"><strong>Ali</strong> from <strong>Lahore </strong></p>\r\n                          {/* <div className=\"author-city\"></div> */}\r\n                      </Col>\r\n\r\n                  </Row>\r\n              </Container>\r\n          </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\StartTutoringBanner.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\HaveQuestion.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\Footer.js",["421","422","423","424","425"],"import React from \"react\";\r\n\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default class Footer extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div id=\"footer\">\r\n              <Container>\r\n                  <Row>\r\n                      <Col md={4}>\r\n                          <div id=\"logo\">\r\n                              <h2>Foster</h2>\r\n                              <p>Et scaevola delicata vix, mea ei invidunt quodsi eripuit definiebas at pri. Placerat voluptaria meleos malis civibus an dolor</p>\r\n                          </div>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                      <h4>Quick Links</h4>\r\n                          <div style={{display: 'flex'}}>\r\n                                <div style={{marginRight:'10px'}}>\r\n                                <p >\r\n                                 <a href=\"\">About Us </a>\r\n                                 </p>\r\n                                 <p>\r\n                                <a href=\"\">Contact Us </a>\r\n                                </p>\r\n                             </div>\r\n\r\n                             <div style={{marginLeft:'10px'}}>\r\n                                <p >\r\n                                 <a href=\"\">Become a Tutor </a>\r\n                                 </p>\r\n                                 <p>\r\n                                <a href=\"\">Hire a Tutor </a>\r\n                                </p>\r\n                             </div>\r\n\r\n\r\n                          </div>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                      <h4>Our Contacts</h4>\r\n                        <div id=\"footer-contact\">\r\n                            <p>\r\n                                <i className=\"fa fa-user\"></i>\r\n                                Evacuee Trust Complex, Islamabad Pakistan\r\n                            </p>\r\n\r\n                            <p>\r\n                                <i className=\"fa fa-envelope\"></i>\r\n                                info@foster.com\r\n                            </p>\r\n                            <p>\r\n                                <i className=\"fa fa-phone\"></i>\r\n                                +92-313-6604801\r\n                            </p>\r\n\r\n                        </div>\r\n                        <div id=\"social-links\" >\r\n                            <i className=\"fa fa-facebook\"></i>\r\n                            <i className=\"fa fa-twitter\"></i>\r\n                        </div>\r\n                      </Col>\r\n                  </Row>\r\n              </Container>\r\n          </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\Router.js",["426"],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\index.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\Home.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\Tutors.js",["427","428","429"],"import React from \"react\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport {  TutorsFilter} from \"./../components\";\r\n\r\n\r\nexport default class Tutors extends React.Component {\r\n \r\n  render(){\r\n    return (\r\n        <div className=\"new-page section\">\r\n            <h2 className=\"section-heading\">Find Your Tutors</h2>\r\n            <TutorsFilter />\r\n           \r\n        </div>\r\n    )\r\n  }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\TutorsFilter.js",["430"],"import React from \"react\";\r\n\r\nimport { Container, Row, Col, Form } from 'react-bootstrap';\r\nimport SearchTutors from \"./SearchTutors\";\r\nimport TutorsFilterControls from \"./TutorsFilterControls\";\r\n\r\nexport default class TutorsFilter extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div>\r\n              <Container>\r\n                    <Row>\r\n                    <Col md={3} >\r\n                       <TutorsFilterControls />\r\n                      </Col>\r\n\r\n                    <Col md={9} >\r\n                        \r\n                       <SearchTutors />\r\n\r\n                    </Col>\r\n\r\n                    </Row>\r\n\r\n                </Container>\r\n              \r\n          </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\SearchTutors.js",["431","432","433","434"],"\r\nimport React from \"react\";\r\n\r\nimport { Container, Row, Col, \r\n    Form, InputGroup, FormControl,\r\n    Button, Badge\r\n  } from 'react-bootstrap';\r\n\r\n  import TutorListInfo from './TutorListInfo.js';\r\n\r\nexport default class SearchTutors extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div>\r\n            <div id=\"tutors-filter-search-box\">\r\n             <Form.Row>\r\n                <Col xs={10}>\r\n                <Form.Label htmlFor=\"inlineFormInput\" >\r\n                    Subject\r\n                </Form.Label>\r\n                <Form.Control placeholder=\"Subject\" />\r\n                </Col>\r\n               \r\n                <Col>\r\n                <Button style={{marginTop:'25px'}} variant=\"btn\" size=\"md\">Search</Button>{' '}\r\n                </Col>\r\n            </Form.Row>\r\n\r\n            <div id=\"tutor-results-info\" style={{marginTop:'25px'}}>\r\n                <h4>Total Found  <Badge variant=\"success\">200</Badge>{' '}</h4>\r\n            </div>\r\n\r\n            </div>\r\n\r\n\r\n            <TutorListInfo />\r\n            <TutorListInfo />\r\n            <TutorListInfo />\r\n            <TutorListInfo />\r\n            <TutorListInfo />\r\n\r\n\r\n              </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\TutorListInfo.js",["435","436","437","438","439","440"],"\r\nimport React from \"react\";\r\n\r\nimport { Container, Row, Col, \r\n    Form, InputGroup, FormControl,\r\n    Button, Badge\r\n  } from 'react-bootstrap';\r\n\r\n\r\nexport default class TutorListInfo extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div id=\"tutors-list-info\">\r\n              <Container>\r\n                  <Row>\r\n                      <Col md={12}  >\r\n                          <div>\r\n                              <a href=\"\" style={{display:'flex',}}>\r\n                          <div id=\"tutors-details-list\" style={{display:'flex'}}>\r\n                              <img src=\"images/tutor2-280x300.jpg\" alt=\"tutor image\" />\r\n                              <div>\r\n                              <h4>Muhammad BIlal</h4>\r\n                              <h6>Math expertiese</h6>\r\n                              <p>\r\n                              <Badge variant=\"success\">Math 1</Badge>{' '}\r\n                              <Badge variant=\"success\">Math 2</Badge>{' '}\r\n                              <Badge variant=\"success\">Math 3</Badge>{' '}\r\n                              </p>\r\n                              <p>\r\n                              ASSALAM o ALAIKUM ! I am well qualified and verified tutor . I love teaching coz i really enjoy it .\r\n                              </p>\r\n                              </div>\r\n                          </div>\r\n\r\n                          <div id=\"tutor-scoring-board\" className=\"float-md-right\">\r\n                              <p><strong>Rs400/hour</strong></p>\r\n                              <p>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                                  <i className=\"fa fa-star\"> </i>\r\n                              <strong> 5 </strong>\r\n                              (4)\r\n                              </p>\r\n                              <p>\r\n                                  Offers \r\n                                  <strong> Online Classes</strong> &\r\n                                  <strong> In Person Classes</strong>\r\n                              </p>\r\n                           </div>\r\n\r\n                           </a>\r\n                           </div>\r\n                            \r\n                      </Col>\r\n                  </Row>\r\n              </Container>\r\n             \r\n           </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\TutorsFilterControls.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\Register.js",["441","442"],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\Dashboard.js",["443","444","445","446","447"],"import React from \"react\";\r\nimport { Container, Row, Col, Accordion, Card } from 'react-bootstrap';\r\nimport {  DSHeader, DSMenu, DSContent} from \"./../components\";\r\n\r\nexport default class Dashboard extends React.Component {\r\n \r\n  render(){\r\n    return (\r\n\r\n      <div id=\"dashboard\">\r\n          <DSHeader />\r\n          <div style={{display:'flex'}}>\r\n          <DSMenu />\r\n          <DSContent />\r\n          </div>\r\n          \r\n          {/* <Container>\r\n                <Row>\r\n                    <Col md={{span:3}} style={{marginLeft:0}}>\r\n                    \r\n                    </Col>\r\n                    <Col md={{span:9}}>\r\n                   \r\n                    </Col>\r\n                </Row>\r\n            </Container> */}\r\n         \r\n            \r\n\r\n         \r\n      </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSHeader.js",["448"],"\r\nimport React from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nexport default class DSHeader extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div id=\"header\" className=\"\">\r\n            <Container>\r\n            <Row>\r\n            <Col xs={4}>\r\n                <h1 id=\"logo\"> Foster </h1>\r\n            </Col>\r\n            <Col xs={8}>\r\n              {/* <ul id=\"menu\" className=\"float-md-right\">\r\n                <li> <Link to=\"/\">Home</Link> </li>\r\n                <li> <Link to=\"/tutors\">Find A Tutor</Link> </li>\r\n                <li> <Link to=\"/login\">Login</Link> </li>\r\n                <li> <Link to=\"/register\">Register</Link> </li>\r\n              </ul> */}\r\n            </Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n      </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSMenu.js",["449","450"],"\r\nimport React from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Accordion, Card } from 'react-bootstrap';\r\n\r\n\r\nexport default class DSMenu extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div id=\"dashboar-menu\">\r\n               <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n              <div id=\"dashboar-menu-heading\">\r\n              <img src=\"images/tutor4-740x792.jpg\" alt=\"user profile image\" />\r\n              <h4>Muhammad Bilal </h4>\r\n              {/* <p>\r\n                  <i className=\"fa fa-user\">\r\n                  </i>\r\n                  View Profile\r\n              </p> */}\r\n              </div>\r\n              <h5>Dashboard </h5>\r\n              \r\n            <Accordion defaultActiveKey=\"0\" id=\"menue-accordion\">\r\n            <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\" >\r\n                Profile\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\" className=\"accordions-links\">\r\n                <Card.Body>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link class=\"nav-link active\" to=\"/dashboard/about\">About</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link class=\"nav-link active\" to=\"/dashboard/contact\">Contact Info</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link class=\"nav-link active\" to=\"/\">Expertise</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link class=\"nav-link active\" to=\"/\">Education</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link class=\"nav-link active\" to=\"/\">Location</Link>\r\n                    </p>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            \r\n\r\n            <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"1\" >\r\n                Account\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"1\" className=\"accordions-links\">\r\n                <Card.Body>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                    <Link class=\"nav-link\" to=\"/\">Messages</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                    <Link class=\"nav-link\" to=\"/\">Online Classes</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link class=\"nav-link\" to=\"#\">Get Verified</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link class=\"nav-link\" to=\"/\">Student Reviews</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link class=\"nav-link active\" to=\"/\">Location</Link>\r\n                    </p>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n\r\n            </Accordion>\r\n            \r\n            <ul class=\"nav flex-column\">\r\n              \r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link \" href=\"#\">Log Out</a>\r\n                </li>\r\n                </ul>\r\n           \r\n                </Col>\r\n                </Row>\r\n            </Container>\r\n            </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSContent.js",["451","452","453","454","455","456"],"import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col, Accordion, Card } from 'react-bootstrap';\r\nimport { DSAbout, DSContact } from \"../components\";\r\n\r\nexport default class DSContent extends React.Component {\r\n \r\n  render(){\r\n    return (\r\n      \r\n            <Switch>\r\n                  <Route path=\"/dashboard/about\">\r\n                  <DSAbout />\r\n                  </Route>\r\n\r\n                  <Route path=\"/dashboard/contact\">\r\n                  <DSContact />\r\n                  </Route>\r\n\r\n            </Switch>\r\n        \r\n    )\r\n  }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSAbout.js",["457"],"import React from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default class DSAbout extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n        <div className=\"section\">\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:12, offset:4}}>\r\n                <h2 className=\"section-heading\">Personal Information</h2>\r\n                <Form>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Bilal\" />\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group as={Col} controlId=\"formGridEmail1\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Ali\" />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n                    <Form.Group controlId=\"tagline\">\r\n                        <Form.Label>Tagline </Form.Label>\r\n                        <Form.Control placeholder=\"Tagline\" />\r\n                    </Form.Group>\r\n                   \r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridFees\">\r\n                        <Form.Label>Fees</Form.Label>\r\n                        <Form.Control />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Per</Form.Label>\r\n                        <Form.Control as=\"select\" defaultValue=\"Month\">\r\n                            <option>Month</option>\r\n                            <option>Week</option>\r\n                            <option>Hour</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n\r\n                    <Form.Row>\r\n                        \r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Gender</Form.Label>\r\n                        <Form.Control as=\"select\" defaultValue=\"\">\r\n                            <option></option>\r\n                            <option>Male</option>\r\n                            <option>Female</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n                    <Form.Group controlId=\"formGridAddress2\">\r\n                        <Form.Label>What makes you a great tutor? </Form.Label>\r\n                        <Form.Control placeholder=\"tell students why your are the best\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridAddress2\">\r\n                        <Form.Label>Teaching experience</Form.Label>\r\n                        <Form.Control placeholder=\"mention your experience\" />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group id=\"formGridCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\DSContact.js",["458"],"import React from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default class DSContact extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n        <div className=\"section\">\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:12, offset:4}}>\r\n                <h2 className=\"section-heading\">Contact Information</h2>\r\n                <Form>\r\n                   \r\n                    <Form.Group controlId=\"formGridAddress2\">\r\n                        <Form.Label>Phone Number</Form.Label>\r\n                        <Form.Control placeholder=\"03136604801\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridAddress2\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control placeholder=\"bilal@gmail.com\" />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group id=\"formGridCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Make it public\" />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Update\r\n                    </Button>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\components\\HttpClient.js",[],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\views\\register-view.js",["459"],"\r\nimport React, {setState} from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup, Spinner } from 'react-bootstrap';\r\n\r\n\r\nfunction RegisterView (props){\r\n    return (\r\n        <div id=\"register\" className=\"section\">\r\n        <Container>\r\n            <Row>\r\n                <Col md={5} id=\"register-left-side\">\r\n                    <h1>\r\n                        Welcome To Foster!\r\n                    </h1>\r\n                    <p>\r\n                        Meet with your tutor. We provide best online tutoring service.\r\n                    </p>\r\n                    <Link className=\"btn-link\" to=\"/login\" size=\"lg\">Login</Link>{' '}\r\n                </Col>\r\n\r\n                <Col md={7}  id=\"register-signup\">\r\n                    <div>\r\n                        <h2>\r\n                            Foster\r\n                        </h2>\r\n                        <p>\r\n                            Sign up with your email.\r\n                        </p>\r\n                        <Row>\r\n                            <Col md={{span:10, offset:2}}>\r\n                        <Form >\r\n                        \r\n                        <Form.Label htmlFor=\"inlineFormInputGroupUsername\" srOnly>\r\n                              Email\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" id=\"inlineFormInputGroupUsername\" placeholder=\"Username\" />\r\n                          </InputGroup>\r\n                          \r\n                          <Form.Label htmlFor=\"inlineFormInputGroupUsername\" srOnly>\r\n                              Name\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" id=\"inlineFormInputGroupUsername\" placeholder=\"Name\" />\r\n                          </InputGroup>\r\n\r\n                          <Form.Label htmlFor=\"inlineFormInputGroupUsername\" srOnly>\r\n                              Password\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" id=\"inlineFormInputGroupUsername\" placeholder=\"Password\" />\r\n                          </InputGroup>\r\n\r\n                          <Form.Label htmlFor=\"inlineFormInputGroupUsername\" srOnly>\r\n                              Confirm Password\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" id=\"inlineFormInputGroupUsername\" placeholder=\"Password\" />\r\n                          </InputGroup>\r\n\r\n                          <Form.Label htmlFor=\"inlineFormInputGroupUsername\" srOnly>\r\n                              City\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" id=\"inlineFormInputGroupUsername\" placeholder=\"City\" />\r\n                          </InputGroup>\r\n\r\n\r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={props.loading} className=\"btn-dark\" onClick={props.submitSignUp}>\r\n                               {props.loading && <Spinner\r\n                              as=\"span\"\r\n                              animation=\"grow\"\r\n                              size=\"sm\"\r\n                              role=\"status\"\r\n                              aria-hidden=\"true\"\r\n                              />}\r\n                              Sign Up\r\n                          </Button>\r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                        </Row>\r\n                            \r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default RegisterView","C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\views\\login-view.js",["460"],"C:\\Users\\m.bilal\\Documents\\code\\tutors-template\\src\\pages\\views\\forgot-password.js",["461"],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\index.js",[],["462","463"],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\Router.js",["464","465","466"],"\r\nimport React from \"react\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  \r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nimport './App.css';\r\n\r\n/**import components */\r\nimport  {Header, Footer, }  from \"./components\";\r\n\r\nimport  {Home, Tutors, Register,  \r\n  Dashboard, ForgotPasswordView,\r\n  VerifyEmail,\r\n  ResetPassword,\r\n  ViewProfile,\r\n  ContactUs,\r\n  StudentRequest\r\n }  from \"./pages\";\r\n\r\n import { DSChatBox } from \"./components\";\r\n import Dashboard2 from \"./pages/Dashboard/Dashboard\";\r\n// React Notification\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer } from 'react-notifications';\r\n\r\nimport WebrtcApp from \"./webrtc/App\";\r\n\r\nexport default class App extends React.Component {\r\n    render(){\r\n\r\n        return (<div>\r\n           <NotificationContainer/>\r\n            <Router >\r\n            <Header />\r\n          \r\n        \r\n                {/*\r\n                  A <Switch> looks through all its children <Route>\r\n                  elements and renders the first one whose path\r\n                  matches the current URL. Use a <Switch> any time\r\n                  you have multiple routes, but you want only one\r\n                  of them to render at a time\r\n                */}\r\n                <Switch>\r\n                  <Route exact path=\"/\">\r\n                  {/* <Header /> */}\r\n                   <Home />\r\n                  \r\n                  </Route>\r\n\r\n                  <Route path=\"/customers/:id/verify/:code\" render={(props) => <VerifyEmail {...props} />} />\r\n                  <Route path=\"/customers/:customerId/reset-password\" render={(props) => <ResetPassword {...props} />} />\r\n                 \r\n\r\n                  <Route path=\"/login\">\r\n                    <Register />\r\n                   \r\n                  </Route>\r\n                  <Route path=\"/register\">\r\n                    <Register />\r\n                  \r\n                  </Route>\r\n                  <Route path=\"/forgotpassword\">\r\n                    <Register />\r\n                   \r\n                  </Route>\r\n                  <Route path=\"/tutors\">\r\n                    <Tutors />\r\n                  </Route>\r\n                  \r\n                  <Route path=\"/dashboard\">\r\n                    <Dashboard />\r\n                    {/* <Dashboard2 /> */}\r\n                   \r\n                  </Route>\r\n                  \r\n                  \r\n                  <Route path=\"/contact-us\">\r\n                    <ContactUs />\r\n                   \r\n                  </Route>\r\n                 \r\n                 \r\n                  <Route path=\"/calling\">\r\n                    <WebrtcApp />\r\n                  </Route>\r\n                   <Route path=\"/calling-route/:receiverId\" render={(props) => <WebrtcApp {...props} />} >\r\n                   </Route>\r\n                  \r\n                  \r\n                  <Route path=\"/profile/:id\" render={(props) => <ViewProfile {...props} />} >\r\n                                        \r\n                  </Route>\r\n                  \r\n                  <Route path=\"/request/to/:tutorId\" render={(props) => <StudentRequest {...props} />} >\r\n                                        \r\n                  </Route>\r\n\r\n                  \r\n\r\n                 \r\n                </Switch>\r\n             \r\n                <Footer />\r\n           \r\n            </Router>\r\n            </div>\r\n          )\r\n    }\r\n  \r\n}\r\n\r\n// You can think of these components as \"pages\"\r\n// in your app.\r\n\r\n\r\n","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\reportWebVitals.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\index.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\index.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Banner.js",["467"],"\r\n\r\n\r\nimport React from \"react\";\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { BannerImage } from \"./StyledComponents\";\r\n\r\nexport default class Banner extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n        <div id=\"banner\" className=\"py-5\">\r\n            <Container>\r\n                <Row>\r\n                    <Col xs md={8} lg={6}>\r\n                        <div id=\"banner-title\" >\r\n                            {/* <img id=\"backgroundimage\" src=\"/images/banner-2.jpg\" /> */}\r\n                            {/* <BannerImage /> */}\r\n                            {/* <p>Personal & Online Tutor                 </p> */}\r\n                            <h2 id=\"title\">\r\n                                Find Private Tutor \r\n                            </h2> \r\n                            <p className=\"lead\">\r\n                                <strong>Worldwide Learning</strong>, We provide best tutors and standard education.\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Header.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Services.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\StartTutoringBanner.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\HaveQuestion.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Footer.js",["468","469","470"],"import React, {useState,useEffect } from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default function Footer () {\r\n    const [enableLinks, setenableLinks] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        let pathname = window.location.pathname\r\n        if(pathname.includes('calling-route') || pathname.includes('calling')){ \r\n          setenableLinks(false)\r\n        }\r\n\r\n      }, []);\r\n\r\n      return (\r\n          <>\r\n        {enableLinks ?\r\n          <div id=\"footer\">\r\n              \r\n              <Container>\r\n                  <Row>\r\n                      <Col md={4}>\r\n                          <div id=\"logo\">\r\n                              {/* <h2>Foster</h2> */}\r\n                              <img className=\"logo\" src=\"/footer_logo.png\" alt=\"Foster\" />\r\n\r\n                              <p>\r\n                              Foster connects people who need to know with the experts who can teach them.\r\n\r\n                              </p>\r\n                          </div>\r\n                      </Col>\r\n                      \r\n                      <Col md={4}>\r\n                      <h4>Quick Links</h4>\r\n                          <div style={{display: 'flex'}}>\r\n                                <div style={{marginRight:'10px'}}>\r\n                                <p >\r\n                                 <a href=\"\">About Us </a>\r\n                                 </p>\r\n                                 <p>\r\n                                <Link to=\"/contact-us\">Contact Us </Link>\r\n                                </p>\r\n                                <p>\r\n                                <Link to=\"/calling\" target=\"_blank\">Video Lecture </Link>\r\n                                </p>\r\n                             </div>\r\n\r\n                             <div style={{marginLeft:'10px'}}>\r\n                                <p >\r\n                                 <Link to=\"/register\">Become a Tutor </Link>\r\n                                 </p>\r\n                                 <p>\r\n                                <Link to=\"/tutors\">Hire a Tutor </Link>\r\n                                </p>\r\n                             </div>\r\n\r\n\r\n                          </div>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                      <h4>Our Contacts</h4>\r\n                        <div id=\"footer-contact\">\r\n                            <p>\r\n                                <i className=\"fa fa-user\"></i>\r\n                                Evacuee Trust Complex.\r\n                            </p>\r\n\r\n                            <p>\r\n                                <i className=\"fa fa-envelope\"></i>\r\n                                info@thefoster.life\r\n                            </p>\r\n                            <p>\r\n                                <i className=\"fa fa-phone\"></i>\r\n                                +92-301-5339780\r\n                            </p>\r\n\r\n                        </div>\r\n                        <div id=\"social-links\" >\r\n                           \r\n                                <a target=\"_blank\" href=\"https://www.facebook.com/The-Foster-112666314196501/?view_public_for=112666314196501\">\r\n                                <i className=\"fa fa-facebook\">\r\n                                </i>\r\n                                </a>\r\n                                \r\n                                {/* <a target=\"_blank\" href=\"\">\r\n                                <i className=\"fa fa-twitter\"></i>\r\n                                </a> */}\r\n                        </div>\r\n                      </Col>\r\n                  </Row>\r\n              </Container>\r\n             \r\n          </div>\r\n          :\r\n          null\r\n          \r\n        }\r\n        </>\r\n      )\r\n    \r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSHeader.js",["471","472"],"\r\nimport React, {setState} from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nexport default class DSHeader extends React.Component {\r\n  \r\n\r\n    render(){\r\n\r\n      return (\r\n          <div id=\"header\" className=\"\">\r\n            <Container>\r\n            <Row>\r\n            <Col xs={4}>\r\n                <h1 id=\"logo\"> Foster </h1>\r\n            </Col>\r\n            <Col xs={8}>\r\n              {/* <ul id=\"menu\" className=\"float-md-right\">\r\n                <li> <Link to=\"/\">Home</Link> </li>\r\n                <li> <Link to=\"/tutors\">Find A Tutor</Link> </li>\r\n                <li> <Link to=\"/login\">Login</Link> </li>\r\n                <li> <Link to=\"/register\">Register</Link> </li>\r\n              </ul> */}\r\n            </Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n      </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\TutorsFilter.js",["473","474","475","476","477"],"import React, {useState, useEffect} from \"react\";\r\n\r\nimport { Container, Row, Col, Form } from 'react-bootstrap';\r\nimport SearchTutors from \"./SearchTutors\";\r\nimport TutorsFilterControls from \"./TutorsFilterControls\";\r\nimport { getTutors } from \"../services\";\r\nimport {useForm} from 'react-hook-form';\r\nimport Spinner from './common/Spinner';\r\n\r\n\r\nexport default function TutorsFilter() {\r\n  const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [tutors, setTutors] = useState([]);\r\n    const [totalTutors, setTotalTutors] = useState(0);\r\n    const [tutorFilter, settutorFilter] = useState({});\r\n    const [subject, setsubject] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n      // get user and set form fields\r\n      setIsLoading(true)\r\n      getTutors().then(tutors => {\r\n        setIsLoading(false)\r\n          setTutors(tutors);\r\n          setTotalTutors(tutors.length)\r\n      }).catch(error=>{\r\n        setIsLoading(false)\r\n        console.log(error)\r\n      })\r\n    }, []);\r\n\r\n\r\n    const findTutorsBySubject = (data)=>{\r\n    console.log(data)\r\n    setsubject(data.subject)\r\n\r\n    let filter = tutorFilter\r\n    if(data.subject){\r\n      filter.teachingSubjects = data.subject\r\n    }else {\r\n      delete filter.teachingSubjects\r\n    }\r\n \r\n    filterTutors(filter)\r\n      \r\n    }\r\n\r\n    const applyFilterOnSearchTutors = (data)=>{\r\n      //console.log(data)\r\n      \r\n      let fltr = data || tutorFilter\r\n      fltr = JSON.parse(JSON.stringify(fltr))\r\n\r\n      if(fltr.feesRange === \"\" || fltr.feesRange === \"0\") {\r\n        delete fltr.fees\r\n        delete fltr.feesRange\r\n      }\r\n      else {\r\n        fltr.fees = {gt:parseInt(fltr.feesRange)}\r\n        delete fltr.feesRange\r\n      }\r\n      if(fltr.feesPer === \"\") delete fltr.feesPer\r\n      if(fltr.teachingCity === \"\") delete fltr.teachingCity\r\n      if(fltr.gender === \"\") delete fltr.gender\r\n\r\n      settutorFilter(fltr)\r\n      if(subject){\r\n        fltr.teachingSubjects = subject\r\n      }\r\n     \r\n      filterTutors(fltr)\r\n      }\r\n    \r\n      function filterTutors (filter){\r\n        setIsLoading(true)\r\n        getTutors(filter).then(tutors => {\r\n          setIsLoading(false)\r\n          setTutors(tutors);\r\n          setTotalTutors(tutors.length)\r\n        }).catch(error=>{\r\n          setIsLoading(false)\r\n          console.log(error)\r\n        })\r\n      }\r\n\r\n      return (\r\n          <div>\r\n            {isLoading && <Spinner />}\r\n              <Container>\r\n                    <Row>\r\n                    <Col md={3} >\r\n                       <TutorsFilterControls\r\n                      filterTutors={applyFilterOnSearchTutors}\r\n                       />\r\n                      </Col>\r\n\r\n                    <Col md={9} >\r\n                        \r\n                       <SearchTutors \r\n                        totalTutors={totalTutors}\r\n                        tutors={tutors}\r\n                        findTutors={findTutorsBySubject}\r\n                       />\r\n\r\n                    </Col>\r\n\r\n                    </Row>\r\n\r\n                </Container>\r\n              \r\n          </div>\r\n      )\r\n    \r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSMenu.js",["478","479","480","481","482","483","484","485","486"],"\r\nimport React, {useState, useEffect, useRef} from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Accordion, Card } from 'react-bootstrap';\r\nimport { uploadCustomerImage, getCustomerImage } from \"../services\";\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { constants } from \"../constants\";\r\n\r\n\r\n\r\nexport default function DSMenu (props) {\r\n\r\n    const [profileImage, setprofileImage] = useState({});\r\n    const [fileupload, setfileupload] = useState('');\r\n    const [customer, setcustomer] = useState({});\r\n    const [activeLinkClass, setactiveLinkClass] = useState('active');\r\n    const [activeAccordionsClass, setactiveAccordionsClass] = useState('accordions-active');\r\n    const [customerName, setcustomerName] = useState('');\r\n   // const [customerImage, setcustomerImage] = useState('');\r\n   let userId = localStorage.getItem('userId')\r\n   let user = localStorage.getItem('user')\r\n   let userImage = localStorage.getItem('userImage')\r\n   \r\n      \r\n  useEffect(() => {\r\n  \r\n    \r\n    if(!user){\r\n        window.location.href = '/'\r\n        return\r\n    }\r\n    user = JSON.parse(user)\r\n    setcustomerName(user.firstName +' '+ user.lastName)\r\n    user.imageUrl = userImage ? userImage : user.imageUrl \r\n    \r\n    let image = user.imageUrl? user.imageUrl : '/images/customers/default.jpg'\r\n    setfileupload(constants.api_server()+image)\r\n   \r\n  }, []);\r\n\r\n  const changeHandler = (event) =>{\r\n      console.log('event.target.files[0]', event.target.files[0])\r\n      let file = event.target.files[0]\r\n      setfileupload(URL.createObjectURL(file ) )\r\n      var reader = new FileReader();\r\n      var baseString;\r\n      reader.onloadend = function () {\r\n        baseString = reader.result;\r\n   // console.log(baseString); \r\n        uploadCustomerImage({image: baseString, extention: '.'+ file.name.split('.')[1], customerId: userId})\r\n        .then(result => {\r\n            if(result.resultCode == '2001'){\r\n                if(typeof user === 'string' ){\r\n                    user = JSON.parse(user)\r\n                }\r\n                user.imageUrl = result.imageUrl\r\n                localStorage.setItem('userImage', result.imageUrl )\r\n                NotificationManager.success(result.message, 'Successful!', 2000);\r\n                return\r\n            }else {\r\n                NotificationManager.error(result.error.message, 'Error!', 2000);\r\n\r\n            }\r\n\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n        })\r\n    }\r\n    reader.readAsDataURL(file);\r\n\r\n     }\r\n\r\n     const changeActiveClass = (event) => {\r\n         document.getElementsByClassName('active')[0].classList.remove(activeLinkClass) ;\r\n          event.target.classList.add(activeLinkClass) \r\n        }\r\n     \r\n        const changeActiveAccordionsClass = (event) => {\r\n         document.getElementsByClassName('accordions-active')[0].classList.remove(activeAccordionsClass) ;\r\n          event.target.classList.add(activeAccordionsClass) \r\n        }\r\n\r\n      return (\r\n          <div id=\"dashboar-menu\">\r\n               <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n              <div id=\"dashboar-menu-heading\">\r\n              <input ref={input => setprofileImage(input) }\r\n               type=\"file\" id=\"file1\" name=\"image\" accept=\"image/*\" \r\n               capture \r\n               style={{display:\"none\" }}\r\n               onChange={ changeHandler }\r\n               />\r\n              <img src={fileupload}\r\n              id=\"upfile1\" style={{cursor:\"pointer\"}}\r\n              alt=\"user profile image\" \r\n              onClick={ ()=>{ profileImage.click()} }\r\n             \r\n              />\r\n              <h4>{customerName} </h4>\r\n              {/* <p>\r\n                  <i className=\"fa fa-user\">\r\n                  </i>\r\n                  View Profile\r\n              </p> */}\r\n              </div>\r\n              <h5>Dashboard </h5>\r\n              \r\n            <Accordion defaultActiveKey=\"0\" id=\"menue-accordion\">\r\n            <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\" onClick={changeActiveAccordionsClass} className=\"accordions-active\" >\r\n                My Profile\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\" className=\"accordions-links \">\r\n                <Card.Body>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link className={`nav-link ${activeLinkClass}`} onClick={changeActiveClass} to=\"/dashboard/about\">About</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link className=\"nav-link \" onClick={changeActiveClass} to=\"/dashboard/contact\">Contact Info</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link className=\"nav-link \" onClick={changeActiveClass} to=\"/dashboard/expertise\">Expertise</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link className=\"nav-link \" onClick={changeActiveClass} to=\"/dashboard/education\">Education</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link className=\"nav-link \" onClick={changeActiveClass} to=\"/dashboard/mediums\">Teaching Mediums</Link>\r\n                    </p>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            \r\n\r\n            <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"1\" onClick={changeActiveAccordionsClass} >\r\n                My Network\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"1\" className=\"accordions-links\">\r\n                <Card.Body>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                    <Link className=\"nav-link\" onClick={changeActiveClass} to=\"/dashboard/new-requests\">New Requests</Link>\r\n                    </p>\r\n                    {/* <p>\r\n                    <i className=\"fa fa-user\"> </i>\r\n                    <Link className=\"nav-link\" to=\"/\">Online Classes</Link>\r\n                    </p>\r\n                    <p>\r\n                    <i className=\"fa fa-user\"> </i>\r\n                        <Link className=\"nav-link\" to=\"#\">Get Verified</Link>\r\n                    </p> */}\r\n                    {/* <p>\r\n                        <Link className=\"nav-link\" to=\"#\">Student Reviews</Link>\r\n                    </p> */}\r\n                    <p>\r\n                        <Link className=\"nav-link\" onClick={changeActiveClass} to=\"/dashboard/classes\">My Sessions</Link>\r\n                    </p>\r\n                    <p>  \r\n                        <Link className=\"nav-link \" to=\"/dashboard/feedback\" onClick={changeActiveClass} >Feed Back</Link>\r\n                    </p>\r\n                    \r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n\r\n            </Accordion>\r\n            \r\n            <ul className=\"nav flex-column\" style={{marginTop:'50px'}}>\r\n              \r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link \" to=\"/\" onClick={()=> { localStorage.clear(); window.location.reload(); } }>Log Out</Link>\r\n                </li>\r\n                \r\n                </ul>\r\n           \r\n                </Col>\r\n                </Row>\r\n            </Container>\r\n            </div>\r\n      )\r\n    \r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Home.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Tutors.js",["487","488","489"],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSContent.js",["490","491"],"import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\nimport { DSAbout, DSContact, DSExpertise,\r\n  DSEducation,\r\n  DSMediums,\r\n  DSNewRequests,\r\n  DSChatBox,\r\n  DSClasses,\r\n  DSClassesDetails,\r\n  AcceptStudentRequest,\r\n  DSFeedback\r\n } from \"../components\";\r\n\r\n import  WebrtcApp  from \"../webrtc/App\";\r\n\r\n import Socket from \"../components/common/Socket.js\";\r\n\r\nexport default class DSContent extends React.Component {\r\n \r\n  render(){\r\n    return (\r\n        <div>\r\n          <Socket />\r\n\r\n            <Switch>\r\n                  <Route path=\"/dashboard/about\">\r\n                  <DSAbout />\r\n                  </Route>\r\n\r\n                  <Route path=\"/dashboard/contact\">\r\n                  <DSContact />\r\n                  </Route>\r\n                  \r\n                  <Route path=\"/dashboard/expertise\">\r\n                  <DSExpertise />\r\n                  </Route>\r\n                  \r\n                  <Route path=\"/dashboard/education\">\r\n                  <DSEducation />\r\n                  </Route>\r\n                 \r\n                  <Route path=\"/dashboard/mediums\">\r\n                  <DSMediums />\r\n                  </Route>\r\n                 \r\n                  <Route path=\"/dashboard/new-requests\">\r\n                  <DSNewRequests />\r\n                  </Route>\r\n                  \r\n                  <Route path=\"/dashboard/chat-box/:to?\" render={(props) => <DSChatBox {...props} />} >\r\n                                                          \r\n                   </Route>\r\n\r\n                   <Route path=\"/dashboard/classes\">\r\n                  <DSClasses />\r\n                  </Route>\r\n\r\n\r\n                  <Route path=\"/dashboard/class/detail/:instructor\" render={(props) => <DSClassesDetails {...props} />} >\r\n                                                          \r\n                  </Route>\r\n                  \r\n                  <Route path=\"/dashboard/accept-request/:requestId/from/:requestFrom\" render={(props) => <AcceptStudentRequest {...props} />} >\r\n                                                          \r\n                  </Route>\r\n                 \r\n                  {/* <Route path=\"/dashboard/calling-route/:receiverId\" render={(props) => <WebrtcApp {...props} />} >\r\n                                                          \r\n                  </Route> */}\r\n                 \r\n                  <Route path=\"/dashboard/feedback\">\r\n                  <DSFeedback />\r\n                  </Route>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n  }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSAbout.js",["492"],"import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\nfunction DSAbout  (props){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [customer, setCustomer] = useState({});\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    const onSubmit = (data) => {\r\n       if(data.fees){\r\n           data.fees = parseInt(data.fees)\r\n       }else {\r\n           delete data.fees\r\n       }\r\n       //data.userType = customer.userType;\r\n       let postData = {...customer, ...data};\r\n       setIsLoading(true)\r\n    updateCustomerInfo(postData, {customerId: userId})\r\n    .then(result =>{\r\n        setIsLoading(false)\r\n        //console.log(result)\r\n        if(result.error){\r\n            NotificationManager.error(result.error.message, 'Error!', 2000);\r\n            return\r\n        }\r\n        NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n    })\r\n    .catch(error=>{\r\n        setIsLoading(false)\r\n       // console.log(error)\r\n        NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n    })\r\n    }\r\n\r\n    useEffect(() => {\r\n            // get user and set form fields\r\n            setIsLoading(true)\r\n            getCustomerById(userId).then(customer => {\r\n                setIsLoading(false)\r\n                const fields = ['firstName',\r\n                 'lastName',\r\n                 'tagLine',\r\n                 'fees',\r\n                 'feesPer',\r\n                 'gender',\r\n                 'greateTutorLine',\r\n                 'greateTutorLine',\r\n                 'teachingExperienceLine',\r\n                ];\r\n                fields.forEach(field => setValue(field, customer[field]));\r\n                setCustomer(customer);\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, []);\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n        {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:12, offset:2}}>\r\n                <h2 className=\"section-heading\">Personal Information</h2>\r\n                <Form >\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"firstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        placeholder=\"FirstName\" \r\n                        name=\"firstName\"\r\n                        value={props.firstName}\r\n                        ref={register({required: 'firstName is required!'})}\r\n                        />\r\n                        </Form.Group>\r\n                        \r\n\r\n                        <Form.Group as={Col} controlId=\"lastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        placeholder=\"last Name\" \r\n                        name=\"lastName\"\r\n                        value={props.lastName}\r\n                        ref={register({required:'last name is required'})}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n                    {errors.firstName && <p>{errors.firstName.message}</p> }\r\n                    {errors.lastName && <p>{errors.lastName.message}</p> }\r\n\r\n                    <Form.Group controlId=\"tagline\">\r\n                        <Form.Label>Tagline </Form.Label>\r\n                        <Form.Control placeholder=\"Tagline\"\r\n                        name=\"tagLine\"\r\n                        value={props.tagLine}\r\n                        ref={register({required: 'Tag Line is required'})}\r\n                        />\r\n                    </Form.Group>\r\n                   \r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"fees\">\r\n                        <Form.Label>Fees</Form.Label>\r\n                        <Form.Control \r\n                        type=\"number\"\r\n                        placeholder=\"fees\"\r\n                        name=\"fees\"\r\n                        value={props.fees}\r\n                        ref={register({required: 'Fees is required'})}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Per</Form.Label>\r\n                        <Form.Control as=\"select\" \r\n                        defaultValue=\"Month\"\r\n                        name=\"feesPer\"\r\n                        value={props.feesPer}\r\n                        ref={register({required: 'fees as per is requried'})}\r\n                        >\r\n                            {/* <option  /> */}\r\n                            <option value=\"month\" >Month</option>\r\n                            <option value=\"week\">Week</option>\r\n                            <option value=\"hour\">Hour</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n\r\n                    <Form.Row>\r\n                        \r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Gender</Form.Label>\r\n                        <Form.Control as=\"select\" \r\n                        name=\"gender\"\r\n                        value={props.gender}\r\n                        ref={register()}\r\n                        defaultValue=\"\"\r\n                        >\r\n                            <option />\r\n                            <option>Male</option>\r\n                            <option>Female</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n                    <Form.Group controlId=\"greateTutorLine\">\r\n                        <Form.Label>What makes you a great tutor? </Form.Label>\r\n                        <Form.Control \r\n                        placeholder=\"tell students why your are the best\" \r\n                        as=\"textarea\"\r\n                        name=\"greateTutorLine\"\r\n                        value={props.greateTutorLine}\r\n                        ref={register({required: 'Description is required'})}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridAddress2\">\r\n                        <Form.Label>Teaching experience</Form.Label>\r\n                        <Form.Control \r\n                        placeholder=\"mention your experience\" \r\n                        as=\"textarea\"\r\n                        name=\"teachingExperienceLine\"\r\n                        value={props.teachingExperienceLine}\r\n                        ref={register({required: 'teaching experience is required'})}\r\n                        />\r\n                    </Form.Group>\r\n\r\n\r\n                    {/* <Form.Group id=\"formGridCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group> */}\r\n\r\n                    <Form.Row>\r\n                    <Button as={Col}  className=\"btn-dark\"\r\n                     disabled={isLoading}\r\n                     size=\"sm\"\r\n                     md={{span:8, offset:2}}\r\n                     onClick={handleSubmit(onSubmit)}\r\n                     >\r\n                        Update Personal information\r\n                    </Button>\r\n                    </Form.Row>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSAbout","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSContact.js",["493"],"import React, {useState, useEffect} from \"react\";\r\n\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nexport default function DSContact (props) {\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [customer, setCustomer] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    let userId = localStorage.getItem('userId')\r\n\r\nconst onSubmit = (data) => {\r\n       \r\n       let postData = {...customer, ...data};\r\n       setIsLoading(true)\r\n    updateCustomerInfo(postData, {customerId: userId})\r\n    .then(result =>{\r\n        setIsLoading(false)\r\n        //console.log(result)\r\n        NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n    })\r\n    .catch(error=>{\r\n        setIsLoading(false)\r\n        console.log(error)\r\n        NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n    })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // get user and set form fields\r\n        setIsLoading(true)\r\n        getCustomerById(userId).then(customer => {\r\n            setIsLoading(false)\r\n            const fields = [\r\n             'phone',\r\n             'email',\r\n             'addressLine',\r\n             'isPublicContactInfo',\r\n             \r\n             \r\n            ];\r\n            fields.forEach(field => setValue(field, customer[field]));\r\n            setCustomer(customer);\r\n        }).catch(error=>{\r\n            setIsLoading(false)\r\n            console.log(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n        })\r\n    }, []);\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n            {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:12, offset:6}}>\r\n                <h2 className=\"section-heading\">Contact Information</h2>\r\n                <Form>\r\n                   \r\n                    <Form.Group controlId=\"phone\">\r\n                        <Form.Label>Phone Number</Form.Label>\r\n                        <Form.Control placeholder=\"phone number\" \r\n                        name=\"phone\"\r\n                        value={props.phone}\r\n                        ref={register({required:'phone number is required.'})}\r\n                        />\r\n                    </Form.Group>\r\n                    {errors.phone && <p>{errors.phone.message}</p> }\r\n                   \r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control placeholder=\"Email address\"\r\n                        name=\"email\"\r\n                        \r\n                        ref={register({required:'email is required.'})}\r\n                        />\r\n                    </Form.Group>\r\n                    {errors.email && <p>{errors.email.message}</p> }\r\n\r\n                    <Form.Group controlId=\"addressLine\">\r\n                        <Form.Label>Living Address</Form.Label>\r\n                        <Form.Control placeholder=\"enter your address\"\r\n                        name=\"addressLine\"\r\n                        as=\"textarea\"\r\n                        ref={register()}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group id=\"isPublicContactInfo\">\r\n                        <Form.Check type=\"checkbox\"\r\n                         label=\"Make it public\"\r\n                         name=\"isPublicContactInfo\"\r\n                         ref={register()}\r\n                         />\r\n                    </Form.Group>\r\n\r\n                    <Button \r\n                    as={Col}  className=\"btn-dark\"\r\n                     disabled={isLoading}\r\n                     size=\"sm\"\r\n                     md={{span:6, offset:3}}\r\n                     onClick={handleSubmit(onSubmit)}\r\n                    >\r\n                        Update\r\n                    </Button>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Register.js",["494","495"],"\r\nimport React, {setState} from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\n\r\nimport RegisterView from \"./views/register-view\";\r\nimport LoginView from \"./views/login-view\";\r\nimport ForgotPasswordView from \"./views/forgot-password\";\r\n\r\nexport default class Register extends React.Component {\r\n\r\n    // constructor (){\r\n    //     super()\r\n    //     this.state = {\r\n    //         loading: false,\r\n    //         locationPath: '/register'\r\n    //     }\r\n\r\n    //     this.submitSignUp = this.submitSignUp.bind(this)\r\n    //     // this.showLoginView = this.showLoginView.bind(this)\r\n    // }\r\n  \r\n    \r\n\r\n    componentDidMount(){\r\n       \r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            \r\n            <Switch>\r\n                  <Route path=\"/register\">\r\n                  <RegisterView />\r\n                  </Route>\r\n\r\n                  <Route path=\"/login\">\r\n                  <LoginView />\r\n                  </Route>\r\n                  \r\n                  <Route path=\"/forgotpassword\">\r\n                  <ForgotPasswordView />\r\n                  </Route>\r\n                  \r\n                  \r\n                  {/* <Route path=\"/forgotpassword\" component={ForgotPasswordView} /> */}\r\n\r\n            </Switch>\r\n        )\r\n    //   return (\r\n    //       <span>\r\n    //            {this.state.locationPath === '/register'? <RegisterView \r\n    //             submitSignUp={this.submitSignUp}\r\n    //             showLoginView={()=> this.setState({locationPath:'/login'})}\r\n    //      />: null }\r\n\r\n    //         {this.state.locationPath === '/login'? <LoginView \r\n    //             submitSignIn={this.submitSignUp}\r\n    //             showRegisterView={()=> this.setState({locationPath:'/register'})}\r\n    //             forgotPassword={()=> this.setState({locationPath:'/forgot-password'})}\r\n    //      />: null }\r\n           \r\n    //         {this.state.locationPath === '/forgot-password'? <ForgotPassword \r\n    //             submitSignIn={this.submitSignUp}\r\n    //             showRegisterView={()=> this.setState({locationPath:'/register'})}\r\n                \r\n    //      />: null }\r\n    //       </span>\r\n        \r\n         \r\n\r\n    //   )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Dashboard.js",["496","497","498","499","500","501"],"import React from \"react\";\r\nimport { Container, Row, Col, Accordion, Card } from 'react-bootstrap';\r\nimport {  DSHeader, DSMenu, DSContent} from \"./../components\";\r\n\r\n\r\nexport default class Dashboard extends React.Component {\r\n \r\n  render(){\r\n    return (\r\n\r\n      <div id=\"dashboard\">\r\n          {/* <DSHeader /> */}\r\n          <div style={{display:'flex', marginTop:'47px'}}>\r\n          <DSMenu />\r\n          <DSContent />\r\n          </div>\r\n          \r\n          {/* <Container>\r\n                <Row>\r\n                    <Col md={{span:3}} style={{marginLeft:0}}>\r\n                    \r\n                    </Col>\r\n                    <Col md={{span:9}}>\r\n                   \r\n                    </Col>\r\n                </Row>\r\n            </Container> */}\r\n         \r\n            \r\n\r\n         \r\n      </div>\r\n      )\r\n    }\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\Testimonials.js",["502","503"],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\views\\forgot-password.js",["504","505","506","507","508","509"],"\r\nimport React, {setState, useState} from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup, } from 'react-bootstrap';\r\n\r\nimport {useForm} from 'react-hook-form';\r\nimport { MessageBox, forGotPassword } from \"../../services\"\r\nimport Spinner from '../../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction ForgotPasswordView (props){\r\n\r\n    const { register, handleSubmit, errors, watch } = useForm();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n    const onSubmit = (data) => {\r\n        setIsLoading(true)\r\n        forGotPassword(data)\r\n        .then((responseJson) => {\r\n            setIsLoading(false)\r\n            // Do something with the response\r\n            console.log('responseJson', responseJson)\r\n            if(responseJson.ok === false){\r\n                NotificationManager.error(responseJson.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n            if(responseJson.resultCode && responseJson.resultCode != 2001 ){\r\n                NotificationManager.error(responseJson.message, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n          \r\n            window.location.href =`/customers/${responseJson.customerId}/reset-password`;\r\n        \r\n\r\n          })\r\n          .catch((error) => {\r\n            setIsLoading(false)\r\n            console.trace(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n          });\r\n    };\r\n\r\n\r\n    return (\r\n        <div id=\"register\" className=\"section\">\r\n            {isLoading && <Spinner />}\r\n            <MessageBox\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n            />\r\n        <Container>\r\n            <Row>\r\n                <Col md={5} id=\"register-left-side\">\r\n                    <h1>\r\n                        Welcome To Foster!\r\n                    </h1>\r\n                    <p>\r\n                        Meet with your tutor. We provide best online tutoring service.\r\n                    </p>\r\n                    <Link className=\"btn-link\" to=\"/register\" size=\"lg\">Register</Link>{' '}\r\n                </Col>\r\n\r\n                <Col md={7}  id=\"register-signup\">\r\n                    <div>\r\n                        <h2>\r\n                            Foster\r\n                        </h2>\r\n                        <p>\r\n                            Reset password with your email.\r\n                        </p>\r\n                        <Row>\r\n                            <Col md={{span:10, offset:2}}>\r\n                        <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        \r\n                        <Form.Label htmlFor=\"email\" srOnly>\r\n                              Email\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" \r\n                              id=\"email\" \r\n                              name=\"username\" \r\n                              placeholder=\"Email\" \r\n                              ref={register({required:'Enter your email address'})}\r\n                              />\r\n                          </InputGroup>\r\n                          {errors.email && <p>{errors.email.message}</p>}\r\n                                                   \r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading} \r\n                           className=\"btn-dark\" \r\n                           type=\"submit\"\r\n                           >\r\n                               \r\n                              Reset Passowrd\r\n                          </Button>\r\n                          \r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                        </Row>\r\n                            \r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordView","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\SearchTutors.js",["510","511","512","513","514","515","516","517","518"],"\r\nimport React, {useState, } from \"react\";\r\n\r\nimport { Container, Row, Col, \r\n    Form, InputGroup, FormControl,\r\n    Button, Badge\r\n  } from 'react-bootstrap';\r\n\r\n  import TutorListInfo from './TutorListInfo.js';\r\n  import {useForm} from 'react-hook-form';\r\n\r\n\r\n\r\nexport default function SearchTutors (props) {\r\n  const { register, handleSubmit, setValue, errors, } = useForm();\r\n  const [subject, setSubject] = useState('');\r\n  let tutorsList = []\r\n  let countValidTutors = 0\r\n\r\n  if(props.tutors && props.tutors.length > 0){\r\n     tutorsList = props.tutors.map(item=>{\r\n       \r\n              if(item.tagLine && item.fees){\r\n                countValidTutors = countValidTutors + 1\r\n                    return <TutorListInfo \r\n                        tutor={item}\r\n                        key={item.id}\r\n                        />\r\n              }\r\n              \r\n     })\r\n    // console.log('tutorsList', tutorsList)\r\n  }\r\n  \r\n    \r\n  const findTutors= (data)=>{\r\n    console.log(data)\r\n    props.findTutors(data)\r\n  }\r\n\r\n\r\n      return (\r\n          <div>\r\n            <div id=\"tutors-filter-search-box\">\r\n             <Form.Row>\r\n                <Col xs={10}>\r\n                <Form.Label htmlFor=\"inlineFormInput\" >\r\n                    Subject\r\n                </Form.Label>\r\n                <Form.Control placeholder=\"Subject\"\r\n                name=\"subject\"\r\n               // value={props.subject}\r\n                ref={register()}\r\n                />\r\n                </Col>\r\n               \r\n                <Col>\r\n                <Button style={{marginTop:'25px'}}\r\n                 variant=\"btn\" size=\"md\"\r\n                 onClick={handleSubmit(findTutors) }\r\n                 type=\"submit\"\r\n                 >\r\n                   Search\r\n                   </Button>{' '}\r\n                </Col>\r\n            </Form.Row>\r\n\r\n            <div id=\"tutor-results-info\" style={{marginTop:'25px'}}>\r\n                <h4>Total Found  <Badge variant=\"success\">{countValidTutors}</Badge>{' '}</h4>\r\n            </div>\r\n\r\n            </div>\r\n\r\n\r\n            \r\n          {tutorsList}\r\n\r\n\r\n              </div>\r\n      )\r\n    \r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\TutorsFilterControls.js",["519"],"import React, {useState} from \"react\";\r\n\r\nimport { Form, Col } from 'react-bootstrap';\r\n\r\nexport default function TutorsFilterControls (props) {\r\n\r\n   const [tutorFilter, settutorFilter] = useState({}); \r\n   \r\n   const handleOnChange = (event)=>{\r\n       const {name, value} = event.target;\r\n       tutorFilter[name] = value;\r\n       settutorFilter(tutorFilter)\r\n       //console.log(event.target.name, event.target.value)\r\n       console.log(tutorFilter)\r\n\r\n       props.filterTutors(tutorFilter)\r\n   }\r\n      return (\r\n          <div>\r\n                \r\n                        <h6>Filters </h6>\r\n                        <Form>\r\n                        \r\n                            <Form.Group  controlId=\"feesRange\">\r\n                                <Form.Label>Fees {tutorFilter.feesRange}</Form.Label>\r\n                                <Form.Control \r\n                                 type=\"range\"\r\n                                 name=\"feesRange\"\r\n                                 min=\"\" \r\n                                 max=\"5000\"\r\n                                 onChange={handleOnChange}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group  controlId=\"feesPer\">\r\n                                <Form.Label>Fees Per</Form.Label>\r\n                                <Form.Control as=\"select\" \r\n                              //  defaultValue=\"Month\"\r\n                                name=\"feesPer\"\r\n                               onChange={handleOnChange}\r\n                                >\r\n                                    <option  />\r\n                                    <option value=\"month\" >Month</option>\r\n                                    <option value=\"week\">Week</option>\r\n                                    <option value=\"hour\">Hour</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group  controlId=\"teachingCity\">\r\n                                <Form.Label>City</Form.Label>\r\n                                <Form.Control as=\"select\" \r\n                            onChange={handleOnChange}\r\n                                name=\"teachingCity\"\r\n                                >\r\n                                    <option  />\r\n                                    <option value=\"Lahore\" >Lahore</option>\r\n                                    <option value=\"Islamabad\">Islamabad</option>\r\n                                    <option value=\"Karachi\">Karachi</option>\r\n                                </Form.Control>\r\n                        </Form.Group>\r\n\r\n\r\n                            {/* <Form.Group controlId=\"Availability\">\r\n                                <Form.Label className=\"mr-sm-2\" htmlFor=\"inlineFormCustomSelect\" >\r\n                                    Availability\r\n                                </Form.Label>\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Sunday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Monday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Tuesday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Wednessday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Thrisday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Friday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Saturday\"\r\n                                    custom\r\n                                />\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId=\"gender\">\r\n                            <Form.Label className=\"mr-sm-2\"  >\r\n                                Gender\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                className=\"mr-sm-2\"\r\n                                name=\"gender\"\r\n                                onChange={handleOnChange}\r\n                            >\r\n                                <option value=\"\">Gender...</option>\r\n                                {/* <option value=\"\">Not Matter</option> */}\r\n                                <option value=\"Female\">Female</option>\r\n                                <option value=\"Male\">Male</option>\r\n                            </Form.Control>\r\n                            </Form.Group>\r\n\r\n                        </Form>\r\n\r\n              </div>\r\n      )\r\n    \r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\views\\register-view.js",["520","521"],"\r\nimport React, {useState} from \"react\";\r\nimport {\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup } from 'react-bootstrap';\r\n    \r\n    import Spinner from '../../components/common/Spinner';\r\nimport {useForm} from 'react-hook-form';\r\nimport { MessageBox, signUp } from \"../../services\"\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction RegisterView (props){\r\n    const { register, handleSubmit, errors, watch } = useForm(); // initialize the hook\r\n    const password = {}\r\n    password.current = watch(\"password\", \"\");\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n    const onSubmit = (data) => {\r\n        data.origion = window.location.origin\r\n        setIsLoading(true)\r\n        signUp(data)\r\n        .then((responseJson) => {\r\n            setIsLoading(false)\r\n            // Do something with the response\r\n            console.log('responseJson', responseJson)\r\n            if(responseJson.ok === false){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.status || 'Error')\r\n                // setModalMessage(`${responseJson.statusText}`)\r\n                \r\n                // setModalShow(true)\r\n                NotificationManager.error(responseJson.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n            if(responseJson.resultCode && responseJson.resultCode != 2001){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.error.code || 'Error')\r\n                // setModalMessage(`${responseJson.error.message}`)\r\n                // setModalShow(true)\r\n\r\n                NotificationManager.error(responseJson.message, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n          //  window.location.href ='/dashboard';\r\n          setisSuccessModal(true)\r\n          setModalHeading('Thanks')\r\n          setModalMessage(`Thanks for Signup. please verify you Email: ${data.email}`)          \r\n          setModalShow(true)\r\n\r\n          })\r\n          .catch((error) => {\r\n            setIsLoading(false)\r\n            console.trace(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n          });\r\n    };\r\n\r\n   \r\n    return (\r\n\r\n        <div id=\"register\" className=\"section\">\r\n             \r\n            {isLoading && <Spinner />}\r\n             <MessageBox\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n            />\r\n\r\n        <Container>\r\n            <Row>\r\n                <Col md={5} id=\"register-left-side\">\r\n                    <h1>\r\n                        Welcome To Foster!\r\n                    </h1>\r\n                    <p>\r\n                        Meet with your tutor. We provide best online tutoring service.\r\n                    </p>\r\n                    <Link className=\"btn-link\" to=\"/login\" size=\"lg\">Login</Link>{' '}\r\n                </Col>\r\n\r\n                <Col md={7}  id=\"register-signup\">\r\n                    <div>\r\n                        <h2>\r\n                            Foster\r\n                        </h2>\r\n                        <p>\r\n                            Sign up with your email.\r\n                        </p>\r\n                        <Row>\r\n                            <Col md={{span:10, offset:2}}>\r\n                        <Form  onSubmit={handleSubmit(onSubmit)}>\r\n                        \r\n                        <Form.Label htmlFor=\"confirmPassword\" srOnly>\r\n                            User Type\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" \r\n                                as=\"select\"\r\n                                className=\"mr-sm-2\"\r\n                                id=\"userType\"\r\n                                name=\"userType\"\r\n                                custom\r\n                                placeholder=\"user tyoe\" \r\n                               value={props.userType}\r\n                                ref={register({\r\n                                    required: \"Select User Type\"\r\n                                  })}\r\n                                 title=\"userType is required\"\r\n                                >\r\n                                <option value=\"\" />\r\n                                <option value=\"tutor\">Tutor</option>\r\n                                <option value=\"student\">Student</option>\r\n                                <option value=\"parents\">Parents</option>\r\n                            </FormControl>\r\n                          </InputGroup>\r\n                          {errors.userType && <p>{errors.userType.message}</p> }\r\n\r\n                        <Form.Label htmlFor=\"firstName\" srOnly>\r\n                              First Name \r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" id=\"firstName\"\r\n                               name=\"firstName\" \r\n                               value={props.firstName} \r\n                               placeholder=\"first name\" \r\n                               ref={register({required: 'first name is required'}) } \r\n                               title=\"first name is required\" \r\n                               />\r\n                              \r\n                          </InputGroup>\r\n                          {errors.firstName && <p>{errors.firstName.message}</p> }\r\n\r\n                          <Form.Label htmlFor=\"lastName\" srOnly>\r\n                              Last Name\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" id=\"lastName\" \r\n                              name=\"lastName\" \r\n                              value={props.lastName} \r\n                              placeholder=\"last name\" \r\n                              ref={register({required: 'Required Last Name'}) } \r\n                              title=\"last name is required\"\r\n                               />\r\n                          </InputGroup>\r\n                          {errors.lastName && <p>{errors.lastName.message}</p> }\r\n\r\n                          <Form.Label htmlFor=\"email\" srOnly>\r\n                              Email\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" type=\"email\"\r\n                               value={props.emailAddress} \r\n                               id=\"email\" \r\n                               name=\"email\" \r\n                               placeholder=\"Email\" \r\n                               ref={register({\r\n                                   required: 'required a valid email',\r\n                                   \r\n                                }) }\r\n                                title=\"email is required\" />\r\n                          </InputGroup>\r\n                          {errors.email && <p>{errors.email.message}</p> }\r\n\r\n                          <Form.Label htmlFor=\"userPassword\" srOnly>\r\n                              Password\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\"\r\n                               type=\"password\"\r\n                               id=\"userPassword\" \r\n                               name=\"userPassword\" \r\n                              value={props.userPassword} \r\n                              placeholder=\"Password\" \r\n                              ref={register({\r\n                                required: \"You must specify a password\",\r\n                                minLength: {\r\n                                  value: 4,\r\n                                  message: \"Password must have at least 4 characters\"\r\n                                }\r\n                              })}\r\n                               title=\"password is required\" \r\n                               />\r\n                          </InputGroup>\r\n                          {errors.userPassword && <p>{errors.userPassword.message}</p>}\r\n                          \r\n\r\n                          {/* <Form.Label htmlFor=\"confirmPassword\" srOnly>\r\n                              Confirm Password\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" type=\"password\" \r\n                              id=\"confirmPassword\" \r\n                              name=\"confirmPassword\" \r\n                              placeholder=\"Confirm Password\" \r\n                              ref={register({\r\n                                validate: value =>\r\n                                \r\n                                  value === password.password || \"The passwords do not match\"\r\n                              })}\r\n                               />\r\n                               {errors.password_repeat && <p>{errors.password_repeat.message}</p>}\r\n                          </InputGroup> */}\r\n                        \r\n\r\n\r\n\r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading}\r\n                            className=\"btn-dark\"   \r\n                            type=\"submit\"\r\n                             >\r\n                              \r\n                              Sign Up\r\n                          </Button>\r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                        </Row>\r\n                            \r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default RegisterView","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\views\\login-view.js",["522","523","524","525","526","527"],"\r\nimport React, { useState} from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup, } from 'react-bootstrap';\r\n    \r\nimport {useForm} from 'react-hook-form';\r\nimport { MessageBox, login } from \"../../services\"\r\nimport Spinner from '../../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction LoginView (props){\r\n    const { register, handleSubmit, errors, watch } = useForm();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n    const onSubmit = (data) => {\r\n        setIsLoading(true)\r\n        login(data)\r\n        .then((responseJson) => {\r\n            setIsLoading(false)\r\n            // Do something with the response\r\n            console.log('responseJson', responseJson)\r\n            if(responseJson.ok === false){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.status || 'Error')\r\n                // setModalMessage(`${responseJson.statusText}`)\r\n                \r\n                // setModalShow(true)\r\n                NotificationManager.error(responseJson.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n            if(responseJson.resultCode && responseJson.resultCode != 2001){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.code || 'Error')\r\n                // setModalMessage(`${responseJson.message}`)\r\n                // setModalShow(true)\r\n                NotificationManager.error(responseJson.message, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n          \r\n            localStorage.setItem('userId', responseJson.id);\r\n            localStorage.setItem('access_token', responseJson.access_token);\r\n            localStorage.setItem('userType', responseJson.userType);\r\n            localStorage.setItem('user', JSON.stringify(responseJson));\r\n            localStorage.setItem('userImage', responseJson.imageUrl)\r\n            window.location.href ='/dashboard/about';\r\n          // window.location.href = '/'\r\n        \r\n\r\n          })\r\n          .catch((error) => {\r\n            setIsLoading(false)\r\n            console.trace(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n          });\r\n    };\r\n\r\n\r\n    return (\r\n        <div id=\"register\" className=\"section\">\r\n             {isLoading && <Spinner />}\r\n               <MessageBox\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n            />\r\n        <Container>\r\n            <Row>\r\n                <Col md={5} id=\"register-left-side\">\r\n                    <h1>\r\n                        Welcome To Foster!\r\n                    </h1>\r\n                    <p>\r\n                        Meet with your tutor. We provide best online tutoring service.\r\n                    </p>\r\n                    <Link className=\"btn-link\" to=\"/register\" size=\"lg\">Register</Link>{' '}\r\n                </Col>\r\n\r\n                <Col md={7}  id=\"register-signup\">\r\n                    <div>\r\n                        <h2>\r\n                            Foster\r\n                        </h2>\r\n                        <p>\r\n                            Login with your email.\r\n                        </p>\r\n                        <Row>\r\n                            <Col md={{span:10, offset:2}}>\r\n                        <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        \r\n                        <Form.Label htmlFor=\"email\" srOnly>\r\n                              Email\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text>\r\n                              <i className=\"fa fa-user\"></i>\r\n                              </InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" \r\n                              id=\"email\" \r\n                              name=\"username\" \r\n                              placeholder=\"Email\"\r\n                              ref={register({required: 'Enter Your Email'})}\r\n                               />\r\n                          </InputGroup>\r\n                          \r\n                          <Form.Label htmlFor=\"password\" srOnly>\r\n                              Password\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\"\r\n                              type=\"password\"\r\n                               id=\"password\"\r\n                               name=\"password\"\r\n                                placeholder=\"Password\" \r\n                                ref={register({required: 'Enter Your Password'})}\r\n                                />\r\n                          </InputGroup>\r\n\r\n                          \r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading} \r\n                           className=\"btn-dark\"\r\n                           type=\"submit\"\r\n                           >\r\n                              \r\n                              Login\r\n                          </Button>\r\n                          <Link className=\"forgot-password\" to=\"/forgotpassword\" size=\"lg\">Forgot Password?</Link>{' '}\r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                        </Row>\r\n                            \r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default LoginView","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\TutorListInfo.js",["528","529","530","531","532","533"],"\r\nimport React from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col, \r\n    Form, InputGroup, FormControl,\r\n    Button, Badge\r\n  } from 'react-bootstrap';\r\nimport { constants } from \"../constants\";\r\nimport { RatingStars } from \"../components\";\r\n\r\n\r\nexport default function TutorListInfo (props) {\r\n    let teachingSubjects = []\r\n    if(props.tutor.teachingSubjects && props.tutor.teachingSubjects.length>0){\r\n        teachingSubjects = props.tutor.teachingSubjects.map(subject=> <Badge key={subject} style={{marginRight:'5px'}} variant=\"success\">{subject}</Badge>  )\r\n    }\r\n    \r\n  \r\n      return (\r\n          <div id=\"tutors-list-info\">\r\n              <Container>\r\n                  <Row>\r\n                      <Col md={12}  >\r\n                          <div>\r\n                              <Link to={`/profile/${props.tutor.id}`} style={{display:'flex',}}>\r\n                                  <Col md={8}>\r\n                              <div id=\"tutors-details-list\" style={{display:'flex'}}>\r\n                              <img src={constants.api_server() + props.tutor.imageUrl} alt=\"tutor image\" />\r\n                              <div>\r\n                              <h4>{props.tutor.firstName} {props.tutor.lastName}</h4>\r\n                              <h6>{props.tutor.tagLine}</h6>\r\n                              <p>\r\n                              {teachingSubjects}\r\n                              </p>\r\n                              <p>\r\n                              {props.tutor.greateTutorLine !== \"\" ? \r\n                                    props.tutor.greateTutorLine  :\r\n                             // props.tutor.greateTutorLine && \r\n                              'this teacher does not have a description of his profile.'\r\n                              }\r\n                              </p>\r\n                              {/* <p>\r\n                              {props.tutor.greateTutorLine}\r\n                              </p> */}\r\n                              </div>\r\n                          </div>\r\n\r\n                          </Col>\r\n                          <Col md={3} style={{float:'right'}}  >\r\n                          <div  id=\"tutor-scoring-board\" className=\"float-md-right\">\r\n                              <p><strong>Rs {props.tutor.fees}/{props.tutor.feesPer}</strong></p>\r\n                              \r\n                             <RatingStars.profileListingStars stars={props.tutor.stars}> </RatingStars.profileListingStars>\r\n                              <p className=\"Offers-margin\">\r\n                              Offers \r\n                              </p>\r\n                            \r\n                              {props.tutor.isOnlineTeaching &&\r\n                              <p className=\"Offers-margin\">\r\n                                  <strong> Online </strong> Classes \r\n                                 \r\n                              </p>}\r\n\r\n                              {props.tutor.isOfflineTeaching &&\r\n                              <p> <strong> In Person </strong> Classes\r\n                              </p>}\r\n                           </div>\r\n                              </Col>\r\n                           </Link>\r\n                         </div>\r\n                            \r\n                     \r\n                      </Col>\r\n                  </Row>\r\n              </Container>\r\n             \r\n           </div>\r\n      )\r\n    \r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\user.js",["534"],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\HttpClient.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\MessageBox.js",["535"],"\r\nimport React, {useState} from \"react\";\r\n\r\nimport { Modal, Button } from 'react-bootstrap';\r\nfunction MessageBox(props) {\r\n  //const [isSuccess, setisSuccess] = useState(true);\r\n \r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className={props.isSuccess ? 'message-box-success' : 'message-box-error'}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            <i className={props.isSuccess ? 'fa fa-thumbs-up' : 'fa fa-warning'}></i>\r\n             {props.heading}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p><strong>{props.message}</strong></p>\r\n          {/* <p>\r\n            {props.message}\r\n            hello bilal\r\n          </p> */}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button className=\"btn-dark\" onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n  \r\n\r\n  export default MessageBox","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\index.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\PageHistory.js",["536","537"],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\VerifyEmail.js",["538"],"\r\nimport React, {useState} from \"react\";\r\n\r\nimport { Container, Row, Col, Button, Spinner } from 'react-bootstrap';\r\nimport { verifyEmail, MessageBox } from \"../services\";\r\n\r\nfunction VerifyEmail (props){\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n\r\n    const emailVerificationClickHandler = ()=>{\r\n        \r\n        let data = {\r\n            phone: props.match.params.id,\r\n            emailCode: +props.match.params.code\r\n        }\r\n        setIsLoading(true)\r\n        verifyEmail(data)\r\n        .then(responseJson => {\r\n            setIsLoading(false)\r\n            if(responseJson.ok === false){\r\n                setModalHeading(responseJson.status || 'Error')\r\n                setModalMessage(`${responseJson.statusText}`)\r\n                setModalShow(true)\r\n                return\r\n            }\r\n\r\n            if(responseJson.resultCode && responseJson.resultCode !== '2001'){\r\n                setModalHeading(responseJson.code || 'Error')\r\n                setModalMessage(`${responseJson.message}`)\r\n                setModalShow(true)\r\n\r\n            \r\n                return\r\n            }\r\n\r\n            setisSuccessModal(true)\r\n            setModalHeading(responseJson.code || 'Success')\r\n            setModalMessage(`${responseJson.message}`)\r\n                setModalShow(true)\r\n                setTimeout(() => {\r\n                    window.location.href = '/login'\r\n                }, 1500);\r\n            \r\n        })\r\n        .catch( error => {\r\n            setIsLoading(true)\r\n            console.log(error)\r\n            setModalMessage(error.toString())\r\n                setModalShow(true)\r\n                return\r\n        })\r\n    }\r\n\r\n        return(\r\n            <div id=\"verify-email\">\r\n                <MessageBox \r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n                />\r\n                <Container>\r\n                {/* <Row>\r\n                    <Col md={{span: 12}}>\r\n                    <div className=\"custom-header\">\r\n                                <img src=\"/header_logo.png\" alt=\"foster logo\" />\r\n                                <h1>Foster</h1>\r\n                                    </div>\r\n                        </Col>\r\n                </Row> */}\r\n\r\n                    <Row>\r\n                    \r\n                        <Col md={{span: 8, offset:2}}>\r\n                            <div className=\"section\" >\r\n                               \r\n                               \r\n                                <h2 className=\"section-heading\">\r\n                                    Email Confirmation\r\n                                </h2>\r\n                                <p>\r\n                                    Hi You are all most ready to start with Foster.\r\n                                    Hope, You will enjoy your learning path.\r\n                                    </p>\r\n                                    <p>\r\n                                    <strong>Click </strong> below button to verify <strong> Email Address </strong>\r\n                                        </p>\r\n\r\n                                        <Button\r\n                                        size=\"lg\"\r\n                                        className=\"btn-dark\"\r\n                                        disabled={props.isLoading}\r\n                                        onClick={emailVerificationClickHandler}\r\n                                        > \r\n                                        {props.isLoading && <Spinner\r\n                                            as=\"span\"\r\n                                            animation=\"grow\"\r\n                                            size=\"sm\"\r\n                                            role=\"status\"\r\n                                            aria-hidden=\"true\"\r\n                                            />}\r\n                                        Verify Email Address\r\n                                        </Button>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default VerifyEmail","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\ResetPassword.js",["539","540","541","542"],"\r\nimport React, {useState} from \"react\";\r\n\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup,\r\n } from 'react-bootstrap';\r\n import {useForm} from 'react-hook-form';\r\nimport { passwordReset, MessageBox } from \"../services\";\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction ResetPassword (props){\r\n    const { register, handleSubmit, errors, watch } = useForm();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n\r\n    const onSubmit = (formData)=>{\r\n        \r\n        let data = {\r\n            customerId: props.match.params.customerId,\r\n            phone: props.match.params.customerId,\r\n            emailCode: +formData.code,\r\n            newPassword: formData.password,\r\n        }\r\n        setIsLoading(true)\r\n        passwordReset(data, {customerId: data.customerId})\r\n        .then(responseJson => {\r\n            setIsLoading(false)\r\n            if(responseJson.ok === false){\r\n                NotificationManager.error(responseJson.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n\r\n            if(responseJson.resultCode && responseJson.resultCode !== '2001'){\r\n                NotificationManager.error(responseJson.message, 'Error!', 2000);\r\n            \r\n                return\r\n            }\r\n\r\n            NotificationManager.success(responseJson.message, 'Success!', 2000);\r\n\r\n                setTimeout(() => {\r\n                    window.location.href = '/login'\r\n                }, 1500);\r\n            \r\n        })\r\n        .catch( error => {\r\n            setIsLoading(false)\r\n            console.log(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n                return\r\n        })\r\n    }\r\n\r\n        return(\r\n            <div id=\"verify-email\">\r\n                {isLoading && <Spinner />}\r\n                <MessageBox \r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n                />\r\n                <Container>\r\n                {/* <Row>\r\n                    <Col md={{span: 12}}>\r\n                    <div className=\"custom-header\">\r\n                                <img src=\"/header_logo.png\" alt=\"foster logo\" />\r\n                                <h1>Foster</h1>\r\n                                    </div>\r\n                        </Col>\r\n                </Row> */}\r\n\r\n                    <Row>\r\n                    \r\n                        <Col md={{span: 8, offset:2}}>\r\n                            <div className=\"section\" >\r\n                               \r\n                               \r\n                                <h2 className=\"section-heading\">\r\n                                    Reset Password\r\n                                </h2>\r\n                                    <p>\r\n                                    Enter code and new password, click below button to <strong> reset password </strong>\r\n                                        </p>\r\n                                        <Row>\r\n                                            <Col md={{span:8, offset:2}}>\r\n                                            \r\n                                            <Form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                                                <Form.Label htmlFor=\"code\" srOnly>\r\n                                                    Code\r\n                                                </Form.Label>\r\n                                                <InputGroup>\r\n                                                    <InputGroup.Prepend>\r\n                                                    <InputGroup.Text>\r\n                                                    <i className=\"fa fa-user\"></i>\r\n                                                    </InputGroup.Text>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <FormControl size=\"lg\" \r\n                                                    id=\"code\" \r\n                                                    name=\"code\" \r\n                                                    placeholder=\"Code\"\r\n                                                    type=\"number\"\r\n                                                    ref={register({required: 'Enter Your Code'})}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                                {errors.code && <p>{errors.code.message}</p>}\r\n\r\n                                                <Form.Label htmlFor=\"password\" srOnly>\r\n                                                Password\r\n                                                </Form.Label>\r\n                                                <InputGroup>\r\n                                                <InputGroup.Prepend>\r\n                                                <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                                                </InputGroup.Prepend>\r\n                                                <FormControl size=\"lg\"\r\n                                                type=\"password\"\r\n                                                id=\"password\"\r\n                                                name=\"password\"\r\n                                                    placeholder=\"Password\" \r\n                                                    ref={register({required: 'Enter Your Password'})}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                                {errors.password && <p>{errors.password.message}</p>}\r\n\r\n                                                <div className=\"sign-up-link\">\r\n                                                    <Button\r\n                                                        size=\"lg\"\r\n                                                        className=\"btn-dark\"\r\n                                                        disabled={isLoading}\r\n                                                        type=\"submit\"\r\n                                                        > \r\n                                                        Reset Password\r\n                                                    </Button>\r\n                                                 \r\n                                                 </div>\r\n\r\n                                                </Form>\r\n\r\n                                                \r\n                                            </Col>\r\n                                        </Row>\r\n                                       \r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default ResetPassword","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\services\\User.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\Dashboard\\Dashboard.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\PostList.js",["543","544","545"],"import React from \"react\";\r\n\r\nimport { Admin, Resource } from 'react-admin';\r\nimport simpleRestProvider from 'ra-data-simple-rest';\r\n\r\nconst PostList = ()=>{\r\n    return (\r\n        <div>\r\n            hello post\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSExpertise.js",["546","547","548","549"],"import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo } from \"../services\"\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\nfunction DSExpertise  (props){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [customer, setCustomer] = useState({});\r\n    let userId = localStorage.getItem('userId')\r\n\r\n\r\n    props = {\r\n        subjects: [\r\n            'Math',\r\n            'Bio',\r\n            'physics',\r\n            'urdu',\r\n            'english',\r\n            'Math1 II',\r\n            'Math2 II',\r\n            'Math3 II',\r\n            'Math4 II',\r\n            'Math5 II',\r\n            'Math6 II',\r\n            'Math7 II',\r\n            'Math8 II',\r\n            'Math9 II',\r\n        ],\r\n        grades: [\r\n            'Nursery',\r\n            'KG',\r\n            'Class 1-5',\r\n            'Class 6-8',\r\n            'Class 9-10',\r\n            'O Levels',\r\n            'Fsc',\r\n        ]\r\n    };\r\n\r\n    const onSubjectSelect = (selectedList, selectedItem) =>{\r\n       // customer.teachingSubjects.push(selectedItem.title) \r\n        customer.teachingSubjects = selectedList;\r\n        console.log('customer.teachingSubjects', customer.teachingSubjects)     \r\n    }\r\n    \r\n   const onSubjectRemove =(selectedList, removedItem)=> {\r\n        \r\n        var index = customer.teachingSubjects.indexOf(removedItem.title);\r\n        if (index !== -1) {\r\n            customer.teachingSubjects.splice(index, 1);\r\n        }\r\n    }\r\n   \r\n    const onGradeSelect = (selectedList, selectedItem) =>{\r\n        //customer.teachingGrades.push(selectedItem.title)\r\n        customer.teachingGrades = selectedList\r\n        console.log('customer.teachingGrades', customer.teachingGrades)         \r\n    }\r\n    \r\n   const onGradeRemove =(selectedList, removedItem)=> {\r\n        \r\n        var index = customer.teachingGrades.indexOf(removedItem.title);\r\n        if (index !== -1) {\r\n            customer.teachingGrades.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    const onSubmit = () => {\r\n     \r\n    let postData = {...customer};\r\n    postData.teachingSubjects = customer.teachingSubjects\r\n    postData.teachingGrades = customer.teachingGrades\r\n\r\n    setIsLoading(true)\r\n    updateCustomerInfo(postData, {customerId: userId})\r\n    .then(result =>{\r\n        setIsLoading(false)\r\n        //console.log(result)\r\n        NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n    })\r\n    .catch(error=>{\r\n        setIsLoading(false)\r\n        console.log(error)\r\n        NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n    })\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n            // get user and set form fields\r\n            setIsLoading(true)\r\n            getCustomerById(userId).then(customer => {\r\n                setIsLoading(false)\r\n                \r\n                setCustomer(customer);\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n            })\r\n    }, []);\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n        {isLoading && <Spinner />}\r\n\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:12, offset: 4}}>\r\n                <h2 className=\"section-heading\">Subjects & Grades</h2>\r\n                {/* </Col>\r\n                </Row>\r\n                <Row> */}\r\n                <Form >\r\n                    <Form.Row >\r\n                        <Multiselect \r\n                        options={props.subjects} // Options to display in the dropdown\r\n                        selectedValues={customer.teachingSubjects} // Preselected value to persist in dropdown\r\n                        placeholder=\"subjects\"\r\n                        //displayValue=\"title\" \r\n                        isObject={false}\r\n                        style={{ searchBox: { border: \"none\", \"border-bottom\": \"1px solid blue\", \"border-radius\": \"0px\" } } }\r\n                        onSelect={onSubjectSelect} // Function will trigger on select event\r\n                        onRemove={onSubjectRemove} // Function will trigger on remove event\r\n                        />\r\n                       \r\n                    </Form.Row>\r\n\r\n\r\n                    <Form.Row>\r\n                        \r\n                    <Col md={8}>\r\n                        <Multiselect \r\n                        options={props.grades} // Options to display in the dropdown\r\n                        selectedValues={customer.teachingGrades} // Preselected value to persist in dropdown\r\n                        placeholder=\"grades\"\r\n                       // displayValue=\"title\" \r\n                       isObject={false}\r\n                        style={{ searchBox: { border: \"none\", \"border-bottom\": \"1px solid blue\", \"border-radius\": \"0px\" } } }\r\n                        onSelect={onGradeSelect} // Function will trigger on select event\r\n                        onRemove={onGradeRemove} // Function will trigger on remove event\r\n                        />\r\n                        </Col>\r\n                        \r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                    <Button as={Col}  className=\"btn-dark\"\r\n                     disabled={isLoading}\r\n                     size=\"sm\"\r\n                     md={{span:8, offset:3}}\r\n                     onClick={handleSubmit(onSubmit)}\r\n                     >\r\n                       Update Expertise\r\n                    </Button>\r\n                    </Form.Row>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSExpertise","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSEducation.js",["550"],"import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction DSEducation  (props){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [customer, setCustomer] = useState({});\r\n    //const [education, setEducation] = useState({});\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    \r\n    const onSubmit = (education) => {\r\n       \r\n    //let postData = {...customer, ...data};\r\n   // customer.education && customer.education.length > 0 ?customer.education.push(education)\r\n   customer.education = []\r\n   customer.education[0] = education\r\n   setIsLoading(true)\r\n    updateCustomerInfo(customer, {customerId: userId})\r\n    .then(result =>{\r\n        setIsLoading(false)\r\n       // console.log(result)\r\n        NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n    })\r\n    .catch(error=>{\r\n        setIsLoading(false)\r\n        console.log(error)\r\n        NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n    })\r\n    }\r\n\r\n    useEffect(() => {\r\n            // get user and set form fields\r\n            setIsLoading(true)\r\n            getCustomerById(userId).then(customer => {\r\n                setIsLoading(false)\r\n                let education = customer.education ? customer.education[0]: {}\r\n                const fields = ['institute',\r\n                 'degree',\r\n                 'passingYear',\r\n                ];\r\n                fields.forEach(field => setValue(field, education[field]));\r\n                setCustomer(customer);\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, []);\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n            {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:12, offset:0}}>\r\n                <h2 className=\"section-heading\">Your Last Education Degree</h2>\r\n                <Form >\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"institute\">\r\n                        <Form.Label>Institute Name</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        placeholder=\"institute\" \r\n                        name=\"institute\"\r\n                        value={props.institute}\r\n                        ref={register({required: 'institute is required!'})}\r\n                        />\r\n                        </Form.Group>\r\n                        \r\n\r\n                        <Form.Group as={Col} controlId=\"degree\">\r\n                        <Form.Label>Degree Title</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        placeholder=\"degree\" \r\n                        name=\"degree\"\r\n                        value={props.degree}\r\n                        ref={register({required:'degree is required'})}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"passingYear\">\r\n                        <Form.Label>Passing Year</Form.Label>\r\n                        <Form.Control \r\n                        type=\"number\"\r\n                        placeholder=\"passingYear\"\r\n                        name=\"passingYear\"\r\n                        value={props.passingYear}\r\n                        ref={register({required:'passing year is required'})}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n                    {errors.firstName && <p>{errors.firstName.message}</p> }\r\n                    {errors.lastName && <p>{errors.lastName.message}</p> }\r\n                    {errors.passingYear && <p>{errors.passingYear.message}</p> }\r\n\r\n\r\n                    {/* <Form.Group id=\"formGridCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group> */}\r\n\r\n                    <Form.Row>\r\n                    <Button as={Col}  className=\"btn-dark\"\r\n                     \r\n                     size=\"sm\"\r\n                     md={{span:8, offset:2}}\r\n                     onClick={handleSubmit(onSubmit)}\r\n                     >\r\n                        Update Education\r\n                    </Button>\r\n                    </Form.Row>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSEducation","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSMediums.js",["551","552","553","554"],"import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction DSMediums  (props){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [customer, setCustomer] = useState({});\r\n    const [isOfflineTeaching, setIsOfflineTeaching] = useState(false);\r\n    const [teachingCity, setTeachingCity] = useState(false);\r\n    const [teachingArea, setTeachingArea] = useState(false);\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    const onSubmit = (data) => {\r\n     \r\n       let postData = {...customer, ...data};\r\n       setIsLoading(true)\r\n    updateCustomerInfo(postData, {customerId: userId})\r\n    .then(result =>{\r\n        setIsLoading(false)\r\n        console.log(result)\r\n        NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n    })\r\n    .catch(error=>{\r\n        setIsLoading(false)\r\n        console.log(error)\r\n        NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n    })\r\n    }\r\n\r\n    useEffect(() => {\r\n            // get user and set form fields\r\n            setIsLoading(true)\r\n            getCustomerById(userId).then(customer => {\r\n                setIsLoading(false)\r\n                const fields = [\r\n                 'isOnlineTeaching',\r\n                 'isOfflineTeaching',\r\n                 'teachingCity',\r\n                 'teachingArea',\r\n                 \r\n                ];\r\n                fields.forEach(field => setValue(field, customer[field]));\r\n                setCustomer(customer);\r\n                setIsOfflineTeaching(customer.isOfflineTeaching)\r\n                setTeachingCity(customer.teachingCity)\r\n                setTeachingArea(customer.teachingArea)\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, []);\r\n\r\n    \r\n\r\n      return (\r\n        <div className=\"section\">\r\n        {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:12, offset:4}}>\r\n                <h2 className=\"section-heading\">Teaching Mediums</h2>\r\n                <Form >\r\n                    <Form.Row>\r\n                      <Col md={8}>\r\n                      <Form.Group id=\"isOnlineTeaching\">\r\n                        <Form.Check type=\"checkbox\" \r\n                        label=\"I can teach online\" \r\n                        name=\"isOnlineTeaching\"\r\n                        ref={register()}\r\n\r\n                        />\r\n                         </Form.Group>\r\n                      </Col>\r\n                    \r\n                    <Col md={8}>\r\n                    <Form.Group id=\"isOfflineTeaching\">\r\n                        <Form.Check type=\"checkbox\" \r\n                        label=\"I can teach in person\" \r\n                        name=\"isOfflineTeaching\"\r\n                        value={props.isOfflineTeaching}\r\n                        ref={register()}\r\n                        onChange={()=>{setIsOfflineTeaching(!isOfflineTeaching)}}\r\n                        />\r\n                    </Form.Group>\r\n                    </Col>\r\n                                         \r\n                    </Form.Row>\r\n\r\n                \r\n                    \r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"teachingCity\">\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control as=\"select\" \r\n                       \r\n                        name=\"teachingCity\"\r\n                        value={props.teachingCity}\r\n                        ref={register()}\r\n                        >\r\n                            <option  />\r\n                            <option value=\"Lahore\" >Lahore</option>\r\n                            <option value=\"Islamabad\">Islamabad</option>\r\n                            <option value=\"Karachi\">Karachi</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    \r\n\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"teachingArea\">\r\n                        <Form.Label>Teaching Area</Form.Label>\r\n                        <Form.Control\r\n                       as=\"textarea\"\r\n                        name=\"teachingArea\"\r\n                        value={props.teachingArea}\r\n                        ref={register()}\r\n                        >\r\n                         \r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                    <Button as={Col}  className=\"btn-dark\"\r\n                     disabled={isLoading}\r\n                     size=\"sm\"\r\n                     md={{span:8, offset:2}}\r\n                     onClick={handleSubmit(onSubmit)}\r\n                     >\r\n                        Update Mediums\r\n                    </Button>\r\n                    </Form.Row>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSMediums","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\ViewProfile.js",["555","556","557","558","559","560","561","562","563","564","565","566","567"],"\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col, Badge,\r\n     Button, Card\r\n     } from 'react-bootstrap';\r\n\r\n\r\n\r\nimport { getCustomerById, sendFeedback, getProfilerReviewsById } from \"../services\";\r\nimport { constants } from \"../constants\";\r\nimport { RatingStars } from \"../components\";\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nexport default function ViewProfile (props){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [feedbackMessage, setfeedbackMessage] = useState('');\r\n    const [feedbackstars, setfeedbackstars] = useState(5);\r\n    const [sharefeedback, setsharefeedback] = useState(false);\r\n    const [feedbackreason, setfeedbackreason] = useState('');\r\n    const [profilerId, setprofilerId] = useState('');\r\n    const [profileRating, setprofileRating] = useState('');\r\n    const [totalRating, settotalRating] = useState('');\r\n    const [tutor, settutor] = useState({});\r\n    const [reviews, setreviews] = useState({});\r\n   \r\n\r\n    if(!props.match || !props.match.params){\r\n        window.location.href = \"/\"\r\n    }\r\n    let userId = '';\r\n    let user = {};\r\n    try{\r\n        userId = localStorage.getItem('userId')\r\n        user = localStorage.getItem('user')\r\n        user = JSON.parse(user)\r\n    }catch(e){\r\n        console.log(e)\r\n    }\r\n   \r\n\r\n\r\n   useEffect(() => {\r\n    setprofilerId(props.match.params.id)\r\n    getCustomerById(props.match.params.id)\r\n    .then(result=>{\r\n       // console.log(result)\r\n        settutor(result)\r\n        settutor(prevState =>{\r\n            return {\r\n                ...prevState,\r\n                teachingSubjects: result.teachingSubjects || [],\r\n                teachingGrades: result.teachingGrades || [],\r\n                education: result.education || []\r\n            }\r\n        })\r\n\r\n        if(result.stars){\r\n            setprofileRating(result.stars)\r\n        }\r\n       \r\n        settotalRating(result.totalRatings) \r\n        loadReviews(props.match.params.id)\r\n\r\n\r\n    }).catch(error=>{\r\n        console.log(error)\r\n    })\r\n      \r\n   }, []);\r\n\r\n\r\n   function loadReviews(profilerId) {\r\n        getProfilerReviewsById({toId :{like:profilerId}})\r\n        .then(result=>{\r\n            setreviews(result)\r\n            \r\n        })\r\n        .catch(result=>{\r\n            console.log(result)\r\n        })\r\n   }\r\n\r\n    const submitRating = ()=>{\r\n        if(profilerId === userId){\r\n            return NotificationManager.error('Not allowed to self rating.', 'Error!', 2000);\r\n        }\r\n        if(!feedbackMessage || !feedbackreason || feedbackstars === 0){\r\n            return NotificationManager.error('Required More Info.', 'Error!', 2000);\r\n\r\n        }\r\n        \r\n        let data = {\r\n            message:feedbackMessage,\r\n            stars:feedbackstars,\r\n            byId: userId,\r\n            fullname: `${user.firstName}  ${user.lastName}`,\r\n            toId: profilerId,\r\n            feedbackreason: feedbackreason,\r\n        }\r\n        sendFeedback(data)\r\n        .then(result=>{\r\n            if(result.ok === false){\r\n                NotificationManager.error(result.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n\r\n            NotificationManager.success(result.message || 'Successfully Created!', 'Success!', 2000);\r\n            setfeedbackreason('')\r\n            setfeedbackMessage('')\r\n        })\r\n        .catch(result=>{\r\n            console.log(result)\r\n            NotificationManager.error(result.toString(), 'Error!', 2000);\r\n\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{marginTop:'50px', marginBottom:'50px'}} className=\"section\">\r\n            {isLoading && <Spinner />}\r\n            <Container>\r\n                <Row>\r\n                    <Col md={{span: 8}}>\r\n                    <div style={{display:'flex'}}>\r\n                    <img className=\"profile-img\" src={constants.api_server() + tutor.imageUrl || \"/images/tutor2-280x300.jpg\"}alt=\"user profile image\"></img>\r\n                        <span style={{marginLeft:'20px'}} className=\"user-profile-title\">\r\n                            <h2>{tutor.firstName} {tutor.lastName}</h2>\r\n                            <p><strong>\r\n                                {tutor.tagLine}\r\n                                </strong></p>\r\n                                {profileRating &&\r\n                                <RatingStars.profileListingStars stars={parseInt(profileRating)}> </RatingStars.profileListingStars>\r\n                                }\r\n                                {!profileRating &&\r\n                                <RatingStars.profileListingStars stars={0}> </RatingStars.profileListingStars>\r\n                                }\r\n                              \r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"bio\">\r\n                        <h4>About {tutor.lastName}</h4>\r\n                        <hr></hr>\r\n                                              \r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>Bio</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                            <p>\r\n                                {tutor.greateTutorLine}\r\n                                </p>\r\n                                <p>\r\n                                {tutor.teachingExperienceLine}\r\n                                </p>\r\n                            </Col>\r\n\r\n                        </span>\r\n                                                \r\n\r\n                    </div>\r\n\r\n                    <div className=\"education\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>Education</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                               \r\n                            { tutor.education &&\r\n                            tutor.education.map((edu, index)=>  <span key={index}>\r\n                                <p>{edu.institute}</p>\r\n                                <p>{edu.degree}</p>\r\n                                <p>Passing year <strong>{edu.passingYear}</strong></p>\r\n                                </span>)\r\n                            }\r\n                            {/* <p >\r\n                                {tutor.education.institute}\r\n                            </p>\r\n                            <p >\r\n                                {tutor.education.institute}\r\n                            </p> */}\r\n                            </Col>\r\n                        </span>\r\n\r\n                    </div>\r\n                    \r\n                    <div className=\"policies\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                                <p>Policies</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                            <p>Teaching Rate: <strong>Rs{tutor.fees}</strong>/{tutor.feesPer}</p>\r\n                            </Col>\r\n                        </span>\r\n                       \r\n                    </div>\r\n\r\n                    <div className=\"schedule\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>Schedule</p> \r\n                            </Col>\r\n                            <Col md={10}>\r\n                            {tutor.isOnlineTeaching && <p>Teaches Online</p> }\r\n                            {tutor.isOfflineTeaching && <p>Teaches In person</p> }\r\n                            </Col>\r\n                        </span>\r\n                       \r\n                    </div>\r\n\r\n                    <div className=\"subjects\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>Subjects</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                                \r\n                            {/* {teachingSubjects} */}\r\n                            { tutor.teachingSubjects &&\r\n                            tutor.teachingSubjects.map(subject=> <Badge key={subject} style={{marginRight:'5px'}} variant=\"success\">{subject}</Badge>  ) }\r\n                            \r\n                            </Col>\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"grades\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>Teaching Grades</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                                <p>\r\n                                { tutor.teachingGrades &&\r\n                                tutor.teachingGrades.map(grade=> <Badge key={grade} style={{marginRight:'5px'}} variant=\"success\">{grade}</Badge>  )}\r\n                                </p>\r\n                            </Col>\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"ratings\">\r\n                        <h4>Ratting & Reviews</h4>\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>ratings</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                            \r\n                              <div style={{display:'flex'}}>\r\n                                  {profileRating &&\r\n                                    \r\n                                   <RatingStars.profileView stars={parseInt(profileRating)} > </RatingStars.profileView >\r\n                                  }\r\n                                  { !profileRating &&\r\n                                    <RatingStars.profileView stars={0} > </RatingStars.profileView >\r\n\r\n                                  }\r\n                              \r\n                              \r\n                              <strong> { `${profileRating} (${totalRating} ratings)` } </strong>\r\n                              \r\n                              </div>\r\n                             {!sharefeedback && userId && <button className=\"btn float-right\"  onClick={()=>setsharefeedback(true)}>Share Your Feedback </button>}\r\n                              \r\n                             {sharefeedback && <button className=\"btn float-right\"  onClick={()=>setsharefeedback(false)}>Hide Feedback </button> }\r\n                              {/* <p><strong>5 stars</strong> ================================ (100)</p>\r\n                              <p><strong>4 stars</strong> ================================ (80)</p>\r\n                              <p><strong>3 stars</strong> ================================ (80)</p>\r\n                              <p><strong>2 stars</strong> ================================ (80)</p>\r\n                              <p><strong>1 stars</strong> ================================ (80)</p> */}\r\n                            </Col>\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    {sharefeedback && \r\n                    \r\n                    <div className=\"ratings\">\r\n                        <h4>Share Your Feedback </h4>\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            {/* <p>Feed Back</p> */}\r\n                            </Col>\r\n                            <Col md={10}>\r\n                            <RatingStars>\r\n                              <RatingStars.rating\r\n                                onChange={value=>{setfeedbackstars(value) }}\r\n                               >\r\n                             </RatingStars.rating >\r\n                             \r\n                             {/* {feedbackstars <= 3 ?  */}\r\n                             <RatingStars.feedbackReasons\r\n                                className=\"feedback-select\"\r\n                                label=\"Choose Your Reason\"\r\n                                stars={feedbackstars}\r\n                                onChange={(event)=>setfeedbackreason(event.target.value)}\r\n\r\n                             >\r\n                                 \r\n                                 </RatingStars.feedbackReasons>\r\n                                 {/* : null\r\n                             } */}\r\n                              \r\n                              \r\n                              <RatingStars.messageBox \r\n                              placeholder=\"Enter Your Feedback\"\r\n                              value={feedbackMessage}\r\n                              rows={4}\r\n                              cols={50}\r\n                              onChange={event => {setfeedbackMessage(event.target.value)}}\r\n                              > \r\n                              </RatingStars.messageBox >\r\n\r\n                              <RatingStars.ratingSubmit\r\n                              className=\"btn-dark\" \r\n                              style={{margin:'0px auto'}}\r\n                              onClick={submitRating}\r\n\r\n                              >{\"Feedback\"}\r\n                                  </RatingStars.ratingSubmit>\r\n\r\n                              </RatingStars>\r\n                              \r\n                            </Col>\r\n                        </span>\r\n\r\n                    </div>\r\n                    \r\n                    }\r\n\r\n\r\n                    <div className=\"reviews\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <p>Reviews</p>\r\n                            <span style={{marginLeft:'100px'}}>\r\n                            {reviews && reviews.length > 0 ?\r\n                            reviews.map((item, index)=>{\r\n                                return <span key={index}>\r\n                                        <p><strong>{item.feedbackreason}</strong></p>\r\n                                        <em>Given Stars {item.stars}</em>\r\n                                        <p>\r\n                                        {item.message}\r\n                                        </p>\r\n                                        <p> <em><a href={`/profile/${item.byId}`}>{item.fullname}</a></em></p>\r\n                                       </span>\r\n                            })\r\n                           \r\n\r\n                            :\r\n                            null    \r\n                            }\r\n                            </span>\r\n\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    </Col>\r\n                        <Col md={{span: 4}}>\r\n                        <Card style={{ width: '18rem', marginTop:'70px' }} className=\"sticky\">\r\n                        <Card.Header style={{background:'#e74c3c', color:'#fff'}}>Fees Rs{tutor.fees}/{tutor.feesPer}</Card.Header>\r\n                            <Card.Body>\r\n                            \r\n                                <Card.Subtitle className=\"mb-2 text-muted\"></Card.Subtitle>\r\n                                \r\n                                <Card.Text>No subscriptions or upfront payments</Card.Text>\r\n                                <Card.Text>Only pay for the time you need </Card.Text>\r\n                                <Card.Text>Find the right fit, or your first hour is free</Card.Text>\r\n                                \r\n                                <Link\r\n                                to={`/request/to/${props.match.params.id}`}\r\n                                className=\"btn-dark\"\r\n                                style={{marginLeft:'10%',}}\r\n                                >\r\n                                    Connect to {tutor.lastName}\r\n                                </Link> \r\n                                {/* <Card.Link href=\"#\">Card Link</Card.Link>\r\n                                <Card.Link href=\"#\">Another Link</Card.Link> */}\r\n                            </Card.Body>\r\n                            <Card.Footer  className=\"text-muted\">Response Time: 24 hours</Card.Footer>\r\n                        </Card>\r\n                            \r\n                        </Col>\r\n                </Row>\r\n            </Container>\r\n           \r\n        </div>\r\n    )\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\common\\Spinner.js",["568"],"import React from 'react';\r\nimport spinner from './ecd6bc09da634e4e2efa16b571618a22.gif';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: '200px', margin: 'auto', display: 'block',\r\n         opacity: '.5',\r\n          position: 'fixed', top:'50%', bottom:'50%', left:'25%', right:'25%',\r\n           height: '200px', zIndex:'9999' }}\r\n        alt=\"Loading...\"\r\n      />\r\n    </div>\r\n  );\r\n};","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\views\\ContactUs.js",["569","570","571","572","573"],"\r\nimport React, {useState} from \"react\";\r\nimport {\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup } from 'react-bootstrap';\r\n    \r\nimport Spinner from '../../components/common/Spinner';\r\nimport {useForm} from 'react-hook-form';\r\nimport { MessageBox, sendContactUs } from \"../../services\"\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction ContactUs (props){\r\n    const { register, handleSubmit, errors, watch } = useForm(); // initialize the hook\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        setIsLoading(true)\r\n        sendContactUs(data)\r\n        .then((responseJson) => {\r\n            setIsLoading(false)\r\n            // Do something with the response\r\n            console.log('responseJson', responseJson)\r\n            if(responseJson.ok === false){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.status || 'Error')\r\n                // setModalMessage(`${responseJson.statusText}`)\r\n                \r\n                // setModalShow(true)\r\n                NotificationManager.error(responseJson.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n            if(responseJson.resultCode && responseJson.resultCode != 2001){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.error.code || 'Error')\r\n                // setModalMessage(`${responseJson.error.message}`)\r\n                // setModalShow(true)\r\n\r\n                NotificationManager.error(responseJson.message, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n          //  window.location.href ='/dashboard';\r\n          setisSuccessModal(true)\r\n          setModalHeading('Thank You')\r\n          setModalMessage(`Our team will contact you soon.`)          \r\n          setModalShow(true)\r\n\r\n          })\r\n          .catch((error) => {\r\n            setIsLoading(false)\r\n            console.trace(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n          });\r\n    };\r\n\r\n   \r\n    return (\r\n\r\n        <div id=\"register\" className=\"section\">\r\n             \r\n            {isLoading && <Spinner />}\r\n             <MessageBox\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n            />\r\n\r\n        <Container>\r\n            <Row>\r\n                <Col md={5} id=\"contact-us-left-side\">\r\n                    <h1>\r\n                        Contact Information\r\n                    </h1>\r\n                    <div id=\"contact-us-info\">\r\n                            <p>\r\n                               <strong>Address: </strong> \r\n                               {/* <i className=\"fa fa-user\"></i> */}\r\n                                Evacuee Trust Complex.\r\n                            </p>\r\n\r\n                            <p>\r\n                            <strong>Email: </strong> \r\n                                <i className=\"fa fa-envelope\"></i>\r\n                                info@thefoster.life\r\n                            </p>\r\n                            <p>\r\n                            <strong>Phone: </strong> \r\n                                <i className=\"fa fa-phone\"></i> \r\n                                +92-301-5339780\r\n                            </p>\r\n\r\n                        </div>\r\n                        <div id=\"contact-us-social-links\"  style={{float:'right', marginRight:'25px'}} >\r\n                            <a target=\"_blank\" href=\"https://www.facebook.com/The-Foster-112666314196501/?view_public_for=112666314196501\">\r\n                                <i className=\"fa fa-facebook\"></i>\r\n                                </a>\r\n                                \r\n                                {/* <a target=\"_blank\" href=\"\">\r\n                                <i className=\"fa fa-twitter\"></i>\r\n                                </a> */}\r\n                        </div>\r\n                </Col>\r\n\r\n                <Col md={7}  id=\"register-signup\">\r\n                    <div>\r\n                        <h2>\r\n                            Send, Your Query\r\n                        </h2>\r\n                        <p>\r\n                           We will get back to you in short. \r\n                        </p>\r\n                        <Row>\r\n                            <Col md={{span:10, offset:2}}>\r\n                        <Form  onSubmit={handleSubmit(onSubmit)}>\r\n                        \r\n                        \r\n                        <Form.Label htmlFor=\"fullname\" >\r\n                            Full Name \r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\"\r\n                               name=\"fullname\" \r\n                               placeholder=\"full name\" \r\n                               ref={register({required: 'full name is required'}) } \r\n                               \r\n                               />\r\n                              \r\n                          </InputGroup>\r\n                          {errors.fullname && <p>{errors.fullname.message}</p> }\r\n\r\n                          \r\n                          <Form.Label htmlFor=\"phone\" >\r\n                              Phone or Email\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              type=\"text\"\r\n                               \r\n                               name=\"phone\" \r\n                               placeholder=\"phone or email\" \r\n                               ref={register({\r\n                                   required: 'required a valid phone or email',\r\n                                   \r\n                                }) }\r\n                               \r\n                                />\r\n                          </InputGroup>\r\n                          {errors.phone && <p>{errors.phone.message}</p> }\r\n\r\n\r\n                          <Form.Label htmlFor=\"message\" >\r\n                            Message \r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              {/* <InputGroup.Prepend>\r\n                             \r\n                              </InputGroup.Prepend> */}\r\n                              <FormControl size=\"lg\"\r\n                               name=\"message\"  \r\n                               placeholder=\"message\" \r\n                               ref={register({required: 'message is required'}) } \r\n                               as=\"textarea\"\r\n                               />\r\n                              \r\n                          </InputGroup>\r\n                          {errors.message && <p>{errors.message.message}</p> }\r\n\r\n\r\n                         \r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading}\r\n                            className=\"btn-dark\"   \r\n                            type=\"submit\"\r\n                             >\r\n                              \r\n                              Send Request\r\n                          </Button>\r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                        </Row>\r\n                            \r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ContactUs","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\webrtc\\App.js",["574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633"],"import React, { useEffect, useState, useRef, Suspense } from 'react';\r\nimport io from \"socket.io-client\";\r\nimport './index.css';\r\nimport Peer from \"simple-peer\";\r\nimport Rodal from 'rodal'\r\nimport {Howl} from 'howler'\r\n\r\nimport Navigation from './Components/Navigation/Navigation'\r\nimport Footer from './Components/Footer/Footer'\r\nimport { constants } from \"../constants\";\r\nimport  'rodal/lib/rodal.css'\r\n\r\nimport camera from './Icons/camera.svg'\r\nimport { ReactComponent as YourSvg } from './Icons/camera.svg'\r\nimport camerastop from './Icons/camera-stop.svg'\r\nimport microphone from './Icons/microphone.svg'\r\nimport microphonestop from './Icons/microphone-stop.svg'\r\nimport share from './Icons/share.svg'\r\nimport hangup from './Icons/hang-up.svg'\r\nimport fullscreen from './Icons/fullscreen.svg'\r\nimport minimize from './Icons/minimize.svg'\r\nimport ringtone from './Sounds/ringtone.mp3'\r\n\r\nconst Watermark = React.lazy(()=>import('./Components/Watermark/Watermark'))\r\nconst ringtoneSound = new Howl({\r\n  src: [ringtone],\r\n  loop: true,\r\n  preload: true\r\n})\r\n\r\n\r\n\r\n\r\nfunction WebrtcApp(props) {\r\n  const [yourID, setYourID] = useState(\"\");\r\n  const [users, setUsers] = useState({});\r\n  const [stream, setStream] = useState();\r\n  const [receivingCall, setReceivingCall] = useState(false);\r\n  const [caller, setCaller] = useState(\"\");\r\n  const [callingFriend, setCallingFriend] = useState(false);\r\n  const [callerSignal, setCallerSignal] = useState();\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [callRejected, setCallRejected] = useState(false);\r\n  const [receiverID, setReceiverID] = useState('')\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [modalMessage, setModalMessage] = useState('')\r\n  const [audioMuted, setAudioMuted] = useState(false)\r\n  const [videoMuted, setVideoMuted] = useState(false)\r\n  const [isfullscreen, setFullscreen] = useState(false)\r\n  const [copied, setCopied] = useState(false)\r\n  const [linkcopied, setLinkCopied] = useState(false)\r\n  const [callingLink, setcallingLink] = useState('')\r\n  const [disableusernameinputfield, setdisableusernameinputfield] = useState(false);\r\n  \r\n  const userVideo = useRef();\r\n  const partnerVideo = useRef();\r\n  const socket = useRef();\r\n  const myPeer=useRef();\r\n\r\n  let landingHTML=<>\r\n    {/* <Navigation/> */}\r\n    <main style={{opasity:'100'}}>\r\n      <div className=\"u-margin-top-xxlarge u-margin-bottom-xxlarge\">\r\n    <div className=\"o-wrapper-l\">\r\n        <div className=\"hero flex flex-column\">\r\n            <div>\r\n                {/* <div className=\"welcomeText\">\r\n                    Welcome To Online Session\r\n                </div> */}\r\n                <div className=\"descriptionText\">\r\n                    Start your session here.\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"actionText\">Share your id: \r\n                 <span className={copied?\"username highlight copied\":\"username highlight\"} onClick={()=>{showCopiedMessage()}}>{yourID}</span> ?  OR</div>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"actionText\">Share your call link: \r\n                 <span className={linkcopied?\"username highlight copied\":\"username highlight\"} onClick={()=>{showLinkCopiedMessage()}}>{callingLink}</span> ?</div>\r\n            </div>\r\n\r\n\r\n            <div className=\"callBox flex\">\r\n                <input type=\"text\"  placeholder=\"Call Reveiver ID\" value={receiverID} onChange={e => setReceiverID(e.target.value)} className=\"form-input\"/>\r\n                {/* {yourID === receiverID ?\r\n                  <button onClick={() => {} } className=\"primaryButton\">Join</button>\r\n                  :\r\n                  <button onClick={() => callPeer(receiverID.toLowerCase().trim())} className=\"primaryButton\">Call</button>  \r\n                } */}\r\n                <button onClick={() => callPeer(receiverID.toLowerCase().trim())} className=\"primaryButton\">Call</button>  \r\n\r\n                {/* <button onClick={() => callPeer(receiverID.toLowerCase().trim())} className=\"primaryButton\">Call</button> */}\r\n            </div>\r\n            {receiverID &&\r\n            \r\n            <div>\r\n                <div className=\"actionText\">Call receiver id: \r\n                 <span className=\"username highlight\" >{receiverID}</span></div>\r\n            </div>\r\n            }\r\n            {/* <div>\r\n                To call your friend, ask them to open it in their browser. <br/>\r\n                Send your username (<span className=\"username\">{yourID}</span>) and wait for their call <span style={{fontWeight: 600}}>OR</span> enter their username and hit call!\r\n            </div> */}\r\n        </div>\r\n    </div>\r\n    </div>\r\n    </main>\r\n    {/* <Footer/> */}\r\n  </>\r\n\r\n  useEffect(() => {\r\n    if(props && props.match && props.match.params){\r\n      setReceiverID(props.match.params.receiverId)\r\n      \r\n      setdisableusernameinputfield(true)\r\n    }\r\n    \r\n    let instance = constants.signalling_server()\r\n   \r\n    socket.current = io.connect(instance);\r\n   \r\n    socket.current.on('connect', () => {\r\n      let userId = localStorage.getItem('userId')\r\n      //if(userId){\r\n        socket.current.emit('session', {userId})\r\n        window.currentSocket = socket.current;\r\n      //}\r\n      \r\n     \r\n  })\r\n    socket.current.on('connect_error', function(error) {\r\n      console.log(\"connect_error to WS server\", error);\r\n    \r\n    });\r\n   \r\n    socket.current.on('disconnect', function() {\r\n      console.log('Client disconnected.');\r\n      socket.current.emit('remove-disconnected', {userId : yourID})\r\n    });\r\n\r\n    //console.log('socket.current ', socket.current)\r\n\r\n    socket.current.on(\"yourID\", (id) => {\r\n      console.log('received yourID: ', id)\r\n      setYourID(id);\r\n      setcallingLink(`${window.location.origin}/calling-route/${id}`)\r\n     \r\n    })\r\n    socket.current.on(\"allUsers\", (users) => {\r\n      setUsers(users);\r\n    })\r\n\r\n    socket.current.on(\"hey\", (data) => {\r\n      console.log('socket.current on hey', data)\r\n      setReceivingCall(true);\r\n      ringtoneSound.play();\r\n      setCaller(data.from);\r\n      setCallerSignal(data.signal);\r\n    })\r\n\r\n\r\n  }, []);\r\n\r\n  function callPeer(id) {\r\n    console.log('callPeer id: ', id)\r\n    console.log('caller id: ', yourID)\r\n    //if(id!=='' && users[id] && id!==yourID){\r\n    if(id && id !== yourID ){\r\n     \r\n      navigator\r\n      .mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then(stream => {\r\n        setStream(stream);\r\n        setCallingFriend(true)\r\n        setCaller(id)\r\n        console.log('userVideo: ',userVideo)\r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = stream;\r\n        }\r\n        const peer = new Peer({\r\n          initiator: true,\r\n          trickle: false,\r\n          config: {\r\n    \r\n            iceServers: [\r\n                {\r\n                    urls: \"stun:numb.viagenie.ca\",\r\n                    username: \"sultan1640@gmail.com\",\r\n                    credential: \"98376683\"\r\n                },\r\n                {\r\n                    urls: \"turn:numb.viagenie.ca\",\r\n                    username: \"sultan1640@gmail.com\",\r\n                    credential: \"98376683\"\r\n                }\r\n            ]\r\n        },\r\n          stream: stream,\r\n        });\r\n\r\n        myPeer.current=peer;\r\n    \r\n        peer.on(\"signal\", data => {\r\n          socket.current.emit(\"callUser\", { userToCall: id, signalData: data, from: yourID })\r\n        })\r\n    \r\n        peer.on(\"stream\", stream => {\r\n          console.log('peer.on stream', stream)\r\n          if (partnerVideo.current) {\r\n            partnerVideo.current.srcObject = stream;\r\n          }\r\n        });\r\n\r\n        peer.on('error', (err)=>{\r\n          console.log(err)\r\n          endCall()\r\n        })\r\n    \r\n        socket.current.on(\"callAccepted\", signal => {\r\n          console.log('socket.current.on callAccepted', signal)\r\n          setCallAccepted(true);\r\n          peer.signal(signal);\r\n        })\r\n\r\n        socket.current.on('close', ()=>{\r\n          console.log('socket closed')\r\n         // window.location.reload()\r\n          window.location.href = '/'\r\n        })\r\n  \r\n        socket.current.on('rejected', ()=>{\r\n          console.log('socket rejected')\r\n          //window.location.reload()\r\n          window.location.href = '/'\r\n        })\r\n      })\r\n      .catch((error)=>{\r\n        console.log('error', error)\r\n        setModalMessage('You cannot place/ receive a call without granting video and audio permissions! Please change your settings to use.')\r\n        setModalVisible(true)\r\n      })\r\n    } else {\r\n      setModalMessage('We think the username entered is wrong. Please check again and retry!')\r\n      setModalVisible(true)\r\n      return\r\n    }\r\n  }\r\n\r\n  function acceptCall() {\r\n    ringtoneSound.unload();\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\r\n      setStream(stream);\r\n      if (userVideo.current) {\r\n        userVideo.current.srcObject = stream;\r\n      }\r\n      setCallAccepted(true);\r\n      const peer = new Peer({\r\n        initiator: false,\r\n        trickle: false,\r\n        stream: stream,\r\n      });\r\n\r\n      myPeer.current=peer\r\n\r\n      peer.on(\"signal\", data => {\r\n        console.log('peer.on signal ', data)\r\n        socket.current.emit(\"acceptCall\", { signal: data, to: caller })\r\n      })\r\n\r\n      peer.on(\"stream\", stream => {\r\n        console.log('peer.on stream | partnerVideo.current.srcObject', stream)\r\n        partnerVideo.current.srcObject = stream;\r\n      });\r\n\r\n      peer.on('error', (err)=>{\r\n        console.log('peer.on error ', err)\r\n        endCall()\r\n      })\r\n\r\n      peer.signal(callerSignal);\r\n\r\n      socket.current.on('close', ()=>{\r\n        console.log('socket closed')\r\n       // window.location.reload()\r\n       \r\n       setModalMessage('Your call connection is closed!')\r\n        setModalVisible(true)\r\n        window.location.href = '/'\r\n      })\r\n    })\r\n    .catch(()=>{\r\n      setModalMessage('You cannot place/ receive a call without granting video and audio permissions! Please change your settings.')\r\n      setModalVisible(true)\r\n    })\r\n  }\r\n\r\n  function rejectCall(){\r\n    ringtoneSound.unload();\r\n    setCallRejected(true)\r\n    socket.current.emit('rejected', {to:caller})\r\n    //window.location.reload()\r\n    window.location.href = '/'\r\n   //setModalMessage('Your call is rejected!')\r\n    //setModalVisible(true)\r\n  }\r\n\r\n  function endCall(){\r\n    console.log('call ending..')\r\n    myPeer.current.destroy()\r\n    socket.current.emit('close',{to:caller})\r\n    window.location.reload()\r\n   // window.location.href = '/'\r\n   //setModalMessage('Your call is ended!')\r\n    //setModalVisible(true)\r\n  }\r\n\r\n  function shareScreen(){\r\n    navigator.mediaDevices.getDisplayMedia({cursor:true})\r\n    .then(screenStream=>{\r\n      myPeer.current.replaceTrack(stream.getVideoTracks()[0],screenStream.getVideoTracks()[0],stream)\r\n      userVideo.current.srcObject=screenStream\r\n      screenStream.getTracks()[0].onended = () =>{\r\n      myPeer.current.replaceTrack(screenStream.getVideoTracks()[0],stream.getVideoTracks()[0],stream)\r\n      userVideo.current.srcObject=stream\r\n      }\r\n    })\r\n  }\r\n\r\n  function toggleMuteAudio(){\r\n    if(stream){\r\n      setAudioMuted(!audioMuted)\r\n      stream.getAudioTracks()[0].enabled = audioMuted\r\n    }\r\n  }\r\n\r\n  function toggleMuteVideo(){\r\n    if(stream){\r\n      setVideoMuted(!videoMuted)\r\n      stream.getVideoTracks()[0].enabled = videoMuted\r\n    }\r\n  }\r\n\r\n  function renderLanding() {\r\n    if(!callRejected && !callAccepted && !callingFriend)\r\n      return 'block'\r\n    return 'none'\r\n  }\r\n\r\n  function renderCall() {\r\n    if(!callRejected && !callAccepted && !callingFriend)\r\n      return 'none'\r\n    return 'block'\r\n  }\r\n\r\n  function isMobileDevice() {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\r\n    return check;\r\n  };\r\n\r\n  function showCopiedMessage(){\r\n    navigator.clipboard.writeText(yourID)\r\n    setCopied(true)\r\n    setInterval(()=>{\r\n      setCopied(false)\r\n    },1000)\r\n  }\r\n\r\n  function showLinkCopiedMessage(){\r\n    navigator.clipboard.writeText(callingLink)\r\n    setLinkCopied(true)\r\n    setInterval(()=>{\r\n      setLinkCopied(false)\r\n    },1000)\r\n  }\r\n\r\n  let UserVideo;\r\n  if (stream) {\r\n    UserVideo = (\r\n      <video className=\"userVideo\" playsInline muted ref={userVideo} autoPlay />\r\n    );\r\n  }\r\n\r\n  let PartnerVideo;\r\n  if (callAccepted && isfullscreen) {\r\n    PartnerVideo = (\r\n      <video className=\"partnerVideo cover\" playsInline ref={partnerVideo} autoPlay />\r\n    );\r\n  } else if (callAccepted && !isfullscreen){\r\n    PartnerVideo = (\r\n      <video className=\"partnerVideo\" playsInline ref={partnerVideo} autoPlay />\r\n    );\r\n  }\r\n\r\n  let incomingCall;\r\n  if (receivingCall && !callAccepted && !callRejected) {\r\n    incomingCall = (\r\n      <div className=\"incomingCallContainer\">\r\n        <div className=\"incomingCall flex flex-column\">\r\n          <div><span className=\"callerID\">{caller}</span> is calling you!</div>\r\n          <div className=\"incomingCallButtons flex\">\r\n          <button name=\"accept\" className=\"alertButtonPrimary\" onClick={()=>acceptCall()}>Accept</button>\r\n          <button name=\"reject\" className=\"alertButtonSecondary\" onClick={()=>rejectCall()}>Reject</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  let audioControl;\r\n  if(audioMuted){\r\n    audioControl=<span className=\"iconContainer\" onClick={()=>toggleMuteAudio()}>\r\n      {/* <img src={microphonestop} alt=\"Unmute audio\"/> */}\r\n      <button className=\"btn\" >Unmute audio</button>\r\n\r\n    </span>\r\n  } else {\r\n    audioControl=<span className=\"iconContainer\" onClick={()=>toggleMuteAudio()}>\r\n      {/* <img src={microphone} alt=\"Mute audio\"/> */}\r\n      <button className=\"btn\" >Mute audio</button>\r\n    </span>\r\n  }\r\n\r\n  let videoControl;\r\n  if(videoMuted){\r\n    videoControl=<span className=\"iconContainer\" onClick={()=>toggleMuteVideo()}>\r\n      \r\n      {/* <img src={camera} alt=\"Resume video\"/> */}\r\n      <button className=\"btn\" >Resume Video</button>\r\n    </span>\r\n  } else {\r\n    videoControl=<span className=\"iconContainer\" onClick={()=>toggleMuteVideo()}>\r\n      {/* <img src={camera} alt=\"Stop audio\"/> */}\r\n      <button className=\"btn\" >Stop Video</button>\r\n    </span>\r\n  }\r\n\r\n  let screenShare=<span className=\"iconContainer\" onClick={()=>shareScreen()}>\r\n    {/* <img src={share} alt=\"Share screen\"/> */}\r\n    <button className=\"btn\" >Share Screen</button>\r\n  </span>\r\n  if(isMobileDevice()){\r\n    screenShare=<></>\r\n  }\r\n\r\n  let hangUp=<span className=\"iconContainer\" onClick={()=>endCall()}>\r\n    {/* <img src={hangup} alt=\"End call\"/> */}\r\n    <button className=\"btn\" >End Call</button>\r\n  </span>\r\n\r\n  let fullscreenButton;  \r\n  if(isfullscreen){\r\n    fullscreenButton=<span className=\"iconContainer\" onClick={()=>{setFullscreen(false)}}>\r\n      {/* <img src={minimize} alt=\"fullscreen\"/> */}\r\n      <button className=\"btn\" >minimize</button>\r\n\r\n    </span>\r\n  } else {\r\n    fullscreenButton=<span className=\"iconContainer\" onClick={()=>{setFullscreen(true)}}>\r\n      {/* <img src={fullscreen} alt=\"fullscreen\"/> */}\r\n      <button className=\"btn\" >Full Screen</button>\r\n    </span>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{display: renderLanding()}}>\r\n        {landingHTML}\r\n        <Rodal \r\n          visible={modalVisible} \r\n          onClose={()=>setModalVisible(false)} \r\n          width={20} \r\n          height={5} \r\n          measure={'em'}\r\n          closeOnEsc={true}\r\n        >\r\n          <div>{modalMessage}</div>\r\n        </Rodal>\r\n        {incomingCall}\r\n      </div>\r\n      <div className=\"callContainer\" style={{display: renderCall()}}>\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Watermark />\r\n        </Suspense>\r\n        <div className=\"partnerVideoContainer\">\r\n          {PartnerVideo}\r\n        </div>\r\n        <div className=\"userVideoContainer\">\r\n          {UserVideo}\r\n        </div>\r\n        <div className=\"controlsContainer flex\">\r\n          {audioControl}\r\n          {videoControl}\r\n          {screenShare}\r\n          {fullscreenButton}\r\n          {hangUp}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WebrtcApp;","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\webrtc\\Components\\Footer\\Footer.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\webrtc\\Components\\Watermark\\Watermark.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\webrtc\\Components\\Navigation\\Navigation.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\pages\\StudentRequest.js",["634","635","636","637","638","639","640","641","642","643","644"],"\r\nimport React, {useState} from \"react\";\r\nimport {\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup } from 'react-bootstrap';\r\n    \r\nimport Spinner from '../components/common/Spinner';\r\nimport {useForm} from 'react-hook-form';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nimport { studyRequests } from \"../services\";\r\nimport Socket from \"../components/common/Socket.js\";\r\n\r\n\r\n\r\nexport default function StudentRequest (props){\r\n    const { register, handleSubmit, errors, watch } = useForm(); // initialize the hook\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    const onSubbmit = (data)=>{\r\n        if(!userId){\r\n            NotificationManager.error('Sign Up is required!', 'Error!', 2000);    \r\n            return\r\n        }\r\n        data.from = userId\r\n        data.to = props.match.params.tutorId\r\n        if(data.from === data.to){\r\n            NotificationManager.error('Yourself Request Is Not Allowed!', 'Error!', 2000);\r\n            return\r\n        }\r\n        let req_message = {from: data.from, to: data.to, message: data.message}\r\n        if(window.currentSocket){\r\n            window.currentSocket.emit('message', req_message)\r\n        }\r\n        \r\n        setIsLoading(true)\r\n        studyRequests(data)\r\n        .then(result => {\r\n            setIsLoading(false)\r\n            console.log('study requests', result)\r\n            NotificationManager.success('Request Sent!', 'Successful!', 2000);\r\n            window.location.href = 'dashboard/new-requests'\r\n        })\r\n        .catch(error => {\r\n            setIsLoading(false)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n            <div style={{ marginBottom:'50px'}} className=\"section\">\r\n                <Socket />\r\n            {isLoading && <Spinner />}\r\n\r\n                <Container>\r\n                    <Row>\r\n                    <Col md={7}  id=\"register-signup\">\r\n                    {/* <div> */}\r\n                        <h2>\r\n                            Send, Your Request\r\n                        </h2>\r\n                        <p>\r\n                           Your instructor will contact you soon.\r\n                        </p>\r\n                        {/* <Row> */}\r\n                            {/* <Col md={{span:10, offset:2}}> */}\r\n                        <Form  onSubmit={handleSubmit(onSubbmit)}>\r\n                        \r\n                        \r\n                        <Form.Label htmlFor=\"subjects\" >\r\n                            Subject\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\"\r\n                               name=\"subjects\" \r\n                               placeholder=\"subject\" \r\n                               ref={register({required: 'subject is required'}) } \r\n                               \r\n                               />\r\n                              \r\n                          </InputGroup>\r\n                          {errors.subjects && <p>{errors.subjects.message}</p> }\r\n\r\n                          <Form.Row>\r\n                              <Col>\r\n                              <Form.Label htmlFor=\"lessonType\" >\r\n                            Lesson Type\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              as=\"select\"\r\n                               \r\n                               name=\"lessonType\" \r\n                               ref={register({\r\n                                   required: 'Select a lesson Type',\r\n                                   \r\n                                }) }\r\n                               \r\n                                >\r\n                                    <option value=\"\" />\r\n                                <option value=\"online\">Online Lesson</option>\r\n                                <option value=\"inperson\">In Person Lesson</option>\r\n                                </FormControl>\r\n                          </InputGroup>\r\n                          {errors.lessonType && <p>{errors.lessonType.message}</p> }\r\n\r\n\r\n                              </Col>\r\n\r\n                              <Col>\r\n                              <Form.Label htmlFor=\"timeFrom\" >\r\n                            Availability From\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              as=\"select\"\r\n                               \r\n                               name=\"timeFrom\" \r\n                               ref={register({\r\n                                   required: 'Select a time',\r\n                                   \r\n                                }) }\r\n                               \r\n                                >\r\n                                    <option value=\"\" />\r\n                                <option value=\"10:00 AM\">10:00 AM</option>\r\n                                <option value=\"11:00 AM\">11:00 AM</option>\r\n                                <option value=\"12:00 AM\">12:00 AM</option>\r\n                                <option value=\"1:00 PM\">1:00 PM</option>\r\n                                </FormControl>\r\n                          </InputGroup>\r\n                          {errors.timeFrom && <p>{errors.timeFrom.message}</p> }\r\n\r\n                              </Col>\r\n\r\n                              <Col>\r\n                              <Form.Label htmlFor=\"timeTo\" >\r\n                            Availability To\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              as=\"select\"\r\n                               \r\n                               name=\"timeTo\" \r\n                               ref={register({\r\n                                   required: 'Select a time',\r\n                                   \r\n                                }) }\r\n                               \r\n                                >\r\n                                    <option value=\"\" />\r\n                                <option value=\"10:00 AM\">10:00 AM</option>\r\n                                <option value=\"11:00 AM\">11:00 AM</option>\r\n                                <option value=\"12:00 AM\">12:00 AM</option>\r\n                                <option value=\"1:00 PM\">1:00 PM</option>\r\n                                </FormControl>\r\n                          </InputGroup>\r\n                          {errors.timeTo && <p>{errors.timeTo.message}</p> }\r\n                          </Col>\r\n                          </Form.Row>\r\n                                                \r\n\r\n\r\n                          <Form.Label htmlFor=\"message\" >\r\n                            Message \r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              {/* <InputGroup.Prepend>\r\n                             \r\n                              </InputGroup.Prepend> */}\r\n                              <FormControl size=\"lg\"\r\n                               name=\"message\"  \r\n                               placeholder=\"message\" \r\n                               ref={register({required: 'message is required'}) } \r\n                               as=\"textarea\"\r\n                               />\r\n                              \r\n                          </InputGroup>\r\n                          {errors.message && <p>{errors.message.message}</p> }\r\n\r\n\r\n                         \r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading}\r\n                            className=\"btn-dark\"   \r\n                            type=\"submit\"\r\n                            style={{marginLeft:'25%'}}\r\n                             >\r\n                              \r\n                              Send Request\r\n                          </Button>\r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n    )\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSNewRequests.js",["645","646","647","648","649","650","651"],"import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col,Form, Button, Table } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getStudentRequests } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\nfunction DSNewRequests  (props){\r\n    \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [requests, setrequests] = useState([]);\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    \r\n    useEffect(() => {\r\n            setIsLoading(true)\r\n            getStudentRequests([{ to: userId},{ from: userId}]).then(requests => {\r\n                setIsLoading(false)\r\n                setrequests(requests);\r\n\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, []);\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n        {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row> \r\n                <Col md={{span:12, offset:0}}>\r\n                <h2 className=\"section-heading\">New Requests</h2>\r\n                <Table striped bordered hover  responsive  size=\"md\" >\r\n                    <thead>\r\n                        <tr> \r\n                        {/* <th>From</th> */}\r\n                        {/* <th>To</th> */}\r\n                        <th>Availability From</th>\r\n                        <th>Availability To</th>\r\n                        <th>Lesson Type</th>\r\n                        <th>Subjects</th>\r\n                        {/* <th>Status</th> */}\r\n                        <th>Reply</th>\r\n                        <th>Accept</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {requests.map(((r, index) => <tr key={index}> \r\n                            {/* <td>{r.from}</td> */}\r\n                            {/* <td>{r.to}</td> */}\r\n                            <td>{r.timeFrom}</td>\r\n                            <td>{r.timeTo}</td>\r\n                            <td>{r.lessonType}</td>\r\n                            <td>{r.subjects}</td>\r\n                            {/* <td>{r.status}</td> */}\r\n                            <td><Link to={`/dashboard/chat-box/${r.to === userId ? r.from : r.to  }`} > Chat </Link> </td>\r\n                            {userId !== r.from ? \r\n                        <td>\r\n                        <Link to={`/dashboard/accept-request/${r.id}/from/${r.from}`} >\r\n                             Accept \r\n                        </Link> \r\n                        </td>:\r\n                        null    \r\n                        }\r\n                            \r\n                             </tr>\r\n                             )) }\r\n                        \r\n\r\n                    </tbody>\r\n                </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSNewRequests","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSChatBox.js",["652","653","654","655","656","657","658","659","660","661","662","663"],"import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col,Form, Button, Table, InputGroup, FormControl } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getMessages, getConnectedUsers } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\nfunction DSChatBox  (props){\r\n    \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [chatWith, setchatWith] = useState(props.match.params.to ? props.match.params.to : '' );\r\n   const [messagesList, setmessagesList] = useState([]);\r\n   const [message, setmessage] = useState('');\r\n    let userId = localStorage.getItem('userId')\r\n    let userImage = localStorage.getItem('userImage')\r\n   //const socket =  localStorage.getItem('currentSocket')\r\n   //console.log('local storage socket', socket)\r\n   //socket = JSON.parse(socket)\r\n   //console.log('local storage socket', socket)\r\n    // if(props.match && props.match.params){\r\n    //     console.log(props.match.params)\r\n    //     setchatWith(props.match.params.to)\r\n    // }\r\n\r\n    useEffect(() => {\r\n         if(props.match && props.match.params){\r\n           // console.log(props.match.params)\r\n            setchatWith(props.match.params.to)\r\n        }\r\n        if(chatWith){\r\n            let fromQuery = [ {and: [{to:{like : userId} }, {from:{like : chatWith} } ]},\r\n                            { and:[{to:{like : chatWith} }, {from:{like : userId} } ]}\r\n                            ]\r\n\r\n            \r\n            getMessages(fromQuery)\r\n            .then(result=>{\r\n               // console.log(result)\r\n                setmessagesList(result)\r\n              //  console.log(messagesList)\r\n              \r\n                \r\n                //messagesList.concat({to:'1', from: '2', message:'hi'})\r\n            })\r\n            .catch(error=>{\r\n                console.log(error)\r\n            })\r\n        }\r\n       \r\n        getConnectedUsers({id: userId})\r\n        .then(connections => {\r\n\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n        })\r\n\r\n        setTimeout(() => {\r\n            \r\n            window.currentSocket.on('message', (data)=>{\r\n                console.log('received new message..', data)\r\n                console.log('messagesList..', messagesList)\r\n                let newMessages = messagesList.slice()\r\n                newMessages.push(data)\r\n                setmessagesList(newMessages)\r\n            })    \r\n        }, 1000 * 5);\r\n        \r\n        \r\n\r\n    }, []);\r\n\r\n    const changeHandler = (event)=>{\r\n        let {name, value} = event.target;\r\n        setmessage(value)\r\n    }\r\n    const sendMessage = ()=>{\r\n        if(!message) return\r\n\r\n        let data = {\r\n            from:userId,\r\n            to: chatWith,\r\n            message: message,\r\n        }\r\n        let newMessages = []\r\n        if(messagesList && messagesList.length > 0){\r\n            newMessages = messagesList.slice()\r\n        }\r\n        \r\n        newMessages.push(data)\r\n        setmessagesList(newMessages)\r\n        //console.log('messagesList', messagesList)\r\n        window.currentSocket.emit('message', data)\r\n       \r\n        setmessage('')\r\n    }\r\n\r\n   \r\n\r\n\r\n\r\n    return (\r\n        <div className=\"\" style={{width:'600px'}}>\r\n        {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row > \r\n                <Col md={{span:12, offset:2}} style={{ marginBottom:'25px', marginTop:'5%' }}>\r\n                {/* <h2 className=\"section-heading\"></h2> */}\r\n                <div style={{overflowY: \"auto\", height:'400px'}}>\r\n                {messagesList && messagesList.length > 0?\r\n                messagesList.map((msg, index)=>{\r\n                    \r\n                    if(msg && msg.from == userId){\r\n                       return <p key={index} className=\"message-from\">\r\n                       {msg.message}\r\n                   </p>\r\n                   \r\n\r\n                    }\r\n                    else if(msg){\r\n                        return <p key={index} className=\"message-to\">\r\n                                         {msg.message}\r\n                                     </p>\r\n                 \r\n                    }\r\n                })\r\n                :\r\n                null\r\n                }\r\n                </div>\r\n               \r\n                </Col>\r\n                {/* <Col md={{span:4, offset:0}} className=\"chat-box-right\">\r\n                <h4 className=\"\">Connected Users</h4>\r\n\r\n                    <div style={{display:'flex'}} className=\"chat-users\">\r\n                        <img width=\"59px\" src=\"\" alt=\"user image\" />\r\n                        <span>\r\n                            <p style={{marginBottom:'0'}}><strong>bilal </strong></p>\r\n                            <p>from: karachi</p>\r\n                        </span>\r\n                        <span style={{background:'#cc2d1c', height:'30px', width:'30px',textAlign:'center', borderRadius:'50%', color:'#fff' }}> 1 </span>\r\n                    </div>\r\n                </Col> */}\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n            <Col md={{span:12, offset:2}} style={{marginBottom:'10%' }}>\r\n\r\n                <Form >\r\n                    <Form.Row className=\"align-items-center\">\r\n                        \r\n                        <Col xs=\"auto\" md=\"10\">\r\n                        <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\r\n                            Message\r\n                        </Form.Label>\r\n                        <InputGroup className=\"\">\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>@</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl \r\n                             placeholder=\"type your message\" \r\n                             as=\"textarea\"\r\n                             name=\"message\"\r\n                             value={message}\r\n                             onChange={changeHandler}\r\n                             />\r\n                        </InputGroup>\r\n                        </Col>\r\n                       \r\n                        <Col xs=\"auto\" >\r\n                        <Button onClick={handleSubmit(sendMessage)} className=\"mb-2 \" style={{background:'#e74c3c'}}>\r\n                            Send\r\n                        </Button>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    </Form>\r\n                </Col>\r\n                </Row>\r\n\r\n        </Container>\r\n    </div>\r\n      )\r\n\r\n}\r\n\r\nexport default DSChatBox","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\common\\Socket.js",["664","665"],"\r\nimport React, {useState, useEffect, useRef} from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { constants } from \"../../constants\";\r\n\r\nexport default function Socket () {\r\n\r\n    const [yourID, setYourID] = useState(\"\");\r\n    const [users, setUsers] = useState({});\r\n    const socket = useRef();\r\n\r\n    useEffect(() => {\r\n  \r\n        let userId = localStorage.getItem('userId')\r\n           if(!userId){\r\n             return\r\n           }\r\n           let instance = constants.signalling_server()\r\n          \r\n        socket.current = io.connect(instance);\r\n       \r\n        //window.currentSocket = socket.current;\r\n        socket.current.on('connect', () => {\r\n            socket.current.emit('session', {userId})\r\n            window.currentSocket = socket.current;\r\n           \r\n        })\r\n    \r\n        socket.current.on('connect_error', function(error) {\r\n          console.log(\"connect_error to WS server\", error);\r\n        \r\n        });\r\n       \r\n        socket.current.on('disconnect', function() {\r\n          console.log('Client disconnected.');\r\n        });\r\n    \r\n        //console.log('socket.current ', socket.current)\r\n    \r\n        socket.current.on(\"yourID\", (id) => {\r\n          console.log('received userid: ', id)\r\n          setYourID(id);\r\n          localStorage.setItem('socketId', id)\r\n        })\r\n        socket.current.on(\"allUsers\", (users) => {\r\n          setUsers(users);\r\n        })\r\n    \r\n        // socket.current.on(\"hey\", (data) => {\r\n        //   setReceivingCall(true);\r\n        //   ringtoneSound.play();\r\n        //   setCaller(data.from);\r\n        //   setCallerSignal(data.signal);\r\n        // })\r\n      }, []);\r\n\r\n      return (<div></div>)\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSClasses.js",["666","667","668","669","670","671","672"],"import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col,Form, Button, Table } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getMyClasses } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction DSClasses (props){\r\n    \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [classes, setclasses] = useState([]);\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    useEffect(() => {\r\n            setIsLoading(true)\r\n            getMyClasses([{instructorId:{like : userId} }, {studentId:{like : userId} }])\r\n            .then(cls => {\r\n                setIsLoading(false)\r\n                setclasses(cls);\r\n\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, [])\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n        {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row> \r\n                <Col md={{span:12, offset:0}}>\r\n                <h2 className=\"section-heading\">My Sessions</h2>\r\n                {classes.length === 0 ? <p>No Classes Yet.</p> : <p>Your Classes</p>}\r\n                <Table striped bordered hover  responsive  size=\"md\" >\r\n                    <thead>\r\n                        <tr> \r\n                        <th>Start Time</th>\r\n                        <th>End Time</th>\r\n                        <th>Lesson Type</th>\r\n                        <th>Fees</th>\r\n                        {/* <th>Lesson Type</th>\r\n                        <th>Subjects</th> */}\r\n                        {/* <th>Status</th> */}\r\n                        <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {classes.map(((r, index) => <tr key={index}> \r\n                            <td>{r.timeFrom}</td>\r\n                            <td>{r.timeTo}</td>\r\n                            <td>{r.lessonType}</td>\r\n                            <td>{r.fees}/{r.feesPer}</td>\r\n                            {/* <td>{r.lessonType}</td>\r\n                            <td>{r.subjects}</td> */}\r\n                            {/* {userId !== r.studentId ?  */}\r\n                            <td><Link target=\"_blank\" to={`/calling-route/${userId === r.studentId ? r.instructorId : r.studentId }`} > Take The Session </Link> </td>\r\n                            {/* : null\r\n                            } */}\r\n                            \r\n                             </tr>\r\n                             )) }\r\n                        \r\n\r\n                    </tbody>\r\n                </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSClasses","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSClassesDetails.js",["673","674","675","676","677","678","679","680","681","682"],"import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col,Form, Button, Table } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getMyClasses } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nexport default function DSClassesDetails (){\r\n\r\n    \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [classes, setclasses] = useState([]);\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    useEffect(() => {\r\n            setIsLoading(true)\r\n            getMyClasses({instructorId: userId})\r\n            .then(cls => {\r\n                setIsLoading(false)\r\n                setclasses(cls);\r\n\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            {isLoading && <Spinner />}\r\n            <Container>\r\n                <Row> \r\n                    <Col md={{span:12, offset:0}}>\r\n                    <h2 className=\"section-heading\">Sessions</h2>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n       </div>\r\n    )  \r\n                \r\n} ","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\AcceptStudentRequest.js",["683","684","685","686","687","688","689","690","691","692","693"],"\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup } from 'react-bootstrap';\r\n    \r\nimport Spinner from '../components/common/Spinner';\r\nimport {useForm} from 'react-hook-form';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nimport { getStudentRequestById, createClassRequest } from \"../services\";\r\n\r\n\r\n\r\n\r\nexport default function AcceptStudentRequest (props){\r\n    const { register, handleSubmit, errors, setValue } = useForm(); // initialize the hook\r\n    const [classrequest, setclassrequest] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n\r\n    const onSubbmit = (data)=>{\r\n      \r\n\r\n        data.instructorId = classrequest.to\r\n        data.studentId = classrequest.from\r\n        data.requestId = classrequest.id\r\n        data.fees = parseInt(data.fees)\r\n\r\n        setIsLoading(true)\r\n        createClassRequest(data)\r\n        .then(result => {\r\n            setIsLoading(false)\r\n            if(result.ok && result.ok === false){\r\n                NotificationManager.error(result.statusText, 'Error!', 2000);\r\n                return\r\n            }\r\n            NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n        })\r\n        .catch(error => {\r\n            setIsLoading(false)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        getStudentRequestById(props.match.params.requestId)\r\n        .then(request => {\r\n            setIsLoading(false)\r\n            const fields = [\r\n            'lessonType',\r\n            'timeFrom',\r\n            'timeTo',\r\n           ];\r\n           fields.forEach(field => setValue(field, request[field]));\r\n           setclassrequest(request);\r\n\r\n        }).catch(error=>{\r\n            setIsLoading(false)\r\n            console.log(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n            <div style={{ marginBottom:'50px'}} className=\"section\">\r\n            {isLoading && <Spinner />}\r\n\r\n                <Container>\r\n                    <Row>\r\n                    <Col md={{span:8, offset:2}}  id=\"register-signup\">\r\n                    {/* <div> */}\r\n                        <h2>\r\n                            Accepting Student Request\r\n                        </h2>\r\n                        <p>\r\n                           You can teach online as well.\r\n                        </p>\r\n                        {/* <Row> */}\r\n                            {/* <Col md={{span:10, offset:2}}> */}\r\n                        <Form  onSubmit={handleSubmit(onSubbmit)}>\r\n                        \r\n                          <Form.Row>\r\n                              <Col>\r\n                              <Form.Label htmlFor=\"lessonType\" >\r\n                            Lesson Type\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              as=\"select\"\r\n                               value={props.lessonType}\r\n                               name=\"lessonType\" \r\n                               ref={register({\r\n                                   required: 'Select a lesson Type',\r\n                                   \r\n                                }) }\r\n                               \r\n                                >\r\n                                    <option value=\"\" />\r\n                                <option value=\"online\">Online Lesson</option>\r\n                                <option value=\"inperson\">In Person Lesson</option>\r\n                                </FormControl>\r\n                          </InputGroup>\r\n                          {errors.lessonType && <p>{errors.lessonType.message}</p> }\r\n\r\n\r\n                              </Col>\r\n\r\n                              <Col>\r\n                              <Form.Label htmlFor=\"timeFrom\" >\r\n                            Start Time\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              as=\"select\"\r\n                              value={props.timeFrom}\r\n                               name=\"timeFrom\" \r\n                               ref={register({\r\n                                   required: 'Select a time',\r\n                                   \r\n                                }) }\r\n                               \r\n                                >\r\n                                    <option value=\"\" />\r\n                                <option value=\"10:00 AM\">10:00 AM</option>\r\n                                <option value=\"11:00 AM\">11:00 AM</option>\r\n                                <option value=\"12:00 AM\">12:00 AM</option>\r\n                                <option value=\"1:00 PM\">1:00 PM</option>\r\n                                </FormControl>\r\n                          </InputGroup>\r\n                          {errors.timeFrom && <p>{errors.timeFrom.message}</p> }\r\n\r\n                              </Col>\r\n\r\n                              <Col>\r\n                              <Form.Label htmlFor=\"timeTo\" >\r\n                            End Time\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              as=\"select\"\r\n                              value={props.timeTo}\r\n                               name=\"timeTo\" \r\n                               ref={register({\r\n                                   required: 'Select a time',\r\n                                   \r\n                                }) }\r\n                               \r\n                                >\r\n                                    <option value=\"\" />\r\n                                <option value=\"10:00 AM\">10:00 AM</option>\r\n                                <option value=\"11:00 AM\">11:00 AM</option>\r\n                                <option value=\"12:00 AM\">12:00 AM</option>\r\n                                <option value=\"1:00 PM\">1:00 PM</option>\r\n                                </FormControl>\r\n                          </InputGroup>\r\n                          {errors.timeTo && <p>{errors.timeTo.message}</p> }\r\n                          </Col>\r\n                         \r\n                          </Form.Row>\r\n                                                \r\n                          <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"fees\">\r\n                        <Form.Label>Fees</Form.Label>\r\n                        <Form.Control \r\n                        type=\"number\"\r\n                        placeholder=\"fees\"\r\n                        name=\"fees\"\r\n                        value={props.fees}\r\n                        ref={register({required:'Set Your Fees'})}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Per</Form.Label>\r\n                        <Form.Control as=\"select\" \r\n                        defaultValue=\"Month\"\r\n                        name=\"feesPer\"\r\n                        value={props.feesPer}\r\n                        ref={register()}\r\n                        >\r\n                            {/* <option  /> */}\r\n                            <option value=\"month\" >Month</option>\r\n                            <option value=\"week\">Week</option>\r\n                            <option value=\"hour\">Hour</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    {errors.fees && errors.fees.message}\r\n\r\n                         \r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading}\r\n                            className=\"btn-dark\"   \r\n                            type=\"submit\"\r\n                            style={{marginLeft:'25%'}}\r\n                             >\r\n                              \r\n                              Accept Request\r\n                          </Button>\r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n    )\r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\constants\\index.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\RatingStars.js",[],"C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\DSFeedBack.js",["694","695","696","697","698","699","700","701","702","703","704","705","706","707"],"\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo, sendFeedback } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { RatingStars } from \"../components\";\r\n\r\n\r\nfunction DSFeedback  (props){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [feedbackMessage, setfeedbackMessage] = useState('');\r\n    const [feedbackstars, setfeedbackstars] = useState(5);\r\n    const [feedbackreason, setfeedbackreason] = useState('');\r\n\r\n    let userId = localStorage.getItem('userId')\r\n    let user = localStorage.getItem('user')\r\n    user = JSON.parse(user)\r\n\r\n\r\n    const submitRating = ()=>{\r\n        console.log('submitRating clicked feedbackMessage', feedbackMessage)\r\n        console.log('submitRating clicked feedbackstars', feedbackstars)\r\n        if(!feedbackMessage || !feedbackreason || feedbackstars === 0){\r\n            return NotificationManager.error('Required More Info.', 'Error!', 2000);\r\n\r\n        }\r\n        \r\n        let data = {\r\n            message:feedbackMessage,\r\n            stars:feedbackstars,\r\n            byId: userId,\r\n            fullname: `${user.firstName}  ${user.lastName}`,\r\n            feedbackreason: feedbackreason,\r\n        }\r\n        sendFeedback(data)\r\n        .then(result=>{\r\n            console.log(result)\r\n            if(result.ok === false){\r\n                NotificationManager.error(result.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n\r\n            NotificationManager.success(result.message || 'Successfully Created!', 'Success!', 2000);\r\n            setfeedbackreason('')\r\n            setfeedbackMessage('')\r\n        })\r\n        .catch(result=>{\r\n            console.log(result)\r\n            NotificationManager.error(result.toString(), 'Error!', 2000);\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            {isLoading && <Spinner />}\r\n            <Container>\r\n                <Row>\r\n                    <Col md={{span:12, offset:3}}>\r\n                    <h2 className=\"section-heading\">Share Your Feed Back</h2>\r\n                \r\n                    <RatingStars >\r\n                              <RatingStars.rating\r\n                                onChange={value=>{setfeedbackstars(value) }}\r\n                               >\r\n                             </RatingStars.rating >\r\n                             \r\n                             {/* {feedbackstars <= 3 ?  */}\r\n                             <RatingStars.feedbackReasons\r\n                                className=\"feedback-select\"\r\n                                label=\"Choose Your Reason\"\r\n                                stars={feedbackstars}\r\n                                onChange={(event)=>setfeedbackreason(event.target.value)}\r\n                             >\r\n                                 \r\n                                 </RatingStars.feedbackReasons>\r\n                                 {/* : null\r\n                             } */}\r\n                              \r\n                              \r\n                              <RatingStars.messageBox \r\n                              placeholder=\"Enter Your Feedback\"\r\n                              value={feedbackMessage}\r\n                              rows={4}\r\n                              cols={50}\r\n                             \r\n                              onChange={event => {setfeedbackMessage(event.target.value)}}\r\n                              > \r\n                              </RatingStars.messageBox >\r\n\r\n                              <RatingStars.ratingSubmit\r\n                                className=\"btn-dark\" \r\n                                onClick={submitRating}\r\n                                \r\n                              >{\"Feedback\"}\r\n                                  </RatingStars.ratingSubmit>\r\n\r\n                              </RatingStars>\r\n\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DSFeedback","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\CallingDemo.js",["708","709","710"],"import React, {useState, useEffect}  from \"react\";\r\n\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default function CallingDemo () {\r\n\r\n    const [imageUrl, setimageUrl] = useState(''); \r\n    const imagesList = [\r\n        '/images/calling_demo/01.jpg',\r\n        '/images/calling_demo/02.jpg',\r\n        '/images/calling_demo/03.jpg',\r\n        '/images/calling_demo/04.jpg',\r\n        \r\n    ]\r\n\r\n    useEffect(() => {\r\n        var callingDemoImageIndex = 0\r\n        setimageUrl(imagesList[callingDemoImageIndex])\r\n        setInterval(() => {\r\n            callingDemoImageIndex = callingDemoImageIndex +1\r\n            if(callingDemoImageIndex >= imagesList.length){\r\n                callingDemoImageIndex = 0\r\n            }\r\n            setimageUrl(imagesList[callingDemoImageIndex])\r\n        }, 1000 * 5);\r\n    }, []);\r\n\r\n\r\n      return (\r\n          <div id=\"calling-demo\"  class=\"section\" >\r\n              <Container>\r\n                  <Row>\r\n                      <Col md={12}>\r\n                          <h2 class=\"section-heading\">\r\n                          How online Lessons Works\r\n                          </h2>\r\n                          <div className=\"calling-demo-content\" >\r\n                                <span style={{ width:'65%'}}>\r\n                                    <img src={imageUrl} alt=\"video calling demo image\" />\r\n                                </span>\r\n                                \r\n                                <span style={{paddingTop:'30px', width:'35%'}}>\r\n                                <p>\r\n                                <i className=\"fa fa-angle-double-right \"></i>  \r\n                                 Meet with the expert of your choice, anywhere in the country, online or in-person\r\n                                </p>\r\n                                <p>\r\n                                <i className=\"fa fa-angle-double-right\"></i>  \r\n                                Save time and easily fit lessons into your schedule\r\n                                </p>\r\n                                <p>\r\n                                <i className=\"fa fa-angle-double-right\"></i>  \r\n                                Collaborate with online features built for any skill or subject\r\n                                </p>\r\n                                <a className=\"btn-link\" href=\"/calling\" target=\"_blank\">How it work's</a>\r\n                                </span>\r\n                          </div>\r\n\r\n                      </Col>\r\n                  </Row>\r\n              </Container>\r\n          </div>\r\n      )\r\n    \r\n}","C:\\Users\\m.bilal\\Documents\\code\\foster-edu\\web-client1\\src\\components\\StyledComponents.js",[],{"ruleId":"711","replacedBy":"712"},{"ruleId":"713","replacedBy":"714"},{"ruleId":"715","severity":1,"message":"716","line":4,"column":8,"nodeType":"717","messageId":"718","endLine":4,"endColumn":12},{"ruleId":"719","severity":1,"message":"720","line":24,"column":27,"nodeType":"721","endLine":24,"endColumn":87},{"ruleId":"719","severity":1,"message":"720","line":32,"column":27,"nodeType":"721","endLine":32,"endColumn":87},{"ruleId":"715","severity":1,"message":"722","line":3,"column":31,"nodeType":"717","messageId":"718","endLine":3,"endColumn":37},{"ruleId":"723","severity":1,"message":"724","line":24,"column":34,"nodeType":"721","endLine":24,"endColumn":45},{"ruleId":"723","severity":1,"message":"724","line":27,"column":33,"nodeType":"721","endLine":27,"endColumn":44},{"ruleId":"723","severity":1,"message":"724","line":33,"column":34,"nodeType":"721","endLine":33,"endColumn":45},{"ruleId":"723","severity":1,"message":"724","line":36,"column":33,"nodeType":"721","endLine":36,"endColumn":44},{"ruleId":"715","severity":1,"message":"725","line":15,"column":46,"nodeType":"717","messageId":"718","endLine":15,"endColumn":64},{"ruleId":"715","severity":1,"message":"726","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":19},{"ruleId":"715","severity":1,"message":"727","line":2,"column":21,"nodeType":"717","messageId":"718","endLine":2,"endColumn":24},{"ruleId":"715","severity":1,"message":"728","line":2,"column":26,"nodeType":"717","messageId":"718","endLine":2,"endColumn":29},{"ruleId":"715","severity":1,"message":"729","line":3,"column":31,"nodeType":"717","messageId":"718","endLine":3,"endColumn":35},{"ruleId":"715","severity":1,"message":"726","line":4,"column":10,"nodeType":"717","messageId":"718","endLine":4,"endColumn":19},{"ruleId":"715","severity":1,"message":"727","line":4,"column":21,"nodeType":"717","messageId":"718","endLine":4,"endColumn":24},{"ruleId":"715","severity":1,"message":"730","line":5,"column":11,"nodeType":"717","messageId":"718","endLine":5,"endColumn":21},{"ruleId":"715","severity":1,"message":"731","line":5,"column":23,"nodeType":"717","messageId":"718","endLine":5,"endColumn":34},{"ruleId":"715","severity":1,"message":"729","line":5,"column":5,"nodeType":"717","messageId":"718","endLine":5,"endColumn":9},{"ruleId":"715","severity":1,"message":"730","line":5,"column":11,"nodeType":"717","messageId":"718","endLine":5,"endColumn":21},{"ruleId":"715","severity":1,"message":"731","line":5,"column":23,"nodeType":"717","messageId":"718","endLine":5,"endColumn":34},{"ruleId":"715","severity":1,"message":"722","line":6,"column":5,"nodeType":"717","messageId":"718","endLine":6,"endColumn":11},{"ruleId":"723","severity":1,"message":"724","line":19,"column":31,"nodeType":"721","endLine":19,"endColumn":68},{"ruleId":"719","severity":1,"message":"720","line":21,"column":31,"nodeType":"721","endLine":21,"endColumn":88},{"ruleId":"715","severity":1,"message":"732","line":2,"column":16,"nodeType":"717","messageId":"718","endLine":2,"endColumn":24},{"ruleId":"715","severity":1,"message":"733","line":4,"column":22,"nodeType":"717","messageId":"718","endLine":4,"endColumn":28},{"ruleId":"715","severity":1,"message":"726","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":19},{"ruleId":"715","severity":1,"message":"727","line":2,"column":21,"nodeType":"717","messageId":"718","endLine":2,"endColumn":24},{"ruleId":"715","severity":1,"message":"728","line":2,"column":26,"nodeType":"717","messageId":"718","endLine":2,"endColumn":29},{"ruleId":"715","severity":1,"message":"734","line":2,"column":31,"nodeType":"717","messageId":"718","endLine":2,"endColumn":40},{"ruleId":"715","severity":1,"message":"735","line":2,"column":42,"nodeType":"717","messageId":"718","endLine":2,"endColumn":46},{"ruleId":"715","severity":1,"message":"736","line":4,"column":3,"nodeType":"717","messageId":"718","endLine":4,"endColumn":7},{"ruleId":"719","severity":1,"message":"720","line":18,"column":15,"nodeType":"721","endLine":18,"endColumn":79},{"ruleId":"723","severity":1,"message":"724","line":95,"column":21,"nodeType":"721","endLine":95,"endColumn":51},{"ruleId":"715","severity":1,"message":"733","line":3,"column":22,"nodeType":"717","messageId":"718","endLine":3,"endColumn":28},{"ruleId":"715","severity":1,"message":"726","line":7,"column":10,"nodeType":"717","messageId":"718","endLine":7,"endColumn":19},{"ruleId":"715","severity":1,"message":"727","line":7,"column":21,"nodeType":"717","messageId":"718","endLine":7,"endColumn":24},{"ruleId":"715","severity":1,"message":"728","line":7,"column":26,"nodeType":"717","messageId":"718","endLine":7,"endColumn":29},{"ruleId":"715","severity":1,"message":"734","line":7,"column":31,"nodeType":"717","messageId":"718","endLine":7,"endColumn":40},{"ruleId":"715","severity":1,"message":"735","line":7,"column":42,"nodeType":"717","messageId":"718","endLine":7,"endColumn":46},{"ruleId":"715","severity":1,"message":"736","line":3,"column":3,"nodeType":"717","messageId":"718","endLine":3,"endColumn":7},{"ruleId":"715","severity":1,"message":"736","line":3,"column":3,"nodeType":"717","messageId":"718","endLine":3,"endColumn":7},{"ruleId":"715","severity":1,"message":"732","line":2,"column":16,"nodeType":"717","messageId":"718","endLine":2,"endColumn":24},{"ruleId":"715","severity":1,"message":"732","line":2,"column":16,"nodeType":"717","messageId":"718","endLine":2,"endColumn":24},{"ruleId":"715","severity":1,"message":"732","line":2,"column":16,"nodeType":"717","messageId":"718","endLine":2,"endColumn":24},{"ruleId":"711","replacedBy":"737"},{"ruleId":"713","replacedBy":"738"},{"ruleId":"715","severity":1,"message":"725","line":19,"column":14,"nodeType":"717","messageId":"718","endLine":19,"endColumn":32},{"ruleId":"715","severity":1,"message":"739","line":27,"column":11,"nodeType":"717","messageId":"718","endLine":27,"endColumn":20},{"ruleId":"715","severity":1,"message":"740","line":28,"column":9,"nodeType":"717","messageId":"718","endLine":28,"endColumn":19},{"ruleId":"715","severity":1,"message":"741","line":7,"column":10,"nodeType":"717","messageId":"718","endLine":7,"endColumn":21},{"ruleId":"715","severity":1,"message":"722","line":5,"column":31,"nodeType":"717","messageId":"718","endLine":5,"endColumn":37},{"ruleId":"723","severity":1,"message":"724","line":45,"column":34,"nodeType":"721","endLine":45,"endColumn":45},{"ruleId":"742","severity":1,"message":"743","line":87,"column":33,"nodeType":"721","endLine":87,"endColumn":144},{"ruleId":"715","severity":1,"message":"732","line":2,"column":16,"nodeType":"717","messageId":"718","endLine":2,"endColumn":24},{"ruleId":"715","severity":1,"message":"736","line":4,"column":3,"nodeType":"717","messageId":"718","endLine":4,"endColumn":7},{"ruleId":"715","severity":1,"message":"729","line":3,"column":31,"nodeType":"717","messageId":"718","endLine":3,"endColumn":35},{"ruleId":"715","severity":1,"message":"744","line":12,"column":11,"nodeType":"717","messageId":"718","endLine":12,"endColumn":19},{"ruleId":"715","severity":1,"message":"745","line":12,"column":21,"nodeType":"717","messageId":"718","endLine":12,"endColumn":33},{"ruleId":"715","severity":1,"message":"746","line":12,"column":35,"nodeType":"717","messageId":"718","endLine":12,"endColumn":43},{"ruleId":"715","severity":1,"message":"747","line":12,"column":45,"nodeType":"717","messageId":"718","endLine":12,"endColumn":51},{"ruleId":"715","severity":1,"message":"748","line":2,"column":37,"nodeType":"717","messageId":"718","endLine":2,"endColumn":43},{"ruleId":"715","severity":1,"message":"749","line":7,"column":31,"nodeType":"717","messageId":"718","endLine":7,"endColumn":47},{"ruleId":"715","severity":1,"message":"750","line":17,"column":12,"nodeType":"717","messageId":"718","endLine":17,"endColumn":20},{"ruleId":"715","severity":1,"message":"751","line":17,"column":22,"nodeType":"717","messageId":"718","endLine":17,"endColumn":33},{"ruleId":"715","severity":1,"message":"752","line":18,"column":29,"nodeType":"717","messageId":"718","endLine":18,"endColumn":47},{"ruleId":"715","severity":1,"message":"753","line":19,"column":35,"nodeType":"717","messageId":"718","endLine":19,"endColumn":59},{"ruleId":"754","severity":1,"message":"755","line":34,"column":12,"nodeType":"756","endLine":34,"endColumn":28},{"ruleId":"757","severity":1,"message":"758","line":54,"column":34,"nodeType":"759","messageId":"760","endLine":54,"endColumn":36},{"ruleId":"719","severity":1,"message":"720","line":100,"column":15,"nodeType":"721","endLine":105,"endColumn":17},{"ruleId":"715","severity":1,"message":"726","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":19},{"ruleId":"715","severity":1,"message":"727","line":2,"column":21,"nodeType":"717","messageId":"718","endLine":2,"endColumn":24},{"ruleId":"715","severity":1,"message":"728","line":2,"column":26,"nodeType":"717","messageId":"718","endLine":2,"endColumn":29},{"ruleId":"715","severity":1,"message":"733","line":3,"column":22,"nodeType":"717","messageId":"718","endLine":3,"endColumn":28},{"ruleId":"715","severity":1,"message":"761","line":18,"column":10,"nodeType":"717","messageId":"718","endLine":18,"endColumn":19},{"ruleId":"754","severity":1,"message":"762","line":67,"column":8,"nodeType":"763","endLine":67,"endColumn":10,"suggestions":"764"},{"ruleId":"754","severity":1,"message":"762","line":59,"column":8,"nodeType":"763","endLine":59,"endColumn":10,"suggestions":"765"},{"ruleId":"715","severity":1,"message":"732","line":2,"column":16,"nodeType":"717","messageId":"718","endLine":2,"endColumn":24},{"ruleId":"715","severity":1,"message":"733","line":4,"column":22,"nodeType":"717","messageId":"718","endLine":4,"endColumn":28},{"ruleId":"715","severity":1,"message":"726","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":19},{"ruleId":"715","severity":1,"message":"727","line":2,"column":21,"nodeType":"717","messageId":"718","endLine":2,"endColumn":24},{"ruleId":"715","severity":1,"message":"728","line":2,"column":26,"nodeType":"717","messageId":"718","endLine":2,"endColumn":29},{"ruleId":"715","severity":1,"message":"734","line":2,"column":31,"nodeType":"717","messageId":"718","endLine":2,"endColumn":40},{"ruleId":"715","severity":1,"message":"735","line":2,"column":42,"nodeType":"717","messageId":"718","endLine":2,"endColumn":46},{"ruleId":"715","severity":1,"message":"766","line":3,"column":11,"nodeType":"717","messageId":"718","endLine":3,"endColumn":19},{"ruleId":"719","severity":1,"message":"720","line":24,"column":27,"nodeType":"721","endLine":24,"endColumn":87},{"ruleId":"719","severity":1,"message":"720","line":32,"column":27,"nodeType":"721","endLine":32,"endColumn":87},{"ruleId":"715","severity":1,"message":"732","line":2,"column":16,"nodeType":"717","messageId":"718","endLine":2,"endColumn":24},{"ruleId":"715","severity":1,"message":"767","line":19,"column":45,"nodeType":"717","messageId":"718","endLine":19,"endColumn":50},{"ruleId":"715","severity":1,"message":"768","line":23,"column":26,"nodeType":"717","messageId":"718","endLine":23,"endColumn":41},{"ruleId":"715","severity":1,"message":"769","line":24,"column":26,"nodeType":"717","messageId":"718","endLine":24,"endColumn":41},{"ruleId":"715","severity":1,"message":"770","line":25,"column":28,"nodeType":"717","messageId":"718","endLine":25,"endColumn":45},{"ruleId":"757","severity":1,"message":"771","line":39,"column":67,"nodeType":"759","messageId":"760","endLine":39,"endColumn":69},{"ruleId":"715","severity":1,"message":"726","line":4,"column":10,"nodeType":"717","messageId":"718","endLine":4,"endColumn":19},{"ruleId":"715","severity":1,"message":"727","line":4,"column":21,"nodeType":"717","messageId":"718","endLine":4,"endColumn":24},{"ruleId":"715","severity":1,"message":"730","line":5,"column":11,"nodeType":"717","messageId":"718","endLine":5,"endColumn":21},{"ruleId":"715","severity":1,"message":"731","line":5,"column":23,"nodeType":"717","messageId":"718","endLine":5,"endColumn":34},{"ruleId":"715","severity":1,"message":"746","line":15,"column":35,"nodeType":"717","messageId":"718","endLine":15,"endColumn":43},{"ruleId":"715","severity":1,"message":"747","line":15,"column":45,"nodeType":"717","messageId":"718","endLine":15,"endColumn":51},{"ruleId":"715","severity":1,"message":"772","line":16,"column":10,"nodeType":"717","messageId":"718","endLine":16,"endColumn":17},{"ruleId":"715","severity":1,"message":"773","line":16,"column":19,"nodeType":"717","messageId":"718","endLine":16,"endColumn":29},{"ruleId":"774","severity":1,"message":"775","line":21,"column":40,"nodeType":"776","messageId":"777","endLine":21,"endColumn":42},{"ruleId":"715","severity":1,"message":"728","line":3,"column":16,"nodeType":"717","messageId":"718","endLine":3,"endColumn":19},{"ruleId":"715","severity":1,"message":"778","line":5,"column":3,"nodeType":"717","messageId":"718","endLine":5,"endColumn":13},{"ruleId":"757","severity":1,"message":"771","line":47,"column":67,"nodeType":"759","messageId":"760","endLine":47,"endColumn":69},{"ruleId":"715","severity":1,"message":"747","line":18,"column":37,"nodeType":"717","messageId":"718","endLine":18,"endColumn":43},{"ruleId":"715","severity":1,"message":"767","line":18,"column":45,"nodeType":"717","messageId":"718","endLine":18,"endColumn":50},{"ruleId":"715","severity":1,"message":"768","line":22,"column":26,"nodeType":"717","messageId":"718","endLine":22,"endColumn":41},{"ruleId":"715","severity":1,"message":"769","line":23,"column":26,"nodeType":"717","messageId":"718","endLine":23,"endColumn":41},{"ruleId":"715","severity":1,"message":"770","line":24,"column":28,"nodeType":"717","messageId":"718","endLine":24,"endColumn":45},{"ruleId":"757","severity":1,"message":"771","line":43,"column":67,"nodeType":"759","messageId":"760","endLine":43,"endColumn":69},{"ruleId":"715","severity":1,"message":"729","line":7,"column":5,"nodeType":"717","messageId":"718","endLine":7,"endColumn":9},{"ruleId":"715","severity":1,"message":"730","line":7,"column":11,"nodeType":"717","messageId":"718","endLine":7,"endColumn":21},{"ruleId":"715","severity":1,"message":"731","line":7,"column":23,"nodeType":"717","messageId":"718","endLine":7,"endColumn":34},{"ruleId":"715","severity":1,"message":"722","line":8,"column":5,"nodeType":"717","messageId":"718","endLine":8,"endColumn":11},{"ruleId":"719","severity":1,"message":"720","line":30,"column":31,"nodeType":"721","endLine":30,"endColumn":108},{"ruleId":"779","severity":1,"message":"780","line":55,"column":30,"nodeType":"721","endLine":55,"endColumn":89},{"ruleId":"781","severity":2,"message":"782","line":25,"column":11,"nodeType":"717","messageId":"783","endLine":25,"endColumn":14},{"ruleId":"715","severity":1,"message":"784","line":2,"column":16,"nodeType":"717","messageId":"718","endLine":2,"endColumn":24},{"ruleId":"715","severity":1,"message":"785","line":2,"column":8,"nodeType":"717","messageId":"718","endLine":2,"endColumn":13},{"ruleId":"715","severity":1,"message":"784","line":2,"column":16,"nodeType":"717","messageId":"718","endLine":2,"endColumn":24},{"ruleId":"715","severity":1,"message":"786","line":9,"column":12,"nodeType":"717","messageId":"718","endLine":9,"endColumn":21},{"ruleId":"715","severity":1,"message":"767","line":18,"column":45,"nodeType":"717","messageId":"718","endLine":18,"endColumn":50},{"ruleId":"715","severity":1,"message":"768","line":22,"column":26,"nodeType":"717","messageId":"718","endLine":22,"endColumn":41},{"ruleId":"715","severity":1,"message":"769","line":23,"column":26,"nodeType":"717","messageId":"718","endLine":23,"endColumn":41},{"ruleId":"715","severity":1,"message":"770","line":24,"column":28,"nodeType":"717","messageId":"718","endLine":24,"endColumn":45},{"ruleId":"715","severity":1,"message":"787","line":3,"column":10,"nodeType":"717","messageId":"718","endLine":3,"endColumn":15},{"ruleId":"715","severity":1,"message":"788","line":3,"column":17,"nodeType":"717","messageId":"718","endLine":3,"endColumn":25},{"ruleId":"715","severity":1,"message":"789","line":4,"column":8,"nodeType":"717","messageId":"718","endLine":4,"endColumn":26},{"ruleId":"715","severity":1,"message":"744","line":13,"column":13,"nodeType":"717","messageId":"718","endLine":13,"endColumn":21},{"ruleId":"715","severity":1,"message":"746","line":13,"column":37,"nodeType":"717","messageId":"718","endLine":13,"endColumn":45},{"ruleId":"715","severity":1,"message":"747","line":13,"column":47,"nodeType":"717","messageId":"718","endLine":13,"endColumn":53},{"ruleId":"754","severity":1,"message":"790","line":108,"column":8,"nodeType":"763","endLine":108,"endColumn":10,"suggestions":"791"},{"ruleId":"754","severity":1,"message":"762","line":59,"column":8,"nodeType":"763","endLine":59,"endColumn":10,"suggestions":"792"},{"ruleId":"715","severity":1,"message":"747","line":13,"column":47,"nodeType":"717","messageId":"718","endLine":13,"endColumn":53},{"ruleId":"715","severity":1,"message":"793","line":16,"column":12,"nodeType":"717","messageId":"718","endLine":16,"endColumn":24},{"ruleId":"715","severity":1,"message":"794","line":17,"column":12,"nodeType":"717","messageId":"718","endLine":17,"endColumn":24},{"ruleId":"754","severity":1,"message":"762","line":62,"column":8,"nodeType":"763","endLine":62,"endColumn":10,"suggestions":"795"},{"ruleId":"715","severity":1,"message":"748","line":2,"column":38,"nodeType":"717","messageId":"718","endLine":2,"endColumn":44},{"ruleId":"715","severity":1,"message":"722","line":7,"column":6,"nodeType":"717","messageId":"718","endLine":7,"endColumn":12},{"ruleId":"715","severity":1,"message":"796","line":22,"column":23,"nodeType":"717","messageId":"718","endLine":22,"endColumn":35},{"ruleId":"754","severity":1,"message":"797","line":76,"column":7,"nodeType":"763","endLine":76,"endColumn":9,"suggestions":"798"},{"ruleId":"719","severity":1,"message":"720","line":134,"column":21,"nodeType":"721","endLine":134,"endColumn":152},{"ruleId":"779","severity":1,"message":"780","line":141,"column":33,"nodeType":"721","endLine":141,"endColumn":98},{"ruleId":"779","severity":1,"message":"780","line":144,"column":33,"nodeType":"721","endLine":144,"endColumn":76},{"ruleId":"779","severity":1,"message":"799","line":270,"column":36,"nodeType":"721","endLine":270,"endColumn":94},{"ruleId":"779","severity":1,"message":"799","line":273,"column":37,"nodeType":"721","endLine":273,"endColumn":73},{"ruleId":"779","severity":1,"message":"800","line":305,"column":31,"nodeType":"721","endLine":307,"endColumn":33},{"ruleId":"779","severity":1,"message":"801","line":311,"column":30,"nodeType":"721","endLine":317,"endColumn":31},{"ruleId":"779","severity":1,"message":"802","line":324,"column":31,"nodeType":"721","endLine":330,"endColumn":32},{"ruleId":"779","severity":1,"message":"803","line":333,"column":31,"nodeType":"721","endLine":338,"endColumn":32},{"ruleId":"804","severity":1,"message":"805","line":4,"column":1,"nodeType":"806","endLine":17,"endColumn":3},{"ruleId":"715","severity":1,"message":"736","line":4,"column":3,"nodeType":"717","messageId":"718","endLine":4,"endColumn":7},{"ruleId":"715","severity":1,"message":"778","line":5,"column":3,"nodeType":"717","messageId":"718","endLine":5,"endColumn":13},{"ruleId":"715","severity":1,"message":"767","line":19,"column":45,"nodeType":"717","messageId":"718","endLine":19,"endColumn":50},{"ruleId":"757","severity":1,"message":"771","line":45,"column":67,"nodeType":"759","messageId":"760","endLine":45,"endColumn":69},{"ruleId":"742","severity":1,"message":"743","line":110,"column":29,"nodeType":"721","endLine":110,"endColumn":140},{"ruleId":"715","severity":1,"message":"807","line":8,"column":8,"nodeType":"717","messageId":"718","endLine":8,"endColumn":18},{"ruleId":"715","severity":1,"message":"808","line":9,"column":8,"nodeType":"717","messageId":"718","endLine":9,"endColumn":14},{"ruleId":"715","severity":1,"message":"809","line":13,"column":8,"nodeType":"717","messageId":"718","endLine":13,"endColumn":14},{"ruleId":"715","severity":1,"message":"810","line":14,"column":28,"nodeType":"717","messageId":"718","endLine":14,"endColumn":35},{"ruleId":"715","severity":1,"message":"811","line":15,"column":8,"nodeType":"717","messageId":"718","endLine":15,"endColumn":18},{"ruleId":"715","severity":1,"message":"812","line":16,"column":8,"nodeType":"717","messageId":"718","endLine":16,"endColumn":18},{"ruleId":"715","severity":1,"message":"813","line":17,"column":8,"nodeType":"717","messageId":"718","endLine":17,"endColumn":22},{"ruleId":"715","severity":1,"message":"814","line":18,"column":8,"nodeType":"717","messageId":"718","endLine":18,"endColumn":13},{"ruleId":"715","severity":1,"message":"815","line":19,"column":8,"nodeType":"717","messageId":"718","endLine":19,"endColumn":14},{"ruleId":"715","severity":1,"message":"816","line":20,"column":8,"nodeType":"717","messageId":"718","endLine":20,"endColumn":18},{"ruleId":"715","severity":1,"message":"817","line":21,"column":8,"nodeType":"717","messageId":"718","endLine":21,"endColumn":16},{"ruleId":"715","severity":1,"message":"818","line":36,"column":10,"nodeType":"717","messageId":"718","endLine":36,"endColumn":15},{"ruleId":"715","severity":1,"message":"819","line":53,"column":10,"nodeType":"717","messageId":"718","endLine":53,"endColumn":35},{"ruleId":"754","severity":1,"message":"820","line":165,"column":6,"nodeType":"763","endLine":165,"endColumn":8,"suggestions":"821"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":410,"nodeType":"824","messageId":"825","endLine":361,"endColumn":411,"suggestions":"826"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":491,"nodeType":"824","messageId":"825","endLine":361,"endColumn":492,"suggestions":"827"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":556,"nodeType":"824","messageId":"825","endLine":361,"endColumn":557,"suggestions":"828"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":583,"nodeType":"824","messageId":"825","endLine":361,"endColumn":584,"suggestions":"829"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":604,"nodeType":"824","messageId":"825","endLine":361,"endColumn":605,"suggestions":"830"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":642,"nodeType":"824","messageId":"825","endLine":361,"endColumn":643,"suggestions":"831"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":676,"nodeType":"824","messageId":"825","endLine":361,"endColumn":677,"suggestions":"832"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":745,"nodeType":"824","messageId":"825","endLine":361,"endColumn":746,"suggestions":"833"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":768,"nodeType":"824","messageId":"825","endLine":361,"endColumn":769,"suggestions":"834"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":773,"nodeType":"824","messageId":"825","endLine":361,"endColumn":774,"suggestions":"835"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":811,"nodeType":"824","messageId":"825","endLine":361,"endColumn":812,"suggestions":"836"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":824,"nodeType":"824","messageId":"825","endLine":361,"endColumn":825,"suggestions":"837"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":849,"nodeType":"824","messageId":"825","endLine":361,"endColumn":850,"suggestions":"838"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":858,"nodeType":"824","messageId":"825","endLine":361,"endColumn":859,"suggestions":"839"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":891,"nodeType":"824","messageId":"825","endLine":361,"endColumn":892,"suggestions":"840"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":915,"nodeType":"824","messageId":"825","endLine":361,"endColumn":916,"suggestions":"841"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1019,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1020,"suggestions":"842"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1063,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1064,"suggestions":"843"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1084,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1085,"suggestions":"844"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1126,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1127,"suggestions":"845"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1179,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1180,"suggestions":"846"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1276,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1277,"suggestions":"847"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1361,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1362,"suggestions":"848"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1396,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1397,"suggestions":"849"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1425,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1426,"suggestions":"850"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1431,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1432,"suggestions":"851"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1453,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1454,"suggestions":"852"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1462,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1463,"suggestions":"853"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1536,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1537,"suggestions":"854"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1543,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1544,"suggestions":"855"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1558,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1559,"suggestions":"856"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1582,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1583,"suggestions":"857"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1594,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1595,"suggestions":"858"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1602,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1603,"suggestions":"859"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1652,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1653,"suggestions":"860"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1656,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1657,"suggestions":"861"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1709,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1710,"suggestions":"862"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1715,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1716,"suggestions":"863"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1730,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1731,"suggestions":"864"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1734,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1735,"suggestions":"865"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1756,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1757,"suggestions":"866"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1768,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1769,"suggestions":"867"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1829,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1830,"suggestions":"868"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1887,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1888,"suggestions":"869"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1934,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1935,"suggestions":"870"},{"ruleId":"822","severity":1,"message":"823","line":361,"column":1950,"nodeType":"824","messageId":"825","endLine":361,"endColumn":1951,"suggestions":"871"},{"ruleId":"715","severity":1,"message":"736","line":4,"column":3,"nodeType":"717","messageId":"718","endLine":4,"endColumn":7},{"ruleId":"715","severity":1,"message":"778","line":5,"column":3,"nodeType":"717","messageId":"718","endLine":5,"endColumn":13},{"ruleId":"715","severity":1,"message":"767","line":20,"column":45,"nodeType":"717","messageId":"718","endLine":20,"endColumn":50},{"ruleId":"715","severity":1,"message":"872","line":23,"column":12,"nodeType":"717","messageId":"718","endLine":23,"endColumn":21},{"ruleId":"715","severity":1,"message":"873","line":23,"column":23,"nodeType":"717","messageId":"718","endLine":23,"endColumn":35},{"ruleId":"715","severity":1,"message":"874","line":24,"column":12,"nodeType":"717","messageId":"718","endLine":24,"endColumn":24},{"ruleId":"715","severity":1,"message":"768","line":24,"column":26,"nodeType":"717","messageId":"718","endLine":24,"endColumn":41},{"ruleId":"715","severity":1,"message":"875","line":25,"column":12,"nodeType":"717","messageId":"718","endLine":25,"endColumn":24},{"ruleId":"715","severity":1,"message":"769","line":25,"column":26,"nodeType":"717","messageId":"718","endLine":25,"endColumn":41},{"ruleId":"715","severity":1,"message":"876","line":26,"column":12,"nodeType":"717","messageId":"718","endLine":26,"endColumn":26},{"ruleId":"715","severity":1,"message":"770","line":26,"column":28,"nodeType":"717","messageId":"718","endLine":26,"endColumn":45},{"ruleId":"715","severity":1,"message":"729","line":5,"column":30,"nodeType":"717","messageId":"718","endLine":5,"endColumn":34},{"ruleId":"715","severity":1,"message":"722","line":5,"column":36,"nodeType":"717","messageId":"718","endLine":5,"endColumn":42},{"ruleId":"715","severity":1,"message":"744","line":16,"column":13,"nodeType":"717","messageId":"718","endLine":16,"endColumn":21},{"ruleId":"715","severity":1,"message":"745","line":16,"column":23,"nodeType":"717","messageId":"718","endLine":16,"endColumn":35},{"ruleId":"715","severity":1,"message":"746","line":16,"column":37,"nodeType":"717","messageId":"718","endLine":16,"endColumn":45},{"ruleId":"715","severity":1,"message":"747","line":16,"column":47,"nodeType":"717","messageId":"718","endLine":16,"endColumn":53},{"ruleId":"754","severity":1,"message":"790","line":33,"column":8,"nodeType":"763","endLine":33,"endColumn":10,"suggestions":"877"},{"ruleId":"715","severity":1,"message":"736","line":3,"column":5,"nodeType":"717","messageId":"718","endLine":3,"endColumn":9},{"ruleId":"715","severity":1,"message":"878","line":5,"column":44,"nodeType":"717","messageId":"718","endLine":5,"endColumn":49},{"ruleId":"715","severity":1,"message":"879","line":9,"column":10,"nodeType":"717","messageId":"718","endLine":9,"endColumn":29},{"ruleId":"715","severity":1,"message":"796","line":15,"column":23,"nodeType":"717","messageId":"718","endLine":15,"endColumn":35},{"ruleId":"715","severity":1,"message":"744","line":16,"column":13,"nodeType":"717","messageId":"718","endLine":16,"endColumn":21},{"ruleId":"715","severity":1,"message":"746","line":16,"column":37,"nodeType":"717","messageId":"718","endLine":16,"endColumn":45},{"ruleId":"715","severity":1,"message":"747","line":16,"column":47,"nodeType":"717","messageId":"718","endLine":16,"endColumn":53},{"ruleId":"715","severity":1,"message":"880","line":21,"column":9,"nodeType":"717","messageId":"718","endLine":21,"endColumn":18},{"ruleId":"754","severity":1,"message":"881","line":77,"column":8,"nodeType":"763","endLine":77,"endColumn":10,"suggestions":"882"},{"ruleId":"715","severity":1,"message":"883","line":80,"column":14,"nodeType":"717","messageId":"718","endLine":80,"endColumn":18},{"ruleId":"774","severity":1,"message":"775","line":117,"column":46,"nodeType":"776","messageId":"777","endLine":117,"endColumn":48},{"ruleId":"757","severity":1,"message":"758","line":119,"column":40,"nodeType":"759","messageId":"760","endLine":119,"endColumn":42},{"ruleId":"715","severity":1,"message":"884","line":8,"column":12,"nodeType":"717","messageId":"718","endLine":8,"endColumn":18},{"ruleId":"715","severity":1,"message":"818","line":9,"column":12,"nodeType":"717","messageId":"718","endLine":9,"endColumn":17},{"ruleId":"715","severity":1,"message":"729","line":5,"column":30,"nodeType":"717","messageId":"718","endLine":5,"endColumn":34},{"ruleId":"715","severity":1,"message":"722","line":5,"column":36,"nodeType":"717","messageId":"718","endLine":5,"endColumn":42},{"ruleId":"715","severity":1,"message":"744","line":17,"column":13,"nodeType":"717","messageId":"718","endLine":17,"endColumn":21},{"ruleId":"715","severity":1,"message":"745","line":17,"column":23,"nodeType":"717","messageId":"718","endLine":17,"endColumn":35},{"ruleId":"715","severity":1,"message":"746","line":17,"column":37,"nodeType":"717","messageId":"718","endLine":17,"endColumn":45},{"ruleId":"715","severity":1,"message":"747","line":17,"column":47,"nodeType":"717","messageId":"718","endLine":17,"endColumn":53},{"ruleId":"754","severity":1,"message":"790","line":34,"column":8,"nodeType":"763","endLine":34,"endColumn":10,"suggestions":"885"},{"ruleId":"715","severity":1,"message":"736","line":3,"column":5,"nodeType":"717","messageId":"718","endLine":3,"endColumn":9},{"ruleId":"715","severity":1,"message":"729","line":5,"column":30,"nodeType":"717","messageId":"718","endLine":5,"endColumn":34},{"ruleId":"715","severity":1,"message":"722","line":5,"column":36,"nodeType":"717","messageId":"718","endLine":5,"endColumn":42},{"ruleId":"715","severity":1,"message":"878","line":5,"column":44,"nodeType":"717","messageId":"718","endLine":5,"endColumn":49},{"ruleId":"715","severity":1,"message":"744","line":15,"column":13,"nodeType":"717","messageId":"718","endLine":15,"endColumn":21},{"ruleId":"715","severity":1,"message":"745","line":15,"column":23,"nodeType":"717","messageId":"718","endLine":15,"endColumn":35},{"ruleId":"715","severity":1,"message":"746","line":15,"column":37,"nodeType":"717","messageId":"718","endLine":15,"endColumn":45},{"ruleId":"715","severity":1,"message":"747","line":15,"column":47,"nodeType":"717","messageId":"718","endLine":15,"endColumn":53},{"ruleId":"715","severity":1,"message":"886","line":16,"column":12,"nodeType":"717","messageId":"718","endLine":16,"endColumn":19},{"ruleId":"754","severity":1,"message":"790","line":32,"column":8,"nodeType":"763","endLine":32,"endColumn":10,"suggestions":"887"},{"ruleId":"715","severity":1,"message":"736","line":4,"column":3,"nodeType":"717","messageId":"718","endLine":4,"endColumn":7},{"ruleId":"715","severity":1,"message":"778","line":5,"column":3,"nodeType":"717","messageId":"718","endLine":5,"endColumn":13},{"ruleId":"715","severity":1,"message":"872","line":23,"column":12,"nodeType":"717","messageId":"718","endLine":23,"endColumn":21},{"ruleId":"715","severity":1,"message":"873","line":23,"column":23,"nodeType":"717","messageId":"718","endLine":23,"endColumn":35},{"ruleId":"715","severity":1,"message":"874","line":24,"column":12,"nodeType":"717","messageId":"718","endLine":24,"endColumn":24},{"ruleId":"715","severity":1,"message":"768","line":24,"column":26,"nodeType":"717","messageId":"718","endLine":24,"endColumn":41},{"ruleId":"715","severity":1,"message":"875","line":25,"column":12,"nodeType":"717","messageId":"718","endLine":25,"endColumn":24},{"ruleId":"715","severity":1,"message":"769","line":25,"column":26,"nodeType":"717","messageId":"718","endLine":25,"endColumn":41},{"ruleId":"715","severity":1,"message":"876","line":26,"column":12,"nodeType":"717","messageId":"718","endLine":26,"endColumn":26},{"ruleId":"715","severity":1,"message":"770","line":26,"column":28,"nodeType":"717","messageId":"718","endLine":26,"endColumn":45},{"ruleId":"754","severity":1,"message":"888","line":75,"column":8,"nodeType":"763","endLine":75,"endColumn":10,"suggestions":"889"},{"ruleId":"715","severity":1,"message":"890","line":2,"column":26,"nodeType":"717","messageId":"718","endLine":2,"endColumn":35},{"ruleId":"715","severity":1,"message":"729","line":3,"column":30,"nodeType":"717","messageId":"718","endLine":3,"endColumn":34},{"ruleId":"715","severity":1,"message":"722","line":3,"column":36,"nodeType":"717","messageId":"718","endLine":3,"endColumn":42},{"ruleId":"715","severity":1,"message":"891","line":5,"column":11,"nodeType":"717","messageId":"718","endLine":5,"endColumn":26},{"ruleId":"715","severity":1,"message":"892","line":5,"column":28,"nodeType":"717","messageId":"718","endLine":5,"endColumn":46},{"ruleId":"715","severity":1,"message":"796","line":12,"column":23,"nodeType":"717","messageId":"718","endLine":12,"endColumn":35},{"ruleId":"715","severity":1,"message":"744","line":13,"column":13,"nodeType":"717","messageId":"718","endLine":13,"endColumn":21},{"ruleId":"715","severity":1,"message":"745","line":13,"column":23,"nodeType":"717","messageId":"718","endLine":13,"endColumn":35},{"ruleId":"715","severity":1,"message":"746","line":13,"column":37,"nodeType":"717","messageId":"718","endLine":13,"endColumn":45},{"ruleId":"715","severity":1,"message":"747","line":13,"column":47,"nodeType":"717","messageId":"718","endLine":13,"endColumn":53},{"ruleId":"779","severity":1,"message":"800","line":69,"column":31,"nodeType":"721","endLine":71,"endColumn":33},{"ruleId":"779","severity":1,"message":"801","line":75,"column":30,"nodeType":"721","endLine":80,"endColumn":31},{"ruleId":"779","severity":1,"message":"802","line":87,"column":31,"nodeType":"721","endLine":94,"endColumn":32},{"ruleId":"779","severity":1,"message":"803","line":97,"column":31,"nodeType":"721","endLine":101,"endColumn":32},{"ruleId":"715","severity":1,"message":"722","line":3,"column":31,"nodeType":"717","messageId":"718","endLine":3,"endColumn":37},{"ruleId":"754","severity":1,"message":"893","line":27,"column":8,"nodeType":"763","endLine":27,"endColumn":10,"suggestions":"894"},{"ruleId":"719","severity":1,"message":"720","line":40,"column":37,"nodeType":"721","endLine":40,"endColumn":90},"no-native-reassign",["895"],"no-negated-in-lhs",["896"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ForgotPasswordView' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'setState' is defined but never used.","'Router' is defined but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","'Link' is defined but never used.",["895"],["896"],"'DSChatBox' is defined but never used.","'Dashboard2' is defined but never used.","'BannerImage' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'setValue' is assigned a value but never used.","'errors' is assigned a value but never used.","'useRef' is defined but never used.","'getCustomerImage' is defined but never used.","'customer' is assigned a value but never used.","'setcustomer' is assigned a value but never used.","'setactiveLinkClass' is assigned a value but never used.","'setactiveAccordionsClass' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'user' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'WebrtcApp' is defined but never used.","React Hook useEffect has missing dependencies: 'setValue' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["897"],["898"],"'DSHeader' is defined but never used.","'watch' is assigned a value but never used.","'setModalHeading' is assigned a value but never used.","'setModalMessage' is assigned a value but never used.","'setisSuccessModal' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'subject' is assigned a value but never used.","'setSubject' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useHistory' is defined but never used.","react/jsx-pascal-case","Imported JSX component profileListingStars must be in PascalCase or SCREAMING_SNAKE_CASE","no-undef","'put' is not defined.","undef","'useState' is defined but never used.","'React' is defined but never used.","'isLoading' is assigned a value but never used.","'Admin' is defined but never used.","'Resource' is defined but never used.","'simpleRestProvider' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["899"],["900"],"'teachingCity' is assigned a value but never used.","'teachingArea' is assigned a value but never used.",["901"],"'setIsLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array. If 'setprofilerId' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["902"],"Imported JSX component profileView must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component rating must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component feedbackReasons must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component messageBox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component ratingSubmit must be in PascalCase or SCREAMING_SNAKE_CASE","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Navigation' is defined but never used.","'Footer' is defined but never used.","'camera' is defined but never used.","'YourSvg' is defined but never used.","'camerastop' is defined but never used.","'microphone' is defined but never used.","'microphonestop' is defined but never used.","'share' is defined but never used.","'hangup' is defined but never used.","'fullscreen' is defined but never used.","'minimize' is defined but never used.","'users' is assigned a value but never used.","'disableusernameinputfield' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'yourID'. Either include them or remove the dependency array.",["903"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["904","905"],["906","907"],["908","909"],["910","911"],["912","913"],["914","915"],["916","917"],["918","919"],["920","921"],["922","923"],["924","925"],["926","927"],["928","929"],["930","931"],["932","933"],["934","935"],["936","937"],["938","939"],["940","941"],["942","943"],["944","945"],["946","947"],["948","949"],["950","951"],["952","953"],["954","955"],["956","957"],["958","959"],["960","961"],["962","963"],["964","965"],["966","967"],["968","969"],["970","971"],["972","973"],["974","975"],["976","977"],["978","979"],["980","981"],["982","983"],["984","985"],["986","987"],["988","989"],["990","991"],["992","993"],["994","995"],"'modalShow' is assigned a value but never used.","'setModalShow' is assigned a value but never used.","'modalHeading' is assigned a value but never used.","'modalMessage' is assigned a value but never used.","'isSuccessModal' is assigned a value but never used.",["996"],"'Table' is defined but never used.","'NotificationManager' is defined but never used.","'userImage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chatWith', 'messagesList', 'props.match', and 'userId'. Either include them or remove the dependency array.",["997"],"'name' is assigned a value but never used.","'yourID' is assigned a value but never used.",["998"],"'classes' is assigned a value but never used.",["999"],"React Hook useEffect has missing dependencies: 'props.match.params.requestId' and 'setValue'. Either include them or remove the dependency array.",["1000"],"'useEffect' is defined but never used.","'getCustomerById' is defined but never used.","'updateCustomerInfo' is defined but never used.","React Hook useEffect has a missing dependency: 'imagesList'. Either include it or remove the dependency array.",["1001"],"no-global-assign","no-unsafe-negation",{"desc":"1002","fix":"1003"},{"desc":"1002","fix":"1004"},{"desc":"1005","fix":"1006"},{"desc":"1002","fix":"1007"},{"desc":"1002","fix":"1008"},{"desc":"1009","fix":"1010"},{"desc":"1011","fix":"1012"},{"messageId":"1013","fix":"1014","desc":"1015"},{"messageId":"1016","fix":"1017","desc":"1018"},{"messageId":"1013","fix":"1019","desc":"1015"},{"messageId":"1016","fix":"1020","desc":"1018"},{"messageId":"1013","fix":"1021","desc":"1015"},{"messageId":"1016","fix":"1022","desc":"1018"},{"messageId":"1013","fix":"1023","desc":"1015"},{"messageId":"1016","fix":"1024","desc":"1018"},{"messageId":"1013","fix":"1025","desc":"1015"},{"messageId":"1016","fix":"1026","desc":"1018"},{"messageId":"1013","fix":"1027","desc":"1015"},{"messageId":"1016","fix":"1028","desc":"1018"},{"messageId":"1013","fix":"1029","desc":"1015"},{"messageId":"1016","fix":"1030","desc":"1018"},{"messageId":"1013","fix":"1031","desc":"1015"},{"messageId":"1016","fix":"1032","desc":"1018"},{"messageId":"1013","fix":"1033","desc":"1015"},{"messageId":"1016","fix":"1034","desc":"1018"},{"messageId":"1013","fix":"1035","desc":"1015"},{"messageId":"1016","fix":"1036","desc":"1018"},{"messageId":"1013","fix":"1037","desc":"1015"},{"messageId":"1016","fix":"1038","desc":"1018"},{"messageId":"1013","fix":"1039","desc":"1015"},{"messageId":"1016","fix":"1040","desc":"1018"},{"messageId":"1013","fix":"1041","desc":"1015"},{"messageId":"1016","fix":"1042","desc":"1018"},{"messageId":"1013","fix":"1043","desc":"1015"},{"messageId":"1016","fix":"1044","desc":"1018"},{"messageId":"1013","fix":"1045","desc":"1015"},{"messageId":"1016","fix":"1046","desc":"1018"},{"messageId":"1013","fix":"1047","desc":"1015"},{"messageId":"1016","fix":"1048","desc":"1018"},{"messageId":"1013","fix":"1049","desc":"1015"},{"messageId":"1016","fix":"1050","desc":"1018"},{"messageId":"1013","fix":"1051","desc":"1015"},{"messageId":"1016","fix":"1052","desc":"1018"},{"messageId":"1013","fix":"1053","desc":"1015"},{"messageId":"1016","fix":"1054","desc":"1018"},{"messageId":"1013","fix":"1055","desc":"1015"},{"messageId":"1016","fix":"1056","desc":"1018"},{"messageId":"1013","fix":"1057","desc":"1015"},{"messageId":"1016","fix":"1058","desc":"1018"},{"messageId":"1013","fix":"1059","desc":"1015"},{"messageId":"1016","fix":"1060","desc":"1018"},{"messageId":"1013","fix":"1061","desc":"1015"},{"messageId":"1016","fix":"1062","desc":"1018"},{"messageId":"1013","fix":"1063","desc":"1015"},{"messageId":"1016","fix":"1064","desc":"1018"},{"messageId":"1013","fix":"1065","desc":"1015"},{"messageId":"1016","fix":"1066","desc":"1018"},{"messageId":"1013","fix":"1067","desc":"1015"},{"messageId":"1016","fix":"1068","desc":"1018"},{"messageId":"1013","fix":"1069","desc":"1015"},{"messageId":"1016","fix":"1070","desc":"1018"},{"messageId":"1013","fix":"1071","desc":"1015"},{"messageId":"1016","fix":"1072","desc":"1018"},{"messageId":"1013","fix":"1073","desc":"1015"},{"messageId":"1016","fix":"1074","desc":"1018"},{"messageId":"1013","fix":"1075","desc":"1015"},{"messageId":"1016","fix":"1076","desc":"1018"},{"messageId":"1013","fix":"1077","desc":"1015"},{"messageId":"1016","fix":"1078","desc":"1018"},{"messageId":"1013","fix":"1079","desc":"1015"},{"messageId":"1016","fix":"1080","desc":"1018"},{"messageId":"1013","fix":"1081","desc":"1015"},{"messageId":"1016","fix":"1082","desc":"1018"},{"messageId":"1013","fix":"1083","desc":"1015"},{"messageId":"1016","fix":"1084","desc":"1018"},{"messageId":"1013","fix":"1085","desc":"1015"},{"messageId":"1016","fix":"1086","desc":"1018"},{"messageId":"1013","fix":"1087","desc":"1015"},{"messageId":"1016","fix":"1088","desc":"1018"},{"messageId":"1013","fix":"1089","desc":"1015"},{"messageId":"1016","fix":"1090","desc":"1018"},{"messageId":"1013","fix":"1091","desc":"1015"},{"messageId":"1016","fix":"1092","desc":"1018"},{"messageId":"1013","fix":"1093","desc":"1015"},{"messageId":"1016","fix":"1094","desc":"1018"},{"messageId":"1013","fix":"1095","desc":"1015"},{"messageId":"1016","fix":"1096","desc":"1018"},{"messageId":"1013","fix":"1097","desc":"1015"},{"messageId":"1016","fix":"1098","desc":"1018"},{"messageId":"1013","fix":"1099","desc":"1015"},{"messageId":"1016","fix":"1100","desc":"1018"},{"messageId":"1013","fix":"1101","desc":"1015"},{"messageId":"1016","fix":"1102","desc":"1018"},{"messageId":"1013","fix":"1103","desc":"1015"},{"messageId":"1016","fix":"1104","desc":"1018"},{"messageId":"1013","fix":"1105","desc":"1015"},{"messageId":"1016","fix":"1106","desc":"1018"},{"messageId":"1013","fix":"1107","desc":"1015"},{"messageId":"1016","fix":"1108","desc":"1018"},{"desc":"1005","fix":"1109"},{"desc":"1110","fix":"1111"},{"desc":"1005","fix":"1112"},{"desc":"1005","fix":"1113"},{"desc":"1114","fix":"1115"},{"desc":"1116","fix":"1117"},"Update the dependencies array to be: [setValue, userId]",{"range":"1118","text":"1119"},{"range":"1120","text":"1119"},"Update the dependencies array to be: [userId]",{"range":"1121","text":"1122"},{"range":"1123","text":"1119"},{"range":"1124","text":"1119"},"Update the dependencies array to be: [props.match.params.id]",{"range":"1125","text":"1126"},"Update the dependencies array to be: [props, yourID]",{"range":"1127","text":"1128"},"removeEscape",{"range":"1129","text":"1130"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1131","text":"1132"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1133","text":"1130"},{"range":"1134","text":"1132"},{"range":"1135","text":"1130"},{"range":"1136","text":"1132"},{"range":"1137","text":"1130"},{"range":"1138","text":"1132"},{"range":"1139","text":"1130"},{"range":"1140","text":"1132"},{"range":"1141","text":"1130"},{"range":"1142","text":"1132"},{"range":"1143","text":"1130"},{"range":"1144","text":"1132"},{"range":"1145","text":"1130"},{"range":"1146","text":"1132"},{"range":"1147","text":"1130"},{"range":"1148","text":"1132"},{"range":"1149","text":"1130"},{"range":"1150","text":"1132"},{"range":"1151","text":"1130"},{"range":"1152","text":"1132"},{"range":"1153","text":"1130"},{"range":"1154","text":"1132"},{"range":"1155","text":"1130"},{"range":"1156","text":"1132"},{"range":"1157","text":"1130"},{"range":"1158","text":"1132"},{"range":"1159","text":"1130"},{"range":"1160","text":"1132"},{"range":"1161","text":"1130"},{"range":"1162","text":"1132"},{"range":"1163","text":"1130"},{"range":"1164","text":"1132"},{"range":"1165","text":"1130"},{"range":"1166","text":"1132"},{"range":"1167","text":"1130"},{"range":"1168","text":"1132"},{"range":"1169","text":"1130"},{"range":"1170","text":"1132"},{"range":"1171","text":"1130"},{"range":"1172","text":"1132"},{"range":"1173","text":"1130"},{"range":"1174","text":"1132"},{"range":"1175","text":"1130"},{"range":"1176","text":"1132"},{"range":"1177","text":"1130"},{"range":"1178","text":"1132"},{"range":"1179","text":"1130"},{"range":"1180","text":"1132"},{"range":"1181","text":"1130"},{"range":"1182","text":"1132"},{"range":"1183","text":"1130"},{"range":"1184","text":"1132"},{"range":"1185","text":"1130"},{"range":"1186","text":"1132"},{"range":"1187","text":"1130"},{"range":"1188","text":"1132"},{"range":"1189","text":"1130"},{"range":"1190","text":"1132"},{"range":"1191","text":"1130"},{"range":"1192","text":"1132"},{"range":"1193","text":"1130"},{"range":"1194","text":"1132"},{"range":"1195","text":"1130"},{"range":"1196","text":"1132"},{"range":"1197","text":"1130"},{"range":"1198","text":"1132"},{"range":"1199","text":"1130"},{"range":"1200","text":"1132"},{"range":"1201","text":"1130"},{"range":"1202","text":"1132"},{"range":"1203","text":"1130"},{"range":"1204","text":"1132"},{"range":"1205","text":"1130"},{"range":"1206","text":"1132"},{"range":"1207","text":"1130"},{"range":"1208","text":"1132"},{"range":"1209","text":"1130"},{"range":"1210","text":"1132"},{"range":"1211","text":"1130"},{"range":"1212","text":"1132"},{"range":"1213","text":"1130"},{"range":"1214","text":"1132"},{"range":"1215","text":"1130"},{"range":"1216","text":"1132"},{"range":"1217","text":"1130"},{"range":"1218","text":"1132"},{"range":"1219","text":"1130"},{"range":"1220","text":"1132"},{"range":"1221","text":"1130"},{"range":"1222","text":"1132"},{"range":"1223","text":"1122"},"Update the dependencies array to be: [chatWith, messagesList, props.match, userId]",{"range":"1224","text":"1225"},{"range":"1226","text":"1122"},{"range":"1227","text":"1122"},"Update the dependencies array to be: [props.match.params.requestId, setValue]",{"range":"1228","text":"1229"},"Update the dependencies array to be: [imagesList]",{"range":"1230","text":"1231"},[2250,2252],"[setValue, userId]",[1791,1793],[3322,3324],"[userId]",[2064,2066],[2220,2222],[2193,2195],"[props.match.params.id]",[6168,6170],"[props, yourID]",[12232,12233],"",[12232,12232],"\\",[12313,12314],[12313,12313],[12378,12379],[12378,12378],[12405,12406],[12405,12405],[12426,12427],[12426,12426],[12464,12465],[12464,12464],[12498,12499],[12498,12498],[12567,12568],[12567,12567],[12590,12591],[12590,12590],[12595,12596],[12595,12595],[12633,12634],[12633,12633],[12646,12647],[12646,12646],[12671,12672],[12671,12671],[12680,12681],[12680,12680],[12713,12714],[12713,12713],[12737,12738],[12737,12737],[12841,12842],[12841,12841],[12885,12886],[12885,12885],[12906,12907],[12906,12906],[12948,12949],[12948,12948],[13001,13002],[13001,13001],[13098,13099],[13098,13098],[13183,13184],[13183,13183],[13218,13219],[13218,13218],[13247,13248],[13247,13247],[13253,13254],[13253,13253],[13275,13276],[13275,13275],[13284,13285],[13284,13284],[13358,13359],[13358,13358],[13365,13366],[13365,13365],[13380,13381],[13380,13380],[13404,13405],[13404,13404],[13416,13417],[13416,13416],[13424,13425],[13424,13424],[13474,13475],[13474,13474],[13478,13479],[13478,13478],[13531,13532],[13531,13531],[13537,13538],[13537,13537],[13552,13553],[13552,13552],[13556,13557],[13556,13556],[13578,13579],[13578,13578],[13590,13591],[13590,13590],[13651,13652],[13651,13651],[13709,13710],[13709,13709],[13756,13757],[13756,13756],[13772,13773],[13772,13772],[1088,1090],[2678,2680],"[chatWith, messagesList, props.match, userId]",[1100,1102],[1072,1074],[2321,2323],"[props.match.params.requestId, setValue]",[841,843],"[imagesList]"]