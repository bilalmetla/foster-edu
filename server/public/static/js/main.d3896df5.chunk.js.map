{"version":3,"sources":["webrtc/Icons/cuckoo-logo.svg","constants/routes.js","components/Header.js","components/StyledComponents.js","components/Banner.js","components/Services.js","fixtures/Testimonials.js","components/Testimonials.js","components/StartTutoringBanner.js","components/HaveQuestion.js","components/Footer.js","constants/index.js","components/TutorListInfo.js","components/SearchTutors.js","components/TutorsFilterControls.js","services/MessageBox.js","services/HttpClient.js","services/User.js","components/common/ecd6bc09da634e4e2efa16b571618a22.gif","components/common/Spinner.js","components/TutorsFilter.js","components/DSHeader.js","components/DSMenu.js","webrtc/Icons/camera.svg","webpack:///./src/webrtc/Icons/camera.svg?3545","webrtc/Icons/camera-stop.svg","webrtc/Icons/microphone.svg","webrtc/Icons/microphone-stop.svg","webrtc/Icons/share.svg","webrtc/Icons/hang-up.svg","webrtc/Icons/fullscreen.svg","webrtc/Icons/minimize.svg","webrtc/Sounds/ringtone.mp3","webrtc/App.js","components/common/Socket.js","components/DSContent.js","components/DSAbout.js","components/DSContact.js","components/DSExpertise.js","components/DSEducation.js","components/DSMediums.js","components/DSNewRequests.js","components/DSChatBox.js","components/DSClasses.js","components/DSClassesDetails.js","components/AcceptStudentRequest.js","components/RatingStars.js","components/DSFeedBack.js","components/CallingDemo.js","components/accordion/styles/accordion.js","components/accordion/index.js","components/room/style/room.js","components/room/index.js","containers/faqs.js","classroom/constants/routes.js","classroom/components/createclass/styles/createclass.js","classroom/components/createclass/index.js","classroom/components/floatingbutton/styles/floatingbutton.js","classroom/components/floatingbutton/index.js","classroom/components/multiplechoiceoptions/index.js","classroom/containers/createclass.js","classroom/pages/createclass.js","classroom/containers/listclasses.js","classroom/pages/listclasses.js","classroom/containers/assignement.js","classroom/containers/quize.js","classroom/containers/topic.js","classroom/containers/detailsclass.js","classroom/pages/detailsclass.js","classroom/pages/classroom.js","classroom/index.js","pages/Home.js","pages/Tutors.js","pages/views/register-view.js","pages/views/login-view.js","pages/views/forgot-password.js","pages/Register.js","pages/views/ContactUs.js","pages/Dashboard.js","pages/VerifyEmail.js","pages/ResetPassword.js","pages/ViewProfile.js","pages/StudentRequest.js","pages/faqs.js","containers/videoconferenceroom.js","pages/conferencecall.js","Router.js","reportWebVitals.js","index.js"],"names":["Routes","home","verifyCustomer","resetPassword","login","register","forgotpassword","tutors","faqs","dashboard","contactUs","annonymousCall","studentCall","tutorsProfile","studentRequest","aboutInfo","contactInfo","expertise","education","studyMediums","newRequest","mySessions","feedback","classRoom","conferenceRoom","Header","useState","userid","setuserid","enableLinks","setenableLinks","useEffect","userId","localStorage","getItem","pathname","window","location","includes","id","className","Container","Row","Col","xs","md","sm","src","alt","to","styled","img","Banner","lg","React","Component","Services","TestimonialsList","title","description","author","from","Testimonials","currentIndex","setcurrentIndex","testimonials","settestimonials","length","style","display","onClick","map","item","StartTutoringBanner","class","Button","variant","size","href","HaveQuestion","Footer","socialLinks","setsocialLinks","FooterData","logo","marginRight","marginLeft","target","contactus","addressline","email","phone","link","icon","constants","isStaging","isProductionDeployment","isStagingSignalling","isProductionDeploymentSignalling","TutorListInfo","props","teachingSubjects","tutor","subject","Badge","firstName","lastName","tagLine","greateTutorLine","float","fees","feesPer","RatingStars","profileListingStars","stars","isOnlineTeaching","isOfflineTeaching","api_server","protocol","hostname","signalling_server","SearchTutors","useForm","handleSubmit","setValue","errors","tutorsList","countValidTutors","Form","Label","htmlFor","Control","placeholder","name","ref","marginTop","data","console","log","findTutors","type","TutorsFilterControls","tutorFilter","settutorFilter","handleOnChange","event","value","filterTutors","Group","controlId","feesRange","min","max","onChange","as","MessageBox","Modal","aria-labelledby","centered","isSuccess","closeButton","Title","heading","Body","message","onHide","REACT_APP_API_BASE_URL","get","url","fetch","then","response","json","post","pathName","requestOptions","method","headers","body","JSON","stringify","ok","getCustomerById","customerId","updateCustomerInfo","urlParams","put","getTutors","filterParams","userType","filter","where","and","push","getMyClasses","or","sendFeedback","spinner","width","margin","opacity","position","top","bottom","left","right","height","zIndex","TutorsFilter","setTutors","totalTutors","setTotalTutors","setsubject","isLoading","setIsLoading","catch","error","Spinner","fltr","parse","gt","parseInt","teachingCity","gender","DSMenu","children","restProps","profileImage","setprofileImage","fileupload","setfileupload","activeLinkClass","activeAccordionsClass","customerName","setcustomerName","user","userImage","imageUrl","changeActiveClass","document","getElementsByClassName","classList","remove","add","getElementById","split","changeActiveAccordionsClass","input","accept","capture","files","file","URL","createObjectURL","baseString","reader","FileReader","onloadend","result","image","extention","resultCode","setItem","NotificationManager","success","toString","readAsDataURL","cursor","click","Accordion","defaultActiveKey","Card","Toggle","eventKey","Collapse","marginBottom","clear","reload","Watermark","lazy","ringtoneSound","Howl","ringtone","loop","preload","WebrtcApp","UserVideo","PartnerVideo","incomingCall","audioControl","videoControl","yourID","setYourID","setUsers","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callingFriend","setCallingFriend","callerSignal","setCallerSignal","callAccepted","setCallAccepted","callRejected","setCallRejected","receiverID","setReceiverID","modalVisible","setModalVisible","modalMessage","setModalMessage","audioMuted","setAudioMuted","videoMuted","setVideoMuted","isfullscreen","setFullscreen","copied","setCopied","linkcopied","setLinkCopied","callingLink","setcallingLink","setdisableusernameinputfield","userVideo","useRef","partnerVideo","socket","myPeer","landingHTML","opasity","navigator","clipboard","writeText","setInterval","e","mediaDevices","getUserMedia","video","audio","current","srcObject","peer","Peer","initiator","trickle","config","iceServers","urls","username","credential","on","emit","userToCall","signalData","err","endCall","signal","callPeer","toLowerCase","trim","destroy","toggleMuteAudio","getAudioTracks","enabled","toggleMuteVideo","getVideoTracks","DetectRTC","isWebRTCSupported","alert","hasMicrophone","isAudioContextSupported","DetectLocalIPAddress","ipsList","match","params","receiverId","instance","io","connect","currentSocket","origin","users","play","playsInline","muted","autoPlay","unload","screenShare","getDisplayMedia","screenStream","replaceTrack","getTracks","onended","a","check","userAgent","vendor","opera","test","substr","isMobileDevice","fullscreenButton","hangUp","visible","onClose","measure","closeOnEsc","fallback","Socket","DSContent","path","DSContact","render","DSClassesDetails","AcceptStudentRequest","DSAbout","customer","setCustomer","forEach","field","span","offset","required","defaultValue","teachingExperienceLine","disabled","postData","Check","label","DSExpertise","subjects","grades","options","selectedValues","isObject","searchBox","border","onSelect","selectedList","selectedItem","onRemove","removedItem","index","indexOf","splice","teachingGrades","DSEducation","institute","degree","passingYear","DSMediums","setIsOfflineTeaching","setTeachingCity","setTeachingArea","teachingArea","DSNewRequests","requests","setrequests","getStudentRequests","Table","striped","bordered","hover","responsive","r","timeFrom","timeTo","lessonType","DSChatBox","chatWith","setchatWith","messagesList","setmessagesList","setmessage","fromQuery","getMessages","like","getConnectedUsers","connections","setTimeout","newMessages","slice","overflowY","msg","srOnly","InputGroup","Prepend","Text","FormControl","background","DSClasses","classes","setclasses","instructorId","studentId","cls","classrequest","setclassrequest","requestId","request","onSubmit","createClassRequest","statusText","setRatingStars","count","color","activeColor","a11y","char","isHalf","emptyIcon","halfIcon","filledIcon","profileStars","edit","newValue","profileView","rating","messageBox","ratingSubmit","badReasons","goodReasons","feedbackReasons","reasons","DSFeedback","feedbackMessage","setfeedbackMessage","feedbackstars","setfeedbackstars","feedbackreason","setfeedbackreason","rows","byId","fullname","CallingDemo","setimageUrl","imagesList","callingDemoImageIndex","paddingTop","section","Inner","div","Item","h1","ToggleContext","createContext","useContext","toggleShow","settoggleShow","Provider","VideoGrid","MyVideo","Room","FaqsContainer","isMoreFaqsShow","showFaqs","showTotalFaqs","setshowTotalFaqs","faqsList","header","Parser","h2","Name","button","CreateClass","p","i","FloatingButton","Link","MultipleChoiceOptions","Toast","CreatingClass","CreateClassRoom","ListCalsses","ListCalssesPage","CreateAssignment","instructions","scores","create","CreateQuize","multipleChoices","setmultipleChoices","isMultipleChoiceAnser","setisMultipleChoiceAnser","handleAnswers","show","newMultipleChoices","removeMultipleChoices","answerType","CreateTopic","DetailsCalss","assignementModalShow","setAssignementModalShow","quizeModalShow","setQuizeModalShow","topicModalShow","setTopicModalShow","Tabs","Tab","ButtonGroup","vertical","DropdownButton","Dropdown","DetailsCalssPage","ClassRoomPage","createClass","tooltip","joinClass","rotate","ClassRoom","exact","Home","Tutors","RegisterView","watch","modalShow","setModalShow","modalHeading","setModalHeading","isSuccessModal","setisSuccessModal","origion","signUp","responseJson","trace","custom","emailAddress","userPassword","minLength","LoginView","access_token","ForgotPasswordView","forGotPassword","Register","ContactUs","sendContactUs","Dashboard","isDashboard","setisDashboard","VerifyEmail","emailCode","code","verifyEmail","status","animation","role","aria-hidden","ResetPassword","formData","newPassword","password","passwordReset","ViewProfile","sharefeedback","setsharefeedback","profilerId","setprofilerId","profileRating","setprofileRating","totalRating","settotalRating","settutor","reviews","setreviews","prevState","totalRatings","getProfilerReviewsById","toId","loadReviews","edu","grade","Subtitle","StudentRequest","tutorId","req_message","studyRequests","Faqs","VideoConferenceRoom","onloadedmetadata","ConferenceRoom","App","conferencecall","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.d3896df5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cuckoo-logo.e383572d.svg\";","\r\nexport const Routes = {\r\n    home:'/',\r\n    verifyCustomer:'/customers/:id/verify/:code',\r\n    resetPassword:'/customers/:customerId/reset-password',\r\n    login:'/login',\r\n    register:'/register',\r\n    forgotpassword:'/forgotpassword',\r\n    tutors:'/tutors',\r\n    faqs:'/faqs',\r\n    dashboard:'/dashboard',\r\n    contactUs:'/contact-us',\r\n    annonymousCall:'/calling',\r\n    studentCall:'/calling-route/:receiverId',\r\n    tutorsProfile:'/profile/:id',\r\n    studentRequest:'/request/to/:tutorId',\r\n    aboutInfo:'/dashboard/about',\r\n    contactInfo:'/dashboard/contact',\r\n    expertise:'/dashboard/expertise',\r\n    education:'/dashboard/education',\r\n    studyMediums:'/dashboard/mediums',\r\n    newRequest:'/dashboard/new-requests',\r\n    mySessions:'/dashboard/classes',\r\n    feedback:'/dashboard/feedback',\r\n    classRoom:'/class-room',\r\n    conferenceRoom:'/conference-call',\r\n}","\r\nimport React, {useState,useEffect } from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\n\r\nexport default function Header (){\r\n\r\n  const [userid, setuserid] = useState('');\r\n     const [enableLinks, setenableLinks] = useState(true);\r\n     \r\n      useEffect(() => {\r\n        \r\n        let userId = localStorage.getItem('userId')\r\n        setuserid(userId)\r\n\r\n        let pathname = window.location.pathname\r\n        if(pathname.includes('calling-route') || pathname.includes('calling') ){\r\n          setenableLinks(false)\r\n        }\r\n        // if(!window.location.pathname.includes('dashboard')){\r\n        //   if(!document.getElementById(\"dashboar-menu\") ){\r\n        //     document.getElementById(\"dashboar-menu\").classList.remove('toogleMenuShow');\r\n        //     document.getElementById(\"dashboar-menu\").classList.add('toogleMenuHide');       \r\n        //   }\r\n        // }\r\n\r\n      }, []);\r\n     \r\n\r\n\r\n      return (\r\n          <div id=\"header\" className=\"sticky\">\r\n            <Container>\r\n            <Row>\r\n            <Col xs={4} md={3} sm={2}>\r\n                {/* <h1 id=\"logo\"> Foster </h1> */}\r\n                <img className=\"logo\" src=\"/header_logo.png\" alt=\"Foster\" />\r\n               \r\n            </Col>\r\n            {enableLinks && \r\n              <Col xs={8} md={8} sm={8}>\r\n              <ul id=\"menu\" className=\"float-md-right\">\r\n                <li> <Link to=\"/\">Home</Link> </li>\r\n                <li> <Link to=\"/tutors\">Find A Tutor</Link> </li>\r\n                {!userid && <li> <Link to=\"/register\">Join Us</Link> </li> }\r\n                {userid && <li> <Link to=\"/dashboard/about\">Dashboard</Link> </li> }\r\n                {/* <li> <Link to=\"/register\">Register</Link> </li> */}\r\n              </ul>\r\n            </Col>\r\n            }\r\n            \r\n            </Row>\r\n        </Container>\r\n      </div>\r\n      )\r\n\r\n}","\r\nimport  styled  from \"styled-components\";\r\n\r\nexport  const BannerImage = styled.img`\r\n    background: url('../images/banner-2.jpg') no-repeat 0 0;\r\n    background-size: cover;\r\n\r\n    height: 400px;\r\n`;","\r\n\r\n\r\nimport React from \"react\";\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { BannerImage } from \"./StyledComponents\";\r\n\r\nexport default class Banner extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n        <div id=\"banner\" className=\"py-5\">\r\n            <Container>\r\n                <Row>\r\n                    <Col xs md={8} lg={6}>\r\n                        <div id=\"banner-title\" >\r\n                            {/* <img id=\"backgroundimage\" src=\"/images/banner-2.jpg\" /> */}\r\n                            {/* <BannerImage /> */}\r\n                            {/* <p>Personal & Online Tutor                 </p> */}\r\n                            <h2 id=\"title\">\r\n                                Find Private Tutor \r\n                            </h2> \r\n                            <p className=\"lead\">\r\n                                <strong>Worldwide Learning</strong>, We provide best tutors and standard education.\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n      )\r\n    }\r\n}","\r\nimport React from \"react\";\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nexport default class Services extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div id=\"service-box\" className=\"section\">\r\n              <Container>\r\n                  <Row>\r\n                      <Col md={12}>\r\n                          <h2 className=\"section-heading\">Take online lessons & Improve your results.</h2>\r\n                      </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                      <Col md={4}>\r\n                      <i className=\"fa fa-desktop\"></i>\r\n                          <h3>Online Lessions</h3>\r\n                          <p>Meet with the expert of your choice, anywhere in the world, online or in-person </p>\r\n                      </Col>\r\n\r\n                      <Col md={4}>\r\n                          <i className=\"fa fa-dashboard\"></i>\r\n                          <h3>Right Fits</h3>\r\n                          <p>Find an expert who suits your needs and learning style.</p>\r\n                      </Col>\r\n\r\n                      <Col md={4}>\r\n                          <i className=\"fa fa-book\"></i>\r\n                          <h3>Experts</h3>\r\n                          <p>More qualified instructors than anywhere else, ready to help.</p>\r\n                      </Col>\r\n                  </Row>\r\n                  <Row>\r\n                     <Col md={4}>\r\n                          <i className=\"fa fa-user\"></i>\r\n                          <h3>Choose The Tutor</h3>\r\n                          <p>\r\n                          Search online for a tutor with the right qualifications and hourly rates.\r\n                          </p>\r\n                      </Col>\r\n                    \r\n                     <Col md={4}>\r\n                          <i className=\"fa fa-camera\"></i>\r\n                          <h3>Book Your Lesson</h3>\r\n                          <p>\r\n                          Tell your tutor when you’d like to meet, and only pay for the time you need.\r\n                          </p>\r\n                      </Col>\r\n                  </Row>\r\n              </Container>\r\n        </div>\r\n      )\r\n    }\r\n}","\r\nexport const TestimonialsList = [\r\n    {\r\n        title:\"Good Website\",\r\n        description: \"I had no idea where to start finding a web tutor for a project I was working on. Thank goodness a Google search led me to Foster. They did all the work for me and I found someone excellent!\",\r\n        author: \"Neha\",\r\n        from:\"Karachi\",\r\n    },\r\n    {\r\n        title:\"Happy to have found you\",\r\n        description: \"Foster is easy to use and having a nice dashboard for manage the classes and other personal informations.\",\r\n        author: \"Ali\",\r\n        from:\"Lahore\",\r\n    },\r\n    {\r\n        title:\"Nice support team\",\r\n        description: \"They have nice and professinal support team, which helps always about any query.\",\r\n        author: \"Asad\",\r\n        from:\"Multan\",\r\n    },\r\n    {\r\n        title:\"Looking for such platform\",\r\n        description: \"I am a tutor of Math. I was looking for such platform to teach my students online and manage related stuff.\",\r\n        author: \"Bilal\",\r\n        from:\"Islamabad\",\r\n    }\r\n]","\r\nimport React, {useState, useEffect} from \"react\";\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { TestimonialsList } from \"../fixtures/Testimonials\";\r\n\r\nexport default function Testimonials () {\r\n\r\n    let [currentIndex, setcurrentIndex] = useState(0);\r\n    //var currentIndex = 0\r\n    const [testimonials, settestimonials] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        if(currentIndex >= TestimonialsList.length-1 || currentIndex < 0 ){\r\n            setcurrentIndex(0)\r\n            return\r\n        }\r\n        settestimonials(\r\n            [\r\n                TestimonialsList[currentIndex],\r\n                TestimonialsList[++currentIndex]\r\n            ]\r\n        )\r\n        \r\n    //    setInterval(() => {\r\n    //         if(currentIndex >= TestimonialsList.length-1 || currentIndex < 0 ){\r\n    //             return setcurrentIndex(0)\r\n    //         }            \r\n    //         setcurrentIndex(currentIndex + 1)             \r\n\r\n    //    }, 1000 * 15);\r\n\r\n    }, [currentIndex]);\r\n   \r\n    const changeTestimonials = ()=>{\r\n        settestimonials(\r\n            [\r\n                TestimonialsList[currentIndex],\r\n                TestimonialsList[++currentIndex]\r\n            ]\r\n        )\r\n    }\r\n\r\n\r\n      return (\r\n          <div id=\"testimonials\" className=\"section\" style={{display:'flex'}}>\r\n             <Col md={1} className=\"slider-arrow\" onClick={()=>{setcurrentIndex(currentIndex - 1)}}> <i className=\"fa fa-arrow-left\"> </i> </Col>\r\n\r\n              <Container>\r\n                  <Row>\r\n                      <Col md={12}>\r\n                          <h2 className=\"section-heading\">\r\n                          See what students say about us\r\n                          </h2>\r\n                      </Col>\r\n                  </Row>\r\n                  <Row>\r\n                      \r\n                  {testimonials && testimonials.length > 0 &&\r\n                  testimonials.map(item=>{\r\n                      return <Col md={6}>\r\n                                <p><strong>{item.title}</strong></p>\r\n                                <p>\r\n                                    {item.description}\r\n                                    </p>\r\n                                <p className=\"author\"><strong>{item.author}</strong> from <strong>{item.from}</strong></p>\r\n\r\n                            </Col>\r\n                  })\r\n                  }\r\n                 \r\n                      \r\n\r\n                  </Row>\r\n              </Container>\r\n              <Col md={1} className=\"float-right slider-arrow\" onClick={()=> setcurrentIndex(currentIndex + 1)}> <i className=\"fa fa-arrow-right\"> </i> </Col>\r\n          </div>\r\n      )\r\n    \r\n}","import React from \"react\";\r\n\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default class StartTutoringBanner extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div id=\"startTutoringBanner\" class=\"section\" >\r\n              <Container>\r\n                  <Row>\r\n                      <Col md={12}>\r\n                          <h2 class=\"section-heading\">\r\n                          Start tutoring with <strong>Foster</strong>\r\n                          </h2>\r\n                          <p>We’re always looking for talented tutors. Set your own rate, get paid and make a difference.</p>\r\n                          <Button variant=\"btn\" size=\"lg\" onClick={()=> window.location.href ='/register'}>Apply Now</Button>{' '}\r\n\r\n                      </Col>\r\n                  </Row>\r\n              </Container>\r\n          </div>\r\n      )\r\n    }\r\n}","import React from \"react\";\r\n\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default class HaveQuestion extends React.Component {\r\n \r\n    render(){\r\n      return (\r\n          <div id=\"haveQuestion\" class=\"section\" >\r\n              <Container>\r\n                  <Row>\r\n                      <Col md={12}>\r\n                          <h2 class=\"\">\r\n                          Have any questions?\r\n                          </h2>\r\n                          \r\n                      </Col>\r\n\r\n                  </Row>\r\n                  <Row>\r\n                      <Col md={12} >\r\n                          <div className=\"helCenter\" style={{display:'flex'}}>\r\n                            <i className=\"fa fa-question\"></i>\r\n                            <p >Get answers in our Help Center or connect with Customer Support.</p>\r\n                            <Button onClick={()=> window.location.href = '/contact-us' } variant=\"btn\" size=\"lg\">Ask</Button>{' '}\r\n                          </div>\r\n                     \r\n                      </Col>\r\n\r\n                     \r\n                  </Row>\r\n\r\n              </Container>\r\n          </div>\r\n      )\r\n    }\r\n}","import React, {useState,useEffect } from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport FooterData from \"../fixtures/footer.json\";\r\n\r\nexport default function Footer () {\r\n    const [enableLinks, setenableLinks] = useState(true);\r\n    const [socialLinks, setsocialLinks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        \r\n        let pathname = window.location.pathname\r\n        if(pathname.includes('calling-route') || pathname.includes('calling')){ \r\n          setenableLinks(false)\r\n        }\r\n        setsocialLinks(FooterData.socialLinks)\r\n\r\n      }, []);\r\n\r\n      return (\r\n          <>\r\n        {enableLinks ?\r\n          <div id=\"footer\">\r\n              \r\n              <Container>\r\n                  <Row>\r\n                      <Col md={4}>\r\n                          <div id=\"logo\">\r\n                              {/* <h2>Foster</h2> */}\r\n                              <img className=\"logo\" src={FooterData.logo} alt={FooterData.title} />\r\n\r\n                              <p>{FooterData.description}</p>\r\n                          </div>\r\n                      </Col>\r\n                      \r\n                      <Col md={4}>\r\n                      <h4>Quick Links</h4>\r\n                          <div style={{display: 'flex'}}>\r\n                                <div style={{marginRight:'10px'}}>\r\n                                <p >\r\n                                 <a href=\"/\">About Us </a>\r\n                                 </p>\r\n                                 <p>\r\n                                <Link to=\"/contact-us\">Contact Us </Link>\r\n                                </p>\r\n                                <p>\r\n                                <Link to=\"/faqs\">Faqs </Link>\r\n                                </p>\r\n                                \r\n                             </div>\r\n\r\n                             <div style={{marginLeft:'10px'}}>\r\n                                <p >\r\n                                 <Link to=\"/register\">Become a Tutor </Link>\r\n                                 </p>\r\n                                 <p>\r\n                                <Link to=\"/tutors\">Hire a Tutor </Link>\r\n                                </p>\r\n                                <p>\r\n                                <Link to=\"/calling\" target=\"_blank\">Video Lecture </Link>\r\n                                </p>\r\n                             </div>\r\n\r\n\r\n                          </div>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                      <h4>Our Contacts</h4>\r\n                        <div id=\"footer-contact\">\r\n                            <p>\r\n                                <i className=\"fa fa-user\"></i>\r\n                                {FooterData.contactus.addressline}\r\n                            </p>\r\n\r\n                            <p>\r\n                                <i className=\"fa fa-envelope\"></i>\r\n                                {FooterData.contactus.email}\r\n                            </p>\r\n                            <p>\r\n                                <i className=\"fa fa-phone\"></i>\r\n                                {FooterData.contactus.phone}\r\n                            </p>\r\n\r\n                        </div>\r\n                        <div id=\"social-links\" >\r\n                           \r\n                        {socialLinks.map(item=>{\r\n                            return <a target=\"_blank\" href={item.link}>\r\n                                    <i className={item.icon}>\r\n                                    </i>\r\n                                    </a>\r\n                        })}\r\n                               \r\n                              \r\n                        </div>\r\n                      </Col>\r\n                  </Row>\r\n              </Container>\r\n             \r\n          </div>\r\n          :\r\n          null\r\n          \r\n        }\r\n        </>\r\n      )\r\n    \r\n}","\r\nexport const constants =  {\r\n    isStaging: false,\r\n    isProductionDeployment: false,\r\n\r\n    isStagingSignalling: false,\r\n    isProductionDeploymentSignalling: false,\r\n    \r\n   \r\n    \r\n}\r\n\r\nconstants.api_server = function (){\r\n    // if(this.isProductionDeployment){\r\n    //     return '/' //'https://foster-dev.herokuapp.com'\r\n    // }else if(this.isStaging){\r\n    //     return '/' //'https://foster-dev.herokuapp.com'\r\n    // }else {\r\n    //     return 'http://127.0.0.1:3000'\r\n    // }\r\n    return `${window.location.protocol}//${window.location.hostname}`\r\n}\r\n\r\nconstants.signalling_server = function (){\r\n    // if(this.isProductionDeploymentSignalling){\r\n    //     return 'https://foster-signalling.herokuapp.com'\r\n    // }else if(this.isStagingSignalling){\r\n    //     return 'https://foster-signalling.herokuapp.com'\r\n    // }else {\r\n    //     return 'http://127.0.0.1:8000'\r\n    // }\r\n\r\n    return `${window.location.protocol}//${window.location.hostname}:8000`\r\n}","\r\nimport React from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col, \r\n    Form, InputGroup, FormControl,\r\n    Button, Badge\r\n  } from 'react-bootstrap';\r\nimport { constants } from \"../constants\";\r\nimport { RatingStars } from \"../components\";\r\n\r\n\r\nexport default function TutorListInfo (props) {\r\n    let teachingSubjects = []\r\n    if(props.tutor.teachingSubjects && props.tutor.teachingSubjects.length>0){\r\n        teachingSubjects = props.tutor.teachingSubjects.map(subject=> <Badge key={subject} style={{marginRight:'5px'}} variant=\"success\">{subject}</Badge>  )\r\n    }\r\n    \r\n  \r\n      return (\r\n          <div id=\"tutors-list-info\">\r\n              <Container>\r\n                  <Row>\r\n                      <Col md={12}  >\r\n                          <div>\r\n                              <Link to={`/profile/${props.tutor.id}`} style={{display:'flex',}}>\r\n                                  <Col md={8}>\r\n                              <div id=\"tutors-details-list\" style={{display:'flex'}}>\r\n                              {/* <img src={constants.api_server() + props.tutor.imageUrl} alt=\"tutor image\" /> */}\r\n                              <img src=\"/images/default-user.jpg\" alt=\"tutor image\" />\r\n                              <div>\r\n                              <h4>{props.tutor.firstName} {props.tutor.lastName}</h4>\r\n                              <h6>{props.tutor.tagLine}</h6>\r\n                              <p>\r\n                              {teachingSubjects}\r\n                              </p>\r\n                              <p>\r\n                              {props.tutor.greateTutorLine !== \"\" ? \r\n                                    props.tutor.greateTutorLine  :\r\n                             // props.tutor.greateTutorLine && \r\n                              'this teacher does not have a description of his profile.'\r\n                              }\r\n                              </p>\r\n                              {/* <p>\r\n                              {props.tutor.greateTutorLine}\r\n                              </p> */}\r\n                              </div>\r\n                          </div>\r\n\r\n                          </Col>\r\n                          <Col md={3} style={{float:'right'}}  >\r\n                          <div  id=\"tutor-scoring-board\" className=\"float-md-right\">\r\n                              <p><strong>Rs {props.tutor.fees}/{props.tutor.feesPer}</strong></p>\r\n                              \r\n                             <RatingStars.profileListingStars stars={props.tutor.stars}> </RatingStars.profileListingStars>\r\n                              <p className=\"Offers-margin\">\r\n                              Offers \r\n                              </p>\r\n                            \r\n                              {props.tutor.isOnlineTeaching &&\r\n                              <p className=\"Offers-margin\">\r\n                                  <strong> Online </strong> Classes \r\n                                 \r\n                              </p>}\r\n\r\n                              {props.tutor.isOfflineTeaching &&\r\n                              <p> <strong> In Person </strong> Classes\r\n                              </p>}\r\n                           </div>\r\n                              </Col>\r\n                           </Link>\r\n                         </div>\r\n                            \r\n                     \r\n                      </Col>\r\n                  </Row>\r\n              </Container>\r\n             \r\n           </div>\r\n      )\r\n    \r\n}","\r\nimport React, {useState, } from \"react\";\r\n\r\nimport { Container, Row, Col, \r\n    Form, InputGroup, FormControl,\r\n    Button, Badge\r\n  } from 'react-bootstrap';\r\n\r\n  import TutorListInfo from './TutorListInfo.js';\r\n  import {useForm} from 'react-hook-form';\r\n\r\n\r\n\r\nexport default function SearchTutors (props) {\r\n  const { register, handleSubmit, setValue, errors, } = useForm();\r\n  const [subject, setSubject] = useState('');\r\n  let tutorsList = []\r\n  let countValidTutors = 0\r\n\r\n  if(props.tutors && props.tutors.length > 0){\r\n     tutorsList = props.tutors.map(item=>{\r\n       \r\n              if(item.tagLine && item.fees){\r\n                countValidTutors = countValidTutors + 1\r\n                    return <TutorListInfo \r\n                        tutor={item}\r\n                        key={item.id}\r\n                        />\r\n              }\r\n              \r\n     })\r\n    // console.log('tutorsList', tutorsList)\r\n  }\r\n  \r\n    \r\n  const findTutors= (data)=>{\r\n    console.log(data)\r\n    props.findTutors(data)\r\n  }\r\n\r\n\r\n      return (\r\n          <div>\r\n            <div id=\"tutors-filter-search-box\">\r\n             <Form.Row>\r\n                <Col xs={10}>\r\n                <Form.Label htmlFor=\"inlineFormInput\" >\r\n                    Subject\r\n                </Form.Label>\r\n                <Form.Control placeholder=\"Subject\"\r\n                name=\"subject\"\r\n               // value={props.subject}\r\n                ref={register()}\r\n                />\r\n                </Col>\r\n               \r\n                <Col>\r\n                <Button style={{marginTop:'25px'}}\r\n                 variant=\"btn\" size=\"md\"\r\n                 onClick={handleSubmit(findTutors) }\r\n                 type=\"submit\"\r\n                 >\r\n                   Search\r\n                   </Button>{' '}\r\n                </Col>\r\n            </Form.Row>\r\n\r\n            <div id=\"tutor-results-info\" style={{marginTop:'25px'}}>\r\n                <h4>Total Found  <Badge variant=\"success\">{countValidTutors}</Badge>{' '}</h4>\r\n            </div>\r\n\r\n            </div>\r\n\r\n\r\n            \r\n          {tutorsList}\r\n\r\n\r\n              </div>\r\n      )\r\n    \r\n}","import React, {useState} from \"react\";\r\n\r\nimport { Form, Col } from 'react-bootstrap';\r\n\r\nexport default function TutorsFilterControls (props) {\r\n\r\n   const [tutorFilter, settutorFilter] = useState({}); \r\n   \r\n   const handleOnChange = (event)=>{\r\n       const {name, value} = event.target;\r\n       tutorFilter[name] = value;\r\n       settutorFilter(tutorFilter)\r\n       //console.log(event.target.name, event.target.value)\r\n       console.log(tutorFilter)\r\n\r\n       props.filterTutors(tutorFilter)\r\n   }\r\n      return (\r\n          <div>\r\n                \r\n                        <h6>Filters </h6>\r\n                        <Form>\r\n                        \r\n                            <Form.Group  controlId=\"feesRange\">\r\n                                <Form.Label>Fees {tutorFilter.feesRange}</Form.Label>\r\n                                <Form.Control \r\n                                 type=\"range\"\r\n                                 name=\"feesRange\"\r\n                                 min=\"\" \r\n                                 max=\"5000\"\r\n                                 onChange={handleOnChange}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group  controlId=\"feesPer\">\r\n                                <Form.Label>Fees Per</Form.Label>\r\n                                <Form.Control as=\"select\" \r\n                              //  defaultValue=\"Month\"\r\n                                name=\"feesPer\"\r\n                               onChange={handleOnChange}\r\n                                >\r\n                                    <option  />\r\n                                    <option value=\"month\" >Month</option>\r\n                                    <option value=\"week\">Week</option>\r\n                                    <option value=\"hour\">Hour</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group  controlId=\"teachingCity\">\r\n                                <Form.Label>City</Form.Label>\r\n                                <Form.Control \r\n                                // as=\"select\"\r\n                                onChange={handleOnChange}\r\n                                name=\"teachingCity\"\r\n                                >\r\n                                    {/* <option  />\r\n                                    <option value=\"Lahore\" >Lahore</option>\r\n                                    <option value=\"Islamabad\">Islamabad</option>\r\n                                    <option value=\"Karachi\">Karachi</option> */}\r\n                                </Form.Control>\r\n                        </Form.Group>\r\n\r\n\r\n                            {/* <Form.Group controlId=\"Availability\">\r\n                                <Form.Label className=\"mr-sm-2\" htmlFor=\"inlineFormCustomSelect\" >\r\n                                    Availability\r\n                                </Form.Label>\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Sunday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Monday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Tuesday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Wednessday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Thrisday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Friday\"\r\n                                    custom\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"customControlAutosizing\"\r\n                                    label=\"Saturday\"\r\n                                    custom\r\n                                />\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId=\"gender\">\r\n                            <Form.Label className=\"mr-sm-2\"  >\r\n                                Gender\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                className=\"mr-sm-2\"\r\n                                name=\"gender\"\r\n                                onChange={handleOnChange}\r\n                            >\r\n                                <option value=\"\">Gender...</option>\r\n                                {/* <option value=\"\">Not Matter</option> */}\r\n                                <option value=\"Female\">Female</option>\r\n                                <option value=\"Male\">Male</option>\r\n                            </Form.Control>\r\n                            </Form.Group>\r\n\r\n                        </Form>\r\n\r\n              </div>\r\n      )\r\n    \r\n}","\r\nimport React, {useState} from \"react\";\r\n\r\nimport { Modal, Button } from 'react-bootstrap';\r\nfunction MessageBox(props) {\r\n  //const [isSuccess, setisSuccess] = useState(true);\r\n \r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className={props.isSuccess ? 'message-box-success' : 'message-box-error'}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            <i className={props.isSuccess ? 'fa fa-thumbs-up' : 'fa fa-warning'}></i>\r\n             {props.heading}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p><strong>{props.message}</strong></p>\r\n          {/* <p>\r\n            {props.message}\r\n            hello bilal\r\n          </p> */}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button className=\"btn-dark\" onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n  \r\n\r\n  export default MessageBox","\r\nimport { constants } from \"../constants\";\r\n\r\n\r\nvar  REACT_APP_API_BASE_URL = constants.api_server()\r\n\r\n\r\nexport function get(url) {\r\n\r\n    return fetch(`${REACT_APP_API_BASE_URL}${url}`).then(response =>\r\n      response.json()\r\n    );\r\n  }\r\n\r\n  export function post(data, pathName) {\r\n   \r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { \r\n        'Content-Type': 'application/json' ,\r\n        //'Authorization': 'Bearer ' +access_token\r\n      },\r\n      body: JSON.stringify(data)\r\n    }\r\n    let url = `${REACT_APP_API_BASE_URL}${pathName}`\r\n    return fetch(url, requestOptions)\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      } else {\r\n        return response\r\n      }\r\n    })\r\n    \r\n\r\n  }\r\n\r\n  export function put(data, pathName) {\r\n   \r\n    const requestOptions = {\r\n      method: 'PUT',\r\n      headers: { \r\n        'Content-Type': 'application/json' ,\r\n        //'Authorization': 'Bearer ' +access_token\r\n      },\r\n      body: JSON.stringify(data)\r\n    }\r\n    let url = `${REACT_APP_API_BASE_URL}${pathName}`\r\n    return fetch(url, requestOptions)\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      } else {\r\n        return response\r\n      }\r\n    })\r\n    \r\n\r\n  }\r\n\r\n  export function loadImage(url) {\r\n\r\n    return fetch(`${REACT_APP_API_BASE_URL}${url}`).then(response => response)\r\n  }","\r\nimport {post, put, get, loadImage} from \"./HttpClient\";\r\n\r\nexport function signUp(data) {\r\n   return post(data, '/customers/register')\r\n  }\r\n\r\n  export function verifyEmail(data) {\r\n   return post(data, `/customers/verify/email`)\r\n  }\r\n\r\n  export function login(data) {\r\n   return post(data, `/customers/login`)\r\n  }\r\n\r\n  export function forGotPassword(data) {\r\n   return post(data, `/customers/forgotPassword`)\r\n  }\r\n  \r\n  export function passwordReset(data, urlParams) {\r\n   return post(data, `/customers/${urlParams.customerId}/passwordReset`)\r\n  }\r\n  \r\n  export function getCustomerById(customerId) {\r\n   return get(`/customers/${customerId}`)\r\n  }\r\n\r\n  export function updateCustomerInfo(data, urlParams) {\r\n   return put(data, `/customers/${urlParams.customerId}`)\r\n  }\r\n\r\n  export function getTutors(filterParams= {}) {\r\n   filterParams.userType = 'tutor'\r\n     \r\n      let filter = {\r\n        where:{\r\n           and:[]\r\n        }\r\n     }\r\n     filter.where.and.push(filterParams)\r\n     //filter.where = filterParams\r\n      return get(`/customers?filter=${JSON.stringify(filter)}`)\r\n  }\r\n\r\n\r\n  export function sendContactUs(data) {\r\n   return post(data, `/web/contact-us`)\r\n  }\r\n \r\n  export function studyRequests(data) {\r\n   return post(data, `/study-requests`)\r\n  }\r\n \r\n  export function getStudentRequests(filterParams= {}) {\r\n   \r\n      let filter = {\r\n        where:{\r\n          // or:[]\r\n        }\r\n     }\r\n     filter.where.or = filterParams\r\n       //filter.where = filterParams\r\n      return get(`/study-requests?filter=${JSON.stringify(filter)}`)\r\n  }\r\n  \r\n  export function getMessages(fromQuery) {\r\n   \r\n      let filter = {\r\n        where:{\r\n          // and:[]\r\n        }\r\n     }\r\n    \r\n     filter.where.or = fromQuery\r\n      // filter.where = filterParams\r\n      return get(`/messages?filter=${JSON.stringify(filter)}`)\r\n  }\r\n  \r\n  export function getConnectedUsers(filterParams= {}) {\r\n   \r\n      let filter = {\r\n        where:{\r\n           and:[]\r\n        }\r\n     }\r\n     filter.where.and.push(filterParams)\r\n      // filter.where = filterParams\r\n      return get(`/connections?filter=${JSON.stringify(filter)}`)\r\n  }\r\n\r\n  export function getMyClasses(filterParams= {}) {\r\n   \r\n      let filter = {\r\n        where:{\r\n          // ...filterParams\r\n        }\r\n     }\r\n     filter.where.or = filterParams\r\n      // filter.where = filterParams\r\n      return get(`/classes?filter=${JSON.stringify(filter)}`)\r\n  }\r\n\r\n  export function getStudentRequestById(id) {\r\n  \r\n   return get(`/study-requests/${id}`)\r\n}\r\n\r\nexport function createClassRequest(data) {\r\n   return post(data, `/classes`)\r\n  }\r\n\r\n  export function uploadCustomerImage(data) {\r\n   return post(data, `/customers/upload/image`)\r\n  }\r\n\r\n  export function getCustomerImage(url) {\r\n   return loadImage(url)\r\n  }\r\n\r\n  export function sendFeedback(data) {\r\n   return post(data, `/feedbacks`)\r\n  }\r\n\r\n  export function getProfilerReviewsById(filterParams) {\r\n  \r\n   let filter = {\r\n      where:{\r\n      }\r\n   }\r\n   filter.where = filterParams\r\n    return get(`/feedbacks?filter=${JSON.stringify(filter)}`)\r\n}","export default __webpack_public_path__ + \"static/media/ecd6bc09da634e4e2efa16b571618a22.6f1edbbc.gif\";","import React from 'react';\r\nimport spinner from './ecd6bc09da634e4e2efa16b571618a22.gif';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: '200px', margin: 'auto', display: 'block',\r\n         opacity: '.5',\r\n          position: 'fixed', top:'50%', bottom:'50%', left:'25%', right:'25%',\r\n           height: '200px', zIndex:'9999' }}\r\n        alt=\"Loading...\"\r\n      />\r\n    </div>\r\n  );\r\n};","import React, {useState, useEffect} from \"react\";\r\n\r\nimport { Container, Row, Col, Form } from 'react-bootstrap';\r\nimport SearchTutors from \"./SearchTutors\";\r\nimport TutorsFilterControls from \"./TutorsFilterControls\";\r\nimport { getTutors } from \"../services\";\r\nimport {useForm} from 'react-hook-form';\r\nimport Spinner from './common/Spinner';\r\n\r\n\r\nexport default function TutorsFilter() {\r\n  const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [tutors, setTutors] = useState([]);\r\n    const [totalTutors, setTotalTutors] = useState(0);\r\n    const [tutorFilter, settutorFilter] = useState({});\r\n    const [subject, setsubject] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n      // get user and set form fields\r\n      setIsLoading(true)\r\n      getTutors().then(tutors => {\r\n        setIsLoading(false)\r\n          setTutors(tutors);\r\n          setTotalTutors(tutors.length)\r\n      }).catch(error=>{\r\n        setIsLoading(false)\r\n        console.log(error)\r\n      })\r\n    }, []);\r\n\r\n\r\n    const findTutorsBySubject = (data)=>{\r\n    console.log(data)\r\n    setsubject(data.subject)\r\n\r\n    let filter = tutorFilter\r\n    if(data.subject){\r\n      filter.teachingSubjects = data.subject\r\n    }else {\r\n      delete filter.teachingSubjects\r\n    }\r\n \r\n    filterTutors(filter)\r\n      \r\n    }\r\n\r\n    const applyFilterOnSearchTutors = (data)=>{\r\n      //console.log(data)\r\n      \r\n      let fltr = data || tutorFilter\r\n      fltr = JSON.parse(JSON.stringify(fltr))\r\n\r\n      if(fltr.feesRange === \"\" || fltr.feesRange === \"0\") {\r\n        delete fltr.fees\r\n        delete fltr.feesRange\r\n      }\r\n      else {\r\n        fltr.fees = {gt:parseInt(fltr.feesRange)}\r\n        delete fltr.feesRange\r\n      }\r\n      if(fltr.feesPer === \"\") delete fltr.feesPer\r\n      if(fltr.teachingCity === \"\") delete fltr.teachingCity\r\n      if(fltr.gender === \"\") delete fltr.gender\r\n\r\n      settutorFilter(fltr)\r\n      if(subject){\r\n        fltr.teachingSubjects = subject\r\n      }\r\n     \r\n      filterTutors(fltr)\r\n      }\r\n    \r\n      function filterTutors (filter){\r\n        setIsLoading(true)\r\n        getTutors(filter).then(tutors => {\r\n          setIsLoading(false)\r\n          setTutors(tutors);\r\n          setTotalTutors(tutors.length)\r\n        }).catch(error=>{\r\n          setIsLoading(false)\r\n          console.log(error)\r\n        })\r\n      }\r\n\r\n      return (\r\n          <div>\r\n            {isLoading && <Spinner />}\r\n              <Container>\r\n                    <Row>\r\n                    <Col md={3} >\r\n                       <TutorsFilterControls\r\n                      filterTutors={applyFilterOnSearchTutors}\r\n                       />\r\n                      </Col>\r\n\r\n                    <Col md={9} >\r\n                        \r\n                       <SearchTutors \r\n                        totalTutors={totalTutors}\r\n                        tutors={tutors}\r\n                        findTutors={findTutorsBySubject}\r\n                       />\r\n\r\n                    </Col>\r\n\r\n                    </Row>\r\n\r\n                </Container>\r\n              \r\n          </div>\r\n      )\r\n    \r\n}","\r\nimport React, {setState} from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nexport default class DSHeader extends React.Component {\r\n  \r\n\r\n    render(){\r\n\r\n      return (\r\n          <div id=\"header\" className=\"\">\r\n            <Container>\r\n            <Row>\r\n            <Col xs={4}>\r\n                <h1 id=\"logo\"> Foster </h1>\r\n            </Col>\r\n            <Col xs={8}>\r\n              {/* <ul id=\"menu\" className=\"float-md-right\">\r\n                <li> <Link to=\"/\">Home</Link> </li>\r\n                <li> <Link to=\"/tutors\">Find A Tutor</Link> </li>\r\n                <li> <Link to=\"/login\">Login</Link> </li>\r\n                <li> <Link to=\"/register\">Register</Link> </li>\r\n              </ul> */}\r\n            </Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n      </div>\r\n      )\r\n    }\r\n}","\r\nimport React, {useState, useEffect, useRef} from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Accordion, Card } from 'react-bootstrap';\r\nimport { uploadCustomerImage, getCustomerImage } from \"../services\";\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { constants } from \"../constants\";\r\nimport { Routes } from \"../constants/routes\";\r\n\r\n\r\n\r\nexport default function DSMenu ({children, ...restProps}) {\r\n\r\n    const [profileImage, setprofileImage] = useState({});\r\n    const [fileupload, setfileupload] = useState('');\r\n    const [customer, setcustomer] = useState({});\r\n    const [activeLinkClass, setactiveLinkClass] = useState('active');\r\n    const [activeAccordionsClass, setactiveAccordionsClass] = useState('accordions-active');\r\n    const [customerName, setcustomerName] = useState('');\r\n   // const [customerImage, setcustomerImage] = useState('');\r\n   let userId = localStorage.getItem('userId')\r\n   let user = localStorage.getItem('user')\r\n   let userImage = localStorage.getItem('userImage')\r\n   \r\n      \r\n  useEffect(() => {\r\n  \r\n    \r\n    if(!user){\r\n        window.location.href = '/'\r\n        return\r\n    }\r\n    user = JSON.parse(user)\r\n    setcustomerName(user.firstName +' '+ user.lastName)\r\n    user.imageUrl = userImage ? userImage : user.imageUrl \r\n    \r\n    //let image = user.imageUrl? user.imageUrl : '/images/customers/default.jpg'\r\n    //setfileupload(constants.api_server()+image)\r\n    let image = \"/images/default-user.jpg\"\r\n    setfileupload(image)\r\n   \r\n  }, []);\r\n\r\n  const changeHandler = (event) =>{\r\n      console.log('event.target.files[0]', event.target.files[0])\r\n      let file = event.target.files[0]\r\n      setfileupload(URL.createObjectURL(file ) )\r\n      var reader = new FileReader();\r\n      var baseString;\r\n      reader.onloadend = function () {\r\n        baseString = reader.result;\r\n   // console.log(baseString); \r\n        uploadCustomerImage({image: baseString, extention: '.'+ file.name.split('.')[1], customerId: userId})\r\n        .then(result => {\r\n            if(result.resultCode == '2001'){\r\n                if(typeof user === 'string' ){\r\n                    user = JSON.parse(user)\r\n                }\r\n                user.imageUrl = result.imageUrl\r\n                localStorage.setItem('userImage', result.imageUrl )\r\n                NotificationManager.success(result.message, 'Successful!', 2000);\r\n                return\r\n            }else {\r\n                NotificationManager.error(result.error.message, 'Error!', 2000);\r\n\r\n            }\r\n\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n        })\r\n    }\r\n    reader.readAsDataURL(file);\r\n\r\n     }\r\n\r\n     const changeActiveClass = (event) => {\r\n         document.getElementsByClassName('active')[0].classList.remove(activeLinkClass) ;\r\n          event.target.classList.add(activeLinkClass) \r\n          if(document.getElementById(\"dashboar-menu\").classList.value.split(' ').includes('toogleMenuShow') ){\r\n            document.getElementById(\"dashboar-menu\").classList.remove('toogleMenuShow');\r\n            document.getElementById(\"dashboar-menu\").classList.add('toogleMenuHide');       \r\n          }\r\n        }\r\n     \r\n        const changeActiveAccordionsClass = (event) => {\r\n         document.getElementsByClassName('accordions-active')[0].classList.remove(activeAccordionsClass) ;\r\n          event.target.classList.add(activeAccordionsClass) \r\n        }\r\n\r\n       \r\n\r\n      return (\r\n          <div id=\"dashboar-menu\" {...restProps}>\r\n               <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n              <div id=\"dashboar-menu-heading\">\r\n              <input ref={input => setprofileImage(input) }\r\n               type=\"file\" id=\"file1\" name=\"image\" accept=\"image/*\" \r\n               capture \r\n               style={{display:\"none\" }}\r\n               onChange={ changeHandler }\r\n               />\r\n              <img src={fileupload}\r\n              id=\"upfile1\" style={{cursor:\"pointer\"}}\r\n              alt=\"user profile image\" \r\n              onClick={ ()=>{ profileImage.click()} }\r\n             \r\n              />\r\n              <h4>{customerName} </h4>\r\n              {/* <p>\r\n                  <i className=\"fa fa-user\">\r\n                  </i>\r\n                  View Profile\r\n              </p> */}\r\n              </div>\r\n              <h5>Dashboard </h5>\r\n              \r\n            <Accordion defaultActiveKey=\"0\" id=\"menue-accordion\">\r\n            <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\" onClick={changeActiveAccordionsClass} className=\"accordions-active\" >\r\n                My Profile\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\" className=\"accordions-links \">\r\n                <Card.Body>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link className={`nav-link ${activeLinkClass}`} onClick={changeActiveClass} to={Routes.aboutInfo}>About</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link className=\"nav-link \" onClick={changeActiveClass} to={Routes.contactInfo}>Contact Info</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link className=\"nav-link \" onClick={changeActiveClass} to={Routes.expertise}>Expertise</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link className=\"nav-link \" onClick={changeActiveClass} to={Routes.education}>Education</Link>\r\n                    </p>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                        <Link className=\"nav-link \" onClick={changeActiveClass} to={Routes.studyMediums}>Teaching Mediums</Link>\r\n                    </p>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            \r\n\r\n            <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"1\" onClick={changeActiveAccordionsClass} >\r\n                My Network\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"1\" className=\"accordions-links\">\r\n                <Card.Body>\r\n                    <p>\r\n                    {/* <i className=\"fa fa-user\"> </i> */}\r\n                    <Link className=\"nav-link\" onClick={changeActiveClass} to={Routes.newRequest}>New Requests</Link>\r\n                    </p>\r\n                    {/* <p>\r\n                    <i className=\"fa fa-user\"> </i>\r\n                    <Link className=\"nav-link\" to=\"/\">Online Classes</Link>\r\n                    </p>\r\n                    <p>\r\n                    <i className=\"fa fa-user\"> </i>\r\n                        <Link className=\"nav-link\" to=\"#\">Get Verified</Link>\r\n                    </p> */}\r\n                    {/* <p>\r\n                        <Link className=\"nav-link\" to=\"#\">Student Reviews</Link>\r\n                    </p> */}\r\n                    <p>\r\n                        <Link className=\"nav-link\" onClick={changeActiveClass} to={Routes.mySessions}>My Sessions</Link>\r\n                    </p>\r\n                    <p>  \r\n                        <Link className=\"nav-link \" to={Routes.feedback} onClick={changeActiveClass} >Feed Back</Link>\r\n                    </p>\r\n                    \r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n\r\n            </Accordion>\r\n            \r\n            <ul className=\"nav flex-column\" style={{marginTop:'50px', marginBottom:'100px'}}>\r\n              \r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link \" to={Routes.home} onClick={()=> { localStorage.clear(); window.location.reload(); } }>Log Out</Link>\r\n                </li>\r\n                \r\n                </ul>\r\n           \r\n                </Col>\r\n                </Row>\r\n            </Container>\r\n            </div>\r\n      )\r\n    \r\n}","export default __webpack_public_path__ + \"static/media/camera.69bb6510.svg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M192,379.313L91.36,479.953c-6.224,6.272-16.352,6.32-22.624,0.096   c-3.008-2.992-4.72-7.056-4.736-11.296v-89.44H192z\",\n  \"data-original\": \"#FFDA68\",\n  className: \"active-path\",\n  \"data-old_color\": \"#FFDA68\",\n  fill: \"#26C6DA\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M485.28,51.633L400,129.073v116.32l85.28,77.44c6.56,5.92,16.672,5.408,22.592-1.152   c2.608-2.896,4.08-6.624,4.128-10.528V63.473c-0.016-8.832-7.2-15.984-16.032-15.968C492.016,47.521,488.208,48.993,485.28,51.633z   \",\n  \"data-original\": \"#FFDA68\",\n  className: \"active-path\",\n  \"data-old_color\": \"#FFDA68\",\n  fill: \"#26C6DA\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M304,27.313H64c-35.344,0-64,28.656-64,64v192c0,35.344,28.656,64,64,64h240  c35.344,0,64-28.656,64-64v-192C368,55.969,339.344,27.313,304,27.313z M192,267.313h-80c-17.68,0-32-14.32-32-32s14.32-32,32-32h80  c17.68,0,32,14.32,32,32S209.68,267.313,192,267.313z M256,171.313H112c-17.68,0-32-14.32-32-32s14.32-32,32-32h144  c17.68,0,32,14.32,32,32S273.68,171.313,256,171.313z\",\n  \"data-original\": \"#FFDA68\",\n  className: \"active-path\",\n  \"data-old_color\": \"#FFDA68\",\n  fill: \"#26C6DA\"\n});\n\nfunction SvgCamera(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    width: \"512px\",\n    height: \"512px\",\n    className: \"\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      opacity: 0.4\n    }\n  }, _ref2), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      opacity: 0.4\n    }\n  }, _ref3), _ref4)));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCamera);\nexport default __webpack_public_path__ + \"static/media/camera.69bb6510.svg\";\nexport { ForwardRef as ReactComponent };","export default __webpack_public_path__ + \"static/media/camera-stop.5d5abf1d.svg\";","export default __webpack_public_path__ + \"static/media/microphone.c954ec03.svg\";","export default __webpack_public_path__ + \"static/media/microphone-stop.bdea9903.svg\";","export default __webpack_public_path__ + \"static/media/share.a5ae5800.svg\";","export default __webpack_public_path__ + \"static/media/hang-up.0fd93cba.svg\";","export default __webpack_public_path__ + \"static/media/fullscreen.fe7e5433.svg\";","export default __webpack_public_path__ + \"static/media/minimize.34ff6977.svg\";","export default __webpack_public_path__ + \"static/media/ringtone.15727de3.mp3\";","import React, { useEffect, useState, useRef, Suspense } from 'react';\r\nimport io from \"socket.io-client\";\r\nimport './index.css';\r\nimport Peer from \"simple-peer\";\r\nimport Rodal from 'rodal'\r\nimport {Howl} from 'howler'\r\n\r\nimport Navigation from './Components/Navigation/Navigation'\r\nimport Footer from './Components/Footer/Footer'\r\nimport { constants } from \"../constants\";\r\nimport  'rodal/lib/rodal.css'\r\n\r\nimport camera from './Icons/camera.svg'\r\nimport { ReactComponent as YourSvg } from './Icons/camera.svg'\r\nimport camerastop from './Icons/camera-stop.svg'\r\nimport microphone from './Icons/microphone.svg'\r\nimport microphonestop from './Icons/microphone-stop.svg'\r\nimport share from './Icons/share.svg'\r\nimport hangup from './Icons/hang-up.svg'\r\nimport fullscreen from './Icons/fullscreen.svg'\r\nimport minimize from './Icons/minimize.svg'\r\nimport ringtone from './Sounds/ringtone.mp3'\r\n\r\nconst Watermark = React.lazy(()=>import('./Components/Watermark/Watermark'))\r\nconst ringtoneSound = new Howl({\r\n  src: [ringtone],\r\n  loop: true,\r\n  preload: true\r\n})\r\n\r\n\r\n\r\n\r\nfunction WebrtcApp(props) {\r\n  const [yourID, setYourID] = useState(\"\");\r\n  const [users, setUsers] = useState({});\r\n  const [stream, setStream] = useState();\r\n  const [receivingCall, setReceivingCall] = useState(false);\r\n  const [caller, setCaller] = useState(\"\");\r\n  const [callingFriend, setCallingFriend] = useState(false);\r\n  const [callerSignal, setCallerSignal] = useState();\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [callRejected, setCallRejected] = useState(false);\r\n  const [receiverID, setReceiverID] = useState('')\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [modalMessage, setModalMessage] = useState('')\r\n  const [audioMuted, setAudioMuted] = useState(false)\r\n  const [videoMuted, setVideoMuted] = useState(false)\r\n  const [isfullscreen, setFullscreen] = useState(false)\r\n  const [copied, setCopied] = useState(false)\r\n  const [linkcopied, setLinkCopied] = useState(false)\r\n  const [callingLink, setcallingLink] = useState('')\r\n  const [disableusernameinputfield, setdisableusernameinputfield] = useState(false);\r\n  \r\n  const userVideo = useRef();\r\n  const partnerVideo = useRef();\r\n  const socket = useRef();\r\n  const myPeer=useRef();\r\n\r\n  let landingHTML=<>\r\n    {/* <Navigation/> */}\r\n    <main style={{opasity:'100'}}>\r\n      <div className=\"u-margin-top-xxlarge u-margin-bottom-xxlarge\">\r\n    <div className=\"o-wrapper-l\">\r\n        <div className=\"hero flex flex-column\">\r\n            <div>\r\n                {/* <div className=\"welcomeText\">\r\n                    Welcome To Online Session\r\n                </div> */}\r\n                <div className=\"descriptionText\">\r\n                    Start your session here.\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"actionText\">Share your id: \r\n                 <span className={copied?\"username highlight copied\":\"username highlight\"} onClick={()=>{showCopiedMessage()}}>{yourID}</span> ?  OR</div>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"actionText\">Share your call link: \r\n                 <span className={linkcopied?\"username highlight copied\":\"username highlight\"} onClick={()=>{showLinkCopiedMessage()}}>{callingLink}</span> ?</div>\r\n            </div>\r\n\r\n\r\n            <div className=\"callBox flex\">\r\n                <input type=\"text\"  placeholder=\"Call Reveiver ID\" value={receiverID} onChange={e => setReceiverID(e.target.value)} className=\"form-input\"/>\r\n                {/* {yourID === receiverID ?\r\n                  <button onClick={() => {} } className=\"primaryButton\">Join</button>\r\n                  :\r\n                  <button onClick={() => callPeer(receiverID.toLowerCase().trim())} className=\"primaryButton\">Call</button>  \r\n                } */}\r\n                <button onClick={() => callPeer(receiverID.toLowerCase().trim())} className=\"primaryButton\">Call</button>  \r\n\r\n                {/* <button onClick={() => callPeer(receiverID.toLowerCase().trim())} className=\"primaryButton\">Call</button> */}\r\n            </div>\r\n            {receiverID &&\r\n            \r\n            <div>\r\n                <div className=\"actionText\">Call receiver id: \r\n                 <span className=\"username highlight\" >{receiverID}</span></div>\r\n            </div>\r\n            }\r\n            {/* <div>\r\n                To call your friend, ask them to open it in their browser. <br/>\r\n                Send your username (<span className=\"username\">{yourID}</span>) and wait for their call <span style={{fontWeight: 600}}>OR</span> enter their username and hit call!\r\n            </div> */}\r\n        </div>\r\n    </div>\r\n    </div>\r\n    </main>\r\n    {/* <Footer/> */}\r\n  </>\r\n\r\n\r\n  useEffect(() => {\r\n    const DetectRTC = window.DetectRTC\r\n    if (DetectRTC && DetectRTC.isWebRTCSupported === false) {\r\n      alert('Please use Chrome or Firefox.');\r\n    }\r\n\r\n  //   if (DetectRTC && DetectRTC.hasWebcam === false) {\r\n  //     alert('Please install an external webcam device.');\r\n  // }\r\n  \r\n  if (DetectRTC && DetectRTC.hasMicrophone === false &&\r\n     DetectRTC.isAudioContextSupported === false) {\r\n      alert('Please install an external microphone device.'+ DetectRTC.hasMicrophone);\r\n  }\r\n  \r\n  // if (DetectRTC && DetectRTC.hasSpeakers === false &&\r\n  //    (DetectRTC.browser.name === 'Chrome' || DetectRTC.browser.name === 'Edge')) {\r\n  //     alert('Oops, your system can not play audios.'+ DetectRTC.hasSpeakers);\r\n  // }\r\n \r\n if(DetectRTC)\r\n  DetectRTC.DetectLocalIPAddress(function(ipsList){\r\n    console.log(ipsList)\r\n  })\r\n  // console.log('isMobileDevice',DetectRTC.isMobileDevice)\r\n  // console.log('DetectRTC.audioInputDevices',DetectRTC.audioInputDevices)\r\n  // console.log('DetectRTC.audioOutputDevices',DetectRTC.audioOutputDevices)\r\n  // console.log('DetectRTC.videoInputDevices',DetectRTC.videoInputDevices)\r\n  // console.log('DetectRTC.osName',DetectRTC.osName)\r\n  // console.log('DetectRTC.osVersion',DetectRTC.osVersion)\r\n  // console.log('DetectRTC.browser',DetectRTC.browser)\r\n\r\n  \r\n  //console.log('obj',DetectRTC.load(function(data){console.log(data)}))\r\n\r\n    if(props && props.match && props.match.params){\r\n      setReceiverID(props.match.params.receiverId)\r\n      \r\n      setdisableusernameinputfield(true)\r\n    }\r\n    \r\n    let instance = constants.signalling_server()\r\n   \r\n    socket.current = io.connect(instance);\r\n   \r\n    socket.current.on('connect', () => {\r\n      let userId = localStorage.getItem('userId')\r\n      //if(userId){\r\n        socket.current.emit('session', {userId})\r\n        window.currentSocket = socket.current;\r\n      //}\r\n      \r\n     \r\n  })\r\n    socket.current.on('connect_error', function(error) {\r\n      console.log(\"connect_error to WS server\", error);\r\n    \r\n    });\r\n   \r\n    socket.current.on('disconnect', function() {\r\n      console.log('Client disconnected.');\r\n      socket.current.emit('remove-disconnected', {userId : yourID})\r\n    });\r\n\r\n    //console.log('socket.current ', socket.current)\r\n\r\n    socket.current.on(\"yourID\", (id) => {\r\n      console.log('received yourID: ', id)\r\n      setYourID(id);\r\n      setcallingLink(`${window.location.origin}/calling-route/${id}`)\r\n     \r\n    })\r\n    socket.current.on(\"allUsers\", (users) => {\r\n      setUsers(users);\r\n    })\r\n\r\n    socket.current.on(\"hey\", (data) => {\r\n      console.log('socket.current on hey', data)\r\n      setReceivingCall(true);\r\n      ringtoneSound.play();\r\n      setCaller(data.from);\r\n      setCallerSignal(data.signal);\r\n    })\r\n\r\n\r\n  }, []);\r\n\r\n  function callPeer(id) {\r\n    console.log('callPeer id: ', id)\r\n    console.log('caller id: ', yourID)\r\n    //if(id!=='' && users[id] && id!==yourID){\r\n    if(id && id !== yourID ){\r\n     \r\n      navigator\r\n      .mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then(stream => {\r\n        setStream(stream);\r\n        setCallingFriend(true)\r\n        setCaller(id)\r\n        console.log('userVideo: ',userVideo)\r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = stream;\r\n        }\r\n        const peer = new Peer({\r\n          initiator: true,\r\n          trickle: false,\r\n          config: {\r\n    \r\n            iceServers: [\r\n                {\r\n                    urls: \"stun:numb.viagenie.ca\",\r\n                    username: \"sultan1640@gmail.com\",\r\n                    credential: \"98376683\"\r\n                },\r\n                {\r\n                    urls: \"turn:numb.viagenie.ca\",\r\n                    username: \"sultan1640@gmail.com\",\r\n                    credential: \"98376683\"\r\n                }\r\n            ]\r\n        },\r\n          stream: stream,\r\n        });\r\n\r\n        myPeer.current=peer;\r\n    \r\n        peer.on(\"signal\", data => {\r\n          socket.current.emit(\"callUser\", { userToCall: id, signalData: data, from: yourID })\r\n        })\r\n    \r\n        peer.on(\"stream\", stream => {\r\n          console.log('peer.on stream', stream)\r\n          if (partnerVideo.current) {\r\n            partnerVideo.current.srcObject = stream;\r\n          }\r\n        });\r\n\r\n        peer.on('error', (err)=>{\r\n          console.log(err)\r\n          endCall()\r\n        })\r\n    \r\n        socket.current.on(\"callAccepted\", signal => {\r\n          console.log('socket.current.on callAccepted', signal)\r\n          setCallAccepted(true);\r\n          peer.signal(signal);\r\n        })\r\n\r\n        socket.current.on('close', ()=>{\r\n          console.log('socket closed')\r\n         // window.location.reload()\r\n          window.location.href = '/'\r\n        })\r\n  \r\n        socket.current.on('rejected', ()=>{\r\n          console.log('socket rejected')\r\n          //window.location.reload()\r\n          window.location.href = '/'\r\n        })\r\n      })\r\n      .catch((error)=>{\r\n        console.log('error', error)\r\n        setModalMessage('You cannot place/ receive a call without granting video and audio permissions! Please change your settings to use.')\r\n        setModalVisible(true)\r\n      })\r\n    } else {\r\n      setModalMessage('We think the username entered is wrong. Please check again and retry!')\r\n      setModalVisible(true)\r\n      return\r\n    }\r\n  }\r\n\r\n  function acceptCall() {\r\n    ringtoneSound.unload();\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\r\n      setStream(stream);\r\n      if (userVideo.current) {\r\n        userVideo.current.srcObject = stream;\r\n      }\r\n      setCallAccepted(true);\r\n      const peer = new Peer({\r\n        initiator: false,\r\n        trickle: false,\r\n        stream: stream,\r\n      });\r\n\r\n      myPeer.current=peer\r\n\r\n      peer.on(\"signal\", data => {\r\n        console.log('peer.on signal ', data)\r\n        socket.current.emit(\"acceptCall\", { signal: data, to: caller })\r\n      })\r\n\r\n      peer.on(\"stream\", stream => {\r\n        console.log('peer.on stream | partnerVideo.current.srcObject', stream)\r\n        partnerVideo.current.srcObject = stream;\r\n      });\r\n\r\n      peer.on('error', (err)=>{\r\n        console.log('peer.on error ', err)\r\n        endCall()\r\n      })\r\n\r\n      peer.signal(callerSignal);\r\n\r\n      socket.current.on('close', ()=>{\r\n        console.log('socket closed')\r\n       // window.location.reload()\r\n       \r\n       setModalMessage('Your call connection is closed!')\r\n        setModalVisible(true)\r\n        window.location.href = '/'\r\n      })\r\n    })\r\n    .catch(()=>{\r\n      setModalMessage('You cannot place/ receive a call without granting video and audio permissions! Please change your settings.')\r\n      setModalVisible(true)\r\n    })\r\n  }\r\n\r\n  function rejectCall(){\r\n    ringtoneSound.unload();\r\n    setCallRejected(true)\r\n    socket.current.emit('rejected', {to:caller})\r\n    //window.location.reload()\r\n    window.location.href = '/'\r\n   //setModalMessage('Your call is rejected!')\r\n    //setModalVisible(true)\r\n  }\r\n\r\n  function endCall(){\r\n    console.log('call ending..')\r\n    myPeer.current.destroy()\r\n    socket.current.emit('close',{to:caller})\r\n    window.location.reload()\r\n   // window.location.href = '/'\r\n   //setModalMessage('Your call is ended!')\r\n    //setModalVisible(true)\r\n  }\r\n\r\n  function shareScreen(){\r\n    navigator.mediaDevices.getDisplayMedia({cursor:true})\r\n    .then(screenStream=>{\r\n      myPeer.current.replaceTrack(stream.getVideoTracks()[0],screenStream.getVideoTracks()[0],stream)\r\n      userVideo.current.srcObject=screenStream\r\n      screenStream.getTracks()[0].onended = () =>{\r\n      myPeer.current.replaceTrack(screenStream.getVideoTracks()[0],stream.getVideoTracks()[0],stream)\r\n      userVideo.current.srcObject=stream\r\n      }\r\n    })\r\n  }\r\n\r\n  function toggleMuteAudio(){\r\n    if(stream){\r\n      setAudioMuted(!audioMuted)\r\n      stream.getAudioTracks()[0].enabled = audioMuted\r\n    }\r\n  }\r\n\r\n  function toggleMuteVideo(){\r\n    if(stream){\r\n      setVideoMuted(!videoMuted)\r\n      stream.getVideoTracks()[0].enabled = videoMuted\r\n    }\r\n  }\r\n\r\n  function renderLanding() {\r\n    if(!callRejected && !callAccepted && !callingFriend)\r\n      return 'block'\r\n    return 'none'\r\n  }\r\n\r\n  function renderCall() {\r\n    if(!callRejected && !callAccepted && !callingFriend)\r\n      return 'none'\r\n    return 'block'\r\n  }\r\n\r\n  function isMobileDevice() {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\r\n    return check;\r\n  };\r\n\r\n  function showCopiedMessage(){\r\n    navigator.clipboard.writeText(yourID)\r\n    setCopied(true)\r\n    setInterval(()=>{\r\n      setCopied(false)\r\n    },1000)\r\n  }\r\n\r\n  function showLinkCopiedMessage(){\r\n    navigator.clipboard.writeText(callingLink)\r\n    setLinkCopied(true)\r\n    setInterval(()=>{\r\n      setLinkCopied(false)\r\n    },1000)\r\n  }\r\n\r\n  let UserVideo;\r\n  if (stream) {\r\n    UserVideo = (\r\n      <video className=\"userVideo\" playsInline muted ref={userVideo} autoPlay />\r\n    );\r\n  }\r\n\r\n  let PartnerVideo;\r\n  if (callAccepted && isfullscreen) {\r\n    PartnerVideo = (\r\n      <video className=\"partnerVideo cover\" playsInline ref={partnerVideo} autoPlay />\r\n    );\r\n  } else if (callAccepted && !isfullscreen){\r\n    PartnerVideo = (\r\n      <video className=\"partnerVideo\" playsInline ref={partnerVideo} autoPlay />\r\n    );\r\n  }\r\n\r\n  let incomingCall;\r\n  if (receivingCall && !callAccepted && !callRejected) {\r\n    incomingCall = (\r\n      <div className=\"incomingCallContainer\">\r\n        <div className=\"incomingCall flex flex-column\">\r\n          <div><span className=\"callerID\">{caller}</span> is calling you!</div>\r\n          <div className=\"incomingCallButtons flex\">\r\n          <button name=\"accept\" className=\"alertButtonPrimary\" onClick={()=>acceptCall()}>Accept</button>\r\n          <button name=\"reject\" className=\"alertButtonSecondary\" onClick={()=>rejectCall()}>Reject</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  let audioControl;\r\n  if(audioMuted){\r\n    audioControl=<span className=\"iconContainer\" onClick={()=>toggleMuteAudio()}>\r\n      {/* <img src={microphonestop} alt=\"Unmute audio\"/> */}\r\n      <button className=\"btn\" >Unmute audio</button>\r\n\r\n    </span>\r\n  } else {\r\n    audioControl=<span className=\"iconContainer\" onClick={()=>toggleMuteAudio()}>\r\n      {/* <img src={microphone} alt=\"Mute audio\"/> */}\r\n      <button className=\"btn\" >Mute audio</button>\r\n    </span>\r\n  }\r\n\r\n  let videoControl;\r\n  if(videoMuted){\r\n    videoControl=<span className=\"iconContainer\" onClick={()=>toggleMuteVideo()}>\r\n      \r\n      {/* <img src={camera} alt=\"Resume video\"/> */}\r\n      <button className=\"btn\" >Resume Video</button>\r\n    </span>\r\n  } else {\r\n    videoControl=<span className=\"iconContainer\" onClick={()=>toggleMuteVideo()}>\r\n      {/* <img src={camera} alt=\"Stop audio\"/> */}\r\n      <button className=\"btn\" >Stop Video</button>\r\n    </span>\r\n  }\r\n\r\n  let screenShare=<span className=\"iconContainer\" onClick={()=>shareScreen()}>\r\n    {/* <img src={share} alt=\"Share screen\"/> */}\r\n    <button className=\"btn\" >Share Screen</button>\r\n  </span>\r\n  if(isMobileDevice()){\r\n    screenShare=<></>\r\n  }\r\n\r\n  let hangUp=<span className=\"iconContainer\" onClick={()=>endCall()}>\r\n    {/* <img src={hangup} alt=\"End call\"/> */}\r\n    <button className=\"btn\" >End Call</button>\r\n  </span>\r\n\r\n  let fullscreenButton;  \r\n  if(isfullscreen){\r\n    fullscreenButton=<span className=\"iconContainer\" onClick={()=>{setFullscreen(false)}}>\r\n      {/* <img src={minimize} alt=\"fullscreen\"/> */}\r\n      <button className=\"btn\" >minimize</button>\r\n\r\n    </span>\r\n  } else {\r\n    fullscreenButton=<span className=\"iconContainer\" onClick={()=>{setFullscreen(true)}}>\r\n      {/* <img src={fullscreen} alt=\"fullscreen\"/> */}\r\n      <button className=\"btn\" >Full Screen</button>\r\n    </span>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{display: renderLanding()}}>\r\n        {landingHTML}\r\n        <Rodal \r\n          visible={modalVisible} \r\n          onClose={()=>setModalVisible(false)} \r\n          width={20} \r\n          height={5} \r\n          measure={'em'}\r\n          closeOnEsc={true}\r\n        >\r\n          <div>{modalMessage}</div>\r\n        </Rodal>\r\n        {incomingCall}\r\n      </div>\r\n      <div className=\"callContainer\" style={{display: renderCall()}}>\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Watermark />\r\n        </Suspense>\r\n        <div className=\"partnerVideoContainer\">\r\n          {PartnerVideo}\r\n        </div>\r\n        <div className=\"userVideoContainer\">\r\n          {UserVideo}\r\n        </div>\r\n        <div className=\"controlsContainer flex\">\r\n          {audioControl}\r\n          {videoControl}\r\n          {screenShare}\r\n          {fullscreenButton}\r\n          {hangUp}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WebrtcApp;","\r\nimport React, {useState, useEffect, useRef} from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { constants } from \"../../constants\";\r\n\r\nexport default function Socket () {\r\n\r\n    const [yourID, setYourID] = useState(\"\");\r\n    const [users, setUsers] = useState({});\r\n    const socket = useRef();\r\n\r\n    useEffect(() => {\r\n  \r\n        let userId = localStorage.getItem('userId')\r\n           if(!userId){\r\n             return\r\n           }\r\n           let instance = constants.signalling_server()\r\n          \r\n        socket.current = io.connect(instance);\r\n       \r\n        //window.currentSocket = socket.current;\r\n        socket.current.on('connect', () => {\r\n            socket.current.emit('session', {userId})\r\n            window.currentSocket = socket.current;\r\n           \r\n        })\r\n    \r\n        socket.current.on('connect_error', function(error) {\r\n          console.log(\"connect_error to WS server\", error);\r\n        \r\n        });\r\n       \r\n        socket.current.on('disconnect', function() {\r\n          console.log('Client disconnected.');\r\n        });\r\n    \r\n        //console.log('socket.current ', socket.current)\r\n    \r\n        socket.current.on(\"yourID\", (id) => {\r\n          console.log('received userid: ', id)\r\n          setYourID(id);\r\n          localStorage.setItem('socketId', id)\r\n        })\r\n        socket.current.on(\"allUsers\", (users) => {\r\n          setUsers(users);\r\n        })\r\n    \r\n        // socket.current.on(\"hey\", (data) => {\r\n        //   setReceivingCall(true);\r\n        //   ringtoneSound.play();\r\n        //   setCaller(data.from);\r\n        //   setCallerSignal(data.signal);\r\n        // })\r\n      }, []);\r\n\r\n      return (<div></div>)\r\n}","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\nimport { DSAbout, DSContact, DSExpertise,\r\n  DSEducation,\r\n  DSMediums,\r\n  DSNewRequests,\r\n  DSChatBox,\r\n  DSClasses,\r\n  DSClassesDetails,\r\n  AcceptStudentRequest,\r\n  DSFeedback\r\n } from \"../components\";\r\n\r\n import  WebrtcApp  from \"../webrtc/App\";\r\n\r\n import Socket from \"../components/common/Socket.js\";\r\n\r\nexport default class DSContent extends React.Component {\r\n \r\n  render(){\r\n    return (\r\n        <div>\r\n          <Socket />\r\n\r\n            <Switch>\r\n                  <Route path=\"/dashboard/about\">\r\n                  <DSAbout />\r\n                  </Route>\r\n\r\n                  <Route path=\"/dashboard/contact\">\r\n                  <DSContact />\r\n                  </Route>\r\n                  \r\n                  <Route path=\"/dashboard/expertise\">\r\n                  <DSExpertise />\r\n                  </Route>\r\n                  \r\n                  <Route path=\"/dashboard/education\">\r\n                  <DSEducation />\r\n                  </Route>\r\n                 \r\n                  <Route path=\"/dashboard/mediums\">\r\n                  <DSMediums />\r\n                  </Route>\r\n                 \r\n                  <Route path=\"/dashboard/new-requests\">\r\n                  <DSNewRequests />\r\n                  </Route>\r\n                  \r\n                  <Route path=\"/dashboard/chat-box/:to?\" render={(props) => <DSChatBox {...props} />} >\r\n                                                          \r\n                   </Route>\r\n\r\n                   <Route path=\"/dashboard/classes\">\r\n                  <DSClasses />\r\n                  </Route>\r\n\r\n\r\n                  <Route path=\"/dashboard/class/detail/:instructor\" render={(props) => <DSClassesDetails {...props} />} >\r\n                                                          \r\n                  </Route>\r\n                  \r\n                  <Route path=\"/dashboard/accept-request/:requestId/from/:requestFrom\" render={(props) => <AcceptStudentRequest {...props} />} >\r\n                                                          \r\n                  </Route>\r\n                 \r\n                  {/* <Route path=\"/dashboard/calling-route/:receiverId\" render={(props) => <WebrtcApp {...props} />} >\r\n                                                          \r\n                  </Route> */}\r\n                 \r\n                  <Route path=\"/dashboard/feedback\">\r\n                  <DSFeedback />\r\n                  </Route>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n  }\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\nfunction DSAbout  (props){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [customer, setCustomer] = useState({});\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    const onSubmit = (data) => {\r\n       if(data.fees){\r\n           data.fees = parseInt(data.fees)\r\n       }else {\r\n           delete data.fees\r\n       }\r\n       //data.userType = customer.userType;\r\n       let postData = {...customer, ...data};\r\n       setIsLoading(true)\r\n    updateCustomerInfo(postData, {customerId: userId})\r\n    .then(result =>{\r\n        setIsLoading(false)\r\n        //console.log(result)\r\n        if(result.error){\r\n            NotificationManager.error(result.error.message, 'Error!', 2000);\r\n            return\r\n        }\r\n        NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n    })\r\n    .catch(error=>{\r\n        setIsLoading(false)\r\n       // console.log(error)\r\n        NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n    })\r\n    }\r\n\r\n    useEffect(() => {\r\n            // get user and set form fields\r\n            setIsLoading(true)\r\n            getCustomerById(userId).then(customer => {\r\n                setIsLoading(false)\r\n                const fields = ['firstName',\r\n                 'lastName',\r\n                 'tagLine',\r\n                 'fees',\r\n                 'feesPer',\r\n                 'gender',\r\n                 'greateTutorLine',\r\n                 'greateTutorLine',\r\n                 'teachingExperienceLine',\r\n                ];\r\n                fields.forEach(field => setValue(field, customer[field]));\r\n                setCustomer(customer);\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, []);\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n        {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:10, offset:2}}>\r\n                <h2 className=\"section-heading\">Personal Information</h2>\r\n                <Form >\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"firstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        placeholder=\"FirstName\" \r\n                        name=\"firstName\"\r\n                        value={props.firstName}\r\n                        ref={register({required: 'firstName is required!'})}\r\n                        />\r\n                        </Form.Group>\r\n                        \r\n\r\n                        <Form.Group as={Col} controlId=\"lastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        placeholder=\"last Name\" \r\n                        name=\"lastName\"\r\n                        value={props.lastName}\r\n                        ref={register({required:'last name is required'})}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n                    {errors.firstName && <p>{errors.firstName.message}</p> }\r\n                    {errors.lastName && <p>{errors.lastName.message}</p> }\r\n\r\n                    <Form.Group controlId=\"tagline\">\r\n                        <Form.Label>Tagline </Form.Label>\r\n                        <Form.Control placeholder=\"Tagline\"\r\n                        name=\"tagLine\"\r\n                        value={props.tagLine}\r\n                        ref={register({required: 'Tag Line is required'})}\r\n                        />\r\n                    </Form.Group>\r\n                   \r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"fees\">\r\n                        <Form.Label>Fees</Form.Label>\r\n                        <Form.Control \r\n                        type=\"number\"\r\n                        placeholder=\"fees\"\r\n                        name=\"fees\"\r\n                        value={props.fees}\r\n                        ref={register({required: 'Fees is required'})}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Per</Form.Label>\r\n                        <Form.Control as=\"select\" \r\n                        defaultValue=\"Month\"\r\n                        name=\"feesPer\"\r\n                        value={props.feesPer}\r\n                        ref={register({required: 'fees as per is requried'})}\r\n                        >\r\n                            {/* <option  /> */}\r\n                            <option value=\"month\" >Month</option>\r\n                            <option value=\"week\">Week</option>\r\n                            <option value=\"hour\">Hour</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n\r\n                    <Form.Row>\r\n                        \r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Gender</Form.Label>\r\n                        <Form.Control as=\"select\" \r\n                        name=\"gender\"\r\n                        value={props.gender}\r\n                        ref={register()}\r\n                        defaultValue=\"\"\r\n                        >\r\n                            <option />\r\n                            <option>Male</option>\r\n                            <option>Female</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n                    <Form.Group controlId=\"greateTutorLine\">\r\n                        <Form.Label>What makes you a great tutor? </Form.Label>\r\n                        <Form.Control \r\n                        placeholder=\"tell students why your are the best\" \r\n                        as=\"textarea\"\r\n                        name=\"greateTutorLine\"\r\n                        value={props.greateTutorLine}\r\n                        ref={register({required: 'Description is required'})}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridAddress2\">\r\n                        <Form.Label>Teaching experience</Form.Label>\r\n                        <Form.Control \r\n                        placeholder=\"mention your experience\" \r\n                        as=\"textarea\"\r\n                        name=\"teachingExperienceLine\"\r\n                        value={props.teachingExperienceLine}\r\n                        ref={register({required: 'teaching experience is required'})}\r\n                        />\r\n                    </Form.Group>\r\n\r\n\r\n                    {/* <Form.Group id=\"formGridCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group> */}\r\n\r\n                    <Form.Row>\r\n                    <Button as={Col}  className=\"btn-dark\"\r\n                     disabled={isLoading}\r\n                     size=\"sm\"\r\n                     md={{span:8, offset:2}}\r\n                     onClick={handleSubmit(onSubmit)}\r\n                     >\r\n                        Update Personal information\r\n                    </Button>\r\n                    </Form.Row>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSAbout","import React, {useState, useEffect} from \"react\";\r\n\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nexport default function DSContact (props) {\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [customer, setCustomer] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    let userId = localStorage.getItem('userId')\r\n\r\nconst onSubmit = (data) => {\r\n       \r\n       let postData = {...customer, ...data};\r\n       setIsLoading(true)\r\n    updateCustomerInfo(postData, {customerId: userId})\r\n    .then(result =>{\r\n        setIsLoading(false)\r\n        //console.log(result)\r\n        NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n    })\r\n    .catch(error=>{\r\n        setIsLoading(false)\r\n        console.log(error)\r\n        NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n    })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // get user and set form fields\r\n        setIsLoading(true)\r\n        getCustomerById(userId).then(customer => {\r\n            setIsLoading(false)\r\n            const fields = [\r\n             'phone',\r\n             'email',\r\n             'addressLine',\r\n             'isPublicContactInfo',\r\n             \r\n             \r\n            ];\r\n            fields.forEach(field => setValue(field, customer[field]));\r\n            setCustomer(customer);\r\n        }).catch(error=>{\r\n            setIsLoading(false)\r\n            console.log(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n        })\r\n    }, []);\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n            {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:10, offset:2}}>\r\n                <h2 className=\"section-heading\">Contact Information</h2>\r\n                <Form>\r\n                   \r\n                    <Form.Group controlId=\"phone\">\r\n                        <Form.Label>Phone Number</Form.Label>\r\n                        <Form.Control placeholder=\"phone number\" \r\n                        name=\"phone\"\r\n                        value={props.phone}\r\n                        ref={register({required:'phone number is required.'})}\r\n                        />\r\n                    </Form.Group>\r\n                    {errors.phone && <p>{errors.phone.message}</p> }\r\n                   \r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control placeholder=\"Email address\"\r\n                        name=\"email\"\r\n                        \r\n                        ref={register({required:'email is required.'})}\r\n                        />\r\n                    </Form.Group>\r\n                    {errors.email && <p>{errors.email.message}</p> }\r\n\r\n                    <Form.Group controlId=\"addressLine\">\r\n                        <Form.Label>Living Address</Form.Label>\r\n                        <Form.Control placeholder=\"enter your address\"\r\n                        name=\"addressLine\"\r\n                        as=\"textarea\"\r\n                        ref={register()}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group id=\"isPublicContactInfo\">\r\n                        <Form.Check type=\"checkbox\"\r\n                         label=\"Make it public\"\r\n                         name=\"isPublicContactInfo\"\r\n                         ref={register()}\r\n                         />\r\n                    </Form.Group>\r\n\r\n                    <Button \r\n                    as={Col}  className=\"btn-dark\"\r\n                     disabled={isLoading}\r\n                     size=\"sm\"\r\n                     md={{span:6, offset:3}}\r\n                     onClick={handleSubmit(onSubmit)}\r\n                    >\r\n                        Update\r\n                    </Button>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo } from \"../services\"\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\nfunction DSExpertise  (props){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [customer, setCustomer] = useState({});\r\n    let userId = localStorage.getItem('userId')\r\n\r\n\r\n    props = {\r\n        subjects: [\r\n            'Math',\r\n            'Bio',\r\n            'physics',\r\n            'urdu',\r\n            'english',\r\n            'Math1 II',\r\n            'Math2 II',\r\n            'Math3 II',\r\n            'Math4 II',\r\n            'Math5 II',\r\n            'Math6 II',\r\n            'Math7 II',\r\n            'Math8 II',\r\n            'Math9 II',\r\n        ],\r\n        grades: [\r\n            'Nursery',\r\n            'KG',\r\n            'Class 1-5',\r\n            'Class 6-8',\r\n            'Class 9-10',\r\n            'O Levels',\r\n            'Fsc',\r\n        ]\r\n    };\r\n\r\n    const onSubjectSelect = (selectedList, selectedItem) =>{\r\n       // customer.teachingSubjects.push(selectedItem.title) \r\n        customer.teachingSubjects = selectedList;\r\n        console.log('customer.teachingSubjects', customer.teachingSubjects)     \r\n    }\r\n    \r\n   const onSubjectRemove =(selectedList, removedItem)=> {\r\n        \r\n        var index = customer.teachingSubjects.indexOf(removedItem.title);\r\n        if (index !== -1) {\r\n            customer.teachingSubjects.splice(index, 1);\r\n        }\r\n    }\r\n   \r\n    const onGradeSelect = (selectedList, selectedItem) =>{\r\n        //customer.teachingGrades.push(selectedItem.title)\r\n        customer.teachingGrades = selectedList\r\n        console.log('customer.teachingGrades', customer.teachingGrades)         \r\n    }\r\n    \r\n   const onGradeRemove =(selectedList, removedItem)=> {\r\n        \r\n        var index = customer.teachingGrades.indexOf(removedItem.title);\r\n        if (index !== -1) {\r\n            customer.teachingGrades.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    const onSubmit = () => {\r\n     \r\n    let postData = {...customer};\r\n    postData.teachingSubjects = customer.teachingSubjects\r\n    postData.teachingGrades = customer.teachingGrades\r\n\r\n    setIsLoading(true)\r\n    updateCustomerInfo(postData, {customerId: userId})\r\n    .then(result =>{\r\n        setIsLoading(false)\r\n        //console.log(result)\r\n        NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n    })\r\n    .catch(error=>{\r\n        setIsLoading(false)\r\n        console.log(error)\r\n        NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n    })\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n            // get user and set form fields\r\n            setIsLoading(true)\r\n            getCustomerById(userId).then(customer => {\r\n                setIsLoading(false)\r\n                \r\n                setCustomer(customer);\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n            })\r\n    }, []);\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n        {isLoading && <Spinner />}\r\n\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:10, offset:2}}>\r\n                <h2 className=\"section-heading\">Subjects & Grades</h2>\r\n                {/* </Col>\r\n                </Row>\r\n                <Row> */}\r\n                <Form >\r\n                    <Form.Row >\r\n                        <Multiselect \r\n                        options={props.subjects} // Options to display in the dropdown\r\n                        selectedValues={customer.teachingSubjects} // Preselected value to persist in dropdown\r\n                        placeholder=\"subjects\"\r\n                        //displayValue=\"title\" \r\n                        isObject={false}\r\n                        style={{ searchBox: { border: \"none\", \"border-bottom\": \"1px solid blue\", \"border-radius\": \"0px\" } } }\r\n                        onSelect={onSubjectSelect} // Function will trigger on select event\r\n                        onRemove={onSubjectRemove} // Function will trigger on remove event\r\n                        />\r\n                       \r\n                    </Form.Row>\r\n\r\n\r\n                    <Form.Row>\r\n                        \r\n                    {/* <Col md={8}> */}\r\n                        <Multiselect \r\n                        options={props.grades} // Options to display in the dropdown\r\n                        selectedValues={customer.teachingGrades} // Preselected value to persist in dropdown\r\n                        placeholder=\"grades\"\r\n                       // displayValue=\"title\" \r\n                       isObject={false}\r\n                        style={{ searchBox: { border: \"none\", \"border-bottom\": \"1px solid blue\", \"border-radius\": \"0px\" } } }\r\n                        onSelect={onGradeSelect} // Function will trigger on select event\r\n                        onRemove={onGradeRemove} // Function will trigger on remove event\r\n                        />\r\n                        {/* </Col> */}\r\n                        \r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                    <Button as={Col}  className=\"btn-dark\"\r\n                     disabled={isLoading}\r\n                     size=\"sm\"\r\n                     md={{span:8, offset:3}}\r\n                     onClick={handleSubmit(onSubmit)}\r\n                     >\r\n                       Update Expertise\r\n                    </Button>\r\n                    </Form.Row>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSExpertise","import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction DSEducation  (props){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [customer, setCustomer] = useState({});\r\n    //const [education, setEducation] = useState({});\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    \r\n    const onSubmit = (education) => {\r\n       \r\n    //let postData = {...customer, ...data};\r\n   // customer.education && customer.education.length > 0 ?customer.education.push(education)\r\n   customer.education = []\r\n   customer.education[0] = education\r\n   setIsLoading(true)\r\n    updateCustomerInfo(customer, {customerId: userId})\r\n    .then(result =>{\r\n        setIsLoading(false)\r\n       // console.log(result)\r\n        NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n    })\r\n    .catch(error=>{\r\n        setIsLoading(false)\r\n        console.log(error)\r\n        NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n    })\r\n    }\r\n\r\n    useEffect(() => {\r\n            // get user and set form fields\r\n            setIsLoading(true)\r\n            getCustomerById(userId).then(customer => {\r\n                setIsLoading(false)\r\n                let education = customer.education ? customer.education[0]: {}\r\n                const fields = ['institute',\r\n                 'degree',\r\n                 'passingYear',\r\n                ];\r\n                fields.forEach(field => setValue(field, education[field]));\r\n                setCustomer(customer);\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, []);\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n            {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:10, offset:2}}>\r\n                <h2 className=\"section-heading\">Your Last Education Degree</h2>\r\n                <Form >\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} sm={12} controlId=\"institute\">\r\n                        <Form.Label>Institute Name</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        placeholder=\"institute\" \r\n                        name=\"institute\"\r\n                        value={props.institute}\r\n                        ref={register({required: 'institute is required!'})}\r\n                        />\r\n                        </Form.Group>\r\n                        \r\n\r\n                        <Form.Group as={Col} sm={12} controlId=\"degree\">\r\n                        <Form.Label>Degree Title</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        placeholder=\"degree\" \r\n                        name=\"degree\"\r\n                        value={props.degree}\r\n                        ref={register({required:'degree is required'})}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} sm={12} controlId=\"passingYear\">\r\n                        <Form.Label>Passing Year</Form.Label>\r\n                        <Form.Control \r\n                        type=\"number\"\r\n                        placeholder=\"passingYear\"\r\n                        name=\"passingYear\"\r\n                        value={props.passingYear}\r\n                        ref={register({required:'passing year is required'})}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n                    {errors.firstName && <p>{errors.firstName.message}</p> }\r\n                    {errors.lastName && <p>{errors.lastName.message}</p> }\r\n                    {errors.passingYear && <p>{errors.passingYear.message}</p> }\r\n\r\n\r\n                    {/* <Form.Group id=\"formGridCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group> */}\r\n\r\n                    <Form.Row>\r\n                    <Button as={Col}  className=\"btn-dark\"\r\n                     \r\n                     size=\"sm\"\r\n                     md={{span:8, offset:2}}\r\n                     onClick={handleSubmit(onSubmit)}\r\n                     >\r\n                        Update Education\r\n                    </Button>\r\n                    </Form.Row>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSEducation","import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction DSMediums  (props){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [customer, setCustomer] = useState({});\r\n    const [isOfflineTeaching, setIsOfflineTeaching] = useState(false);\r\n    const [teachingCity, setTeachingCity] = useState(false);\r\n    const [teachingArea, setTeachingArea] = useState(false);\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    const onSubmit = (data) => {\r\n     \r\n       let postData = {...customer, ...data};\r\n       setIsLoading(true)\r\n    updateCustomerInfo(postData, {customerId: userId})\r\n    .then(result =>{\r\n        setIsLoading(false)\r\n        console.log(result)\r\n        NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n    })\r\n    .catch(error=>{\r\n        setIsLoading(false)\r\n        console.log(error)\r\n        NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n    })\r\n    }\r\n\r\n    useEffect(() => {\r\n            // get user and set form fields\r\n            setIsLoading(true)\r\n            getCustomerById(userId).then(customer => {\r\n                setIsLoading(false)\r\n                const fields = [\r\n                 'isOnlineTeaching',\r\n                 'isOfflineTeaching',\r\n                 'teachingCity',\r\n                 'teachingArea',\r\n                 \r\n                ];\r\n                fields.forEach(field => setValue(field, customer[field]));\r\n                setCustomer(customer);\r\n                setIsOfflineTeaching(customer.isOfflineTeaching)\r\n                setTeachingCity(customer.teachingCity)\r\n                setTeachingArea(customer.teachingArea)\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, []);\r\n\r\n    \r\n\r\n      return (\r\n        <div className=\"section\">\r\n        {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span:10, offset:2}}>\r\n                <h2 className=\"section-heading\">Teaching Mediums</h2>\r\n                <Form >\r\n                    <Form.Row>\r\n                      <Col md={8}>\r\n                      <Form.Group id=\"isOnlineTeaching\">\r\n                        <Form.Check type=\"checkbox\" \r\n                        label=\"I can teach online\" \r\n                        name=\"isOnlineTeaching\"\r\n                        ref={register()}\r\n\r\n                        />\r\n                         </Form.Group>\r\n                      </Col>\r\n                    \r\n                    <Col md={8}>\r\n                    <Form.Group id=\"isOfflineTeaching\">\r\n                        <Form.Check type=\"checkbox\" \r\n                        label=\"I can teach in person\" \r\n                        name=\"isOfflineTeaching\"\r\n                        value={props.isOfflineTeaching}\r\n                        ref={register()}\r\n                        onChange={()=>{setIsOfflineTeaching(!isOfflineTeaching)}}\r\n                        />\r\n                    </Form.Group>\r\n                    </Col>\r\n                                         \r\n                    </Form.Row>\r\n\r\n                \r\n                    \r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"teachingCity\">\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control \r\n                        // as=\"select\" \r\n                       \r\n                        name=\"teachingCity\"\r\n                        value={props.teachingCity}\r\n                        ref={register()}\r\n                        >\r\n                            {/* <option  />\r\n                            <option value=\"Lahore\" >Lahore</option>\r\n                            <option value=\"Islamabad\">Islamabad</option>\r\n                            <option value=\"Karachi\">Karachi</option> */}\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    \r\n\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"teachingArea\">\r\n                        <Form.Label>Teaching Area</Form.Label>\r\n                        <Form.Control\r\n                       as=\"textarea\"\r\n                        name=\"teachingArea\"\r\n                        value={props.teachingArea}\r\n                        ref={register()}\r\n                        >\r\n                         \r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                    <Button as={Col}  className=\"btn-dark\"\r\n                     disabled={isLoading}\r\n                     size=\"sm\"\r\n                     md={{span:8, offset:2}}\r\n                     onClick={handleSubmit(onSubmit)}\r\n                     >\r\n                        Update Mediums\r\n                    </Button>\r\n                    </Form.Row>\r\n                 </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSMediums","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col,Form, Button, Table } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getStudentRequests } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\nfunction DSNewRequests  (props){\r\n    \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [requests, setrequests] = useState([]);\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    \r\n    useEffect(() => {\r\n            setIsLoading(true)\r\n            getStudentRequests([{ to: userId},{ from: userId}]).then(requests => {\r\n                setIsLoading(false)\r\n                setrequests(requests);\r\n\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, []);\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n        {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row> \r\n                <Col md={{span:10, offset:2}}>\r\n                <h2 className=\"section-heading\">New Requests</h2>\r\n                <Table striped bordered hover  responsive  size=\"md\" >\r\n                    <thead>\r\n                        <tr> \r\n                        {/* <th>From</th> */}\r\n                        {/* <th>To</th> */}\r\n                        <th>Availability From</th>\r\n                        <th>Availability To</th>\r\n                        <th>Lesson Type</th>\r\n                        <th>Subjects</th>\r\n                        {/* <th>Status</th> */}\r\n                        <th>Reply</th>\r\n                        <th>Accept</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {requests.map(((r, index) => <tr key={index}> \r\n                            {/* <td>{r.from}</td> */}\r\n                            {/* <td>{r.to}</td> */}\r\n                            <td>{r.timeFrom}</td>\r\n                            <td>{r.timeTo}</td>\r\n                            <td>{r.lessonType}</td>\r\n                            <td>{r.subjects}</td>\r\n                            {/* <td>{r.status}</td> */}\r\n                            <td><Link to={`/dashboard/chat-box/${r.to === userId ? r.from : r.to  }`} > Chat </Link> </td>\r\n                            {userId !== r.from ? \r\n                        <td>\r\n                        <Link to={`/dashboard/accept-request/${r.id}/from/${r.from}`} >\r\n                             Accept \r\n                        </Link> \r\n                        </td>:\r\n                        null    \r\n                        }\r\n                            \r\n                             </tr>\r\n                             )) }\r\n                        \r\n\r\n                    </tbody>\r\n                </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSNewRequests","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col,Form, Button, Table, InputGroup, FormControl } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getMessages, getConnectedUsers } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\nfunction DSChatBox  (props){\r\n    \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [chatWith, setchatWith] = useState(props.match.params.to ? props.match.params.to : '' );\r\n   const [messagesList, setmessagesList] = useState([]);\r\n   const [message, setmessage] = useState('');\r\n    let userId = localStorage.getItem('userId')\r\n    let userImage = localStorage.getItem('userImage')\r\n   //const socket =  localStorage.getItem('currentSocket')\r\n   //console.log('local storage socket', socket)\r\n   //socket = JSON.parse(socket)\r\n   //console.log('local storage socket', socket)\r\n    // if(props.match && props.match.params){\r\n    //     console.log(props.match.params)\r\n    //     setchatWith(props.match.params.to)\r\n    // }\r\n\r\n    useEffect(() => {\r\n         if(props.match && props.match.params){\r\n           // console.log(props.match.params)\r\n            setchatWith(props.match.params.to)\r\n        }\r\n        if(chatWith){\r\n            let fromQuery = [ {and: [{to:{like : userId} }, {from:{like : chatWith} } ]},\r\n                            { and:[{to:{like : chatWith} }, {from:{like : userId} } ]}\r\n                            ]\r\n\r\n            \r\n            getMessages(fromQuery)\r\n            .then(result=>{\r\n               // console.log(result)\r\n                setmessagesList(result)\r\n              //  console.log(messagesList)\r\n              \r\n                \r\n                //messagesList.concat({to:'1', from: '2', message:'hi'})\r\n            })\r\n            .catch(error=>{\r\n                console.log(error)\r\n            })\r\n        }\r\n       \r\n        getConnectedUsers({id: userId})\r\n        .then(connections => {\r\n\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n        })\r\n\r\n        setTimeout(() => {\r\n            \r\n            window.currentSocket.on('message', (data)=>{\r\n                console.log('received new message..', data)\r\n                console.log('messagesList..', messagesList)\r\n                let newMessages = messagesList.slice()\r\n                newMessages.push(data)\r\n                setmessagesList(newMessages)\r\n            })    \r\n        }, 1000 * 5);\r\n        \r\n        \r\n\r\n    }, []);\r\n\r\n    const changeHandler = (event)=>{\r\n        let {name, value} = event.target;\r\n        setmessage(value)\r\n    }\r\n    const sendMessage = ()=>{\r\n        if(!message) return\r\n\r\n        let data = {\r\n            from:userId,\r\n            to: chatWith,\r\n            message: message,\r\n        }\r\n        let newMessages = []\r\n        if(messagesList && messagesList.length > 0){\r\n            newMessages = messagesList.slice()\r\n        }\r\n        \r\n        newMessages.push(data)\r\n        setmessagesList(newMessages)\r\n        //console.log('messagesList', messagesList)\r\n        window.currentSocket.emit('message', data)\r\n       \r\n        setmessage('')\r\n    }\r\n\r\n   \r\n\r\n\r\n\r\n    return (\r\n        <div className=\"\" >\r\n        {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row > \r\n                <Col md={{span:10, offset:2}} style={{ marginBottom:'25px', marginTop:'5%' }}>\r\n                {/* <h2 className=\"section-heading\"></h2> */}\r\n                <div style={{overflowY: \"auto\", height:'400px'}}>\r\n                {messagesList && messagesList.length > 0?\r\n                messagesList.map((msg, index)=>{\r\n                    \r\n                    if(msg && msg.from == userId){\r\n                       return <p key={index} className=\"message-from\">\r\n                       {msg.message}\r\n                   </p>\r\n                   \r\n\r\n                    }\r\n                    else if(msg){\r\n                        return <p key={index} className=\"message-to\">\r\n                                         {msg.message}\r\n                                     </p>\r\n                 \r\n                    }\r\n                })\r\n                :\r\n                null\r\n                }\r\n                </div>\r\n               \r\n                </Col>\r\n                {/* <Col md={{span:4, offset:0}} className=\"chat-box-right\">\r\n                <h4 className=\"\">Connected Users</h4>\r\n\r\n                    <div style={{display:'flex'}} className=\"chat-users\">\r\n                        <img width=\"59px\" src=\"\" alt=\"user image\" />\r\n                        <span>\r\n                            <p style={{marginBottom:'0'}}><strong>bilal </strong></p>\r\n                            <p>from: karachi</p>\r\n                        </span>\r\n                        <span style={{background:'#cc2d1c', height:'30px', width:'30px',textAlign:'center', borderRadius:'50%', color:'#fff' }}> 1 </span>\r\n                    </div>\r\n                </Col> */}\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n            <Col md={{span:10, offset:2 }} style={{marginBottom:'10%' }}>\r\n\r\n                <Form >\r\n                    <Form.Row className=\"align-items-center\">\r\n                        \r\n                        <Col xs=\"auto\" md={10}>\r\n                        <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\r\n                            Message\r\n                        </Form.Label>\r\n                        <InputGroup className=\"\">\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>@</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl \r\n                             placeholder=\"type your message\" \r\n                             as=\"textarea\"\r\n                             name=\"message\"\r\n                             value={message}\r\n                             onChange={changeHandler}\r\n                             />\r\n                        </InputGroup>\r\n                        </Col>\r\n                       \r\n                        <Col xs=\"auto\" md={2} >\r\n                        <Button onClick={handleSubmit(sendMessage)} className=\"mb-2 \" style={{background:'#e74c3c'}}>\r\n                            Send\r\n                        </Button>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    </Form>\r\n                </Col>\r\n                </Row>\r\n\r\n        </Container>\r\n    </div>\r\n      )\r\n\r\n}\r\n\r\nexport default DSChatBox","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col,Form, Button, Table } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getMyClasses } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction DSClasses (props){\r\n    \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [classes, setclasses] = useState([]);\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    useEffect(() => {\r\n            setIsLoading(true)\r\n            getMyClasses([{instructorId:{like : userId} }, {studentId:{like : userId} }])\r\n            .then(cls => {\r\n                setIsLoading(false)\r\n                setclasses(cls);\r\n\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, [])\r\n\r\n\r\n      return (\r\n        <div className=\"section\">\r\n        {isLoading && <Spinner />}\r\n        <Container>\r\n            <Row> \r\n                <Col md={{span:10, offset:2}}>\r\n                <h2 className=\"section-heading\">My Sessions</h2>\r\n                {classes.length === 0 ? <p>No Classes Yet.</p> : <p>Your Classes</p>}\r\n                <Table striped bordered hover  responsive  size=\"md\" >\r\n                    <thead>\r\n                        <tr> \r\n                        <th>Start Time</th>\r\n                        <th>End Time</th>\r\n                        <th>Lesson Type</th>\r\n                        <th>Fees</th>\r\n                        {/* <th>Lesson Type</th>\r\n                        <th>Subjects</th> */}\r\n                        {/* <th>Status</th> */}\r\n                        <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {classes.map(((r, index) => <tr key={index}> \r\n                            <td>{r.timeFrom}</td>\r\n                            <td>{r.timeTo}</td>\r\n                            <td>{r.lessonType}</td>\r\n                            <td>{r.fees}/{r.feesPer}</td>\r\n                            {/* <td>{r.lessonType}</td>\r\n                            <td>{r.subjects}</td> */}\r\n                            {/* {userId !== r.studentId ?  */}\r\n                            <td><Link target=\"_blank\" to={`/calling-route/${userId === r.studentId ? r.instructorId : r.studentId }`} > Take The Session </Link> </td>\r\n                            {/* : null\r\n                            } */}\r\n                            \r\n                             </tr>\r\n                             )) }\r\n                        \r\n\r\n                    </tbody>\r\n                </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n      )\r\n}\r\n\r\n\r\nexport default DSClasses","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col,Form, Button, Table } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getMyClasses } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nexport default function DSClassesDetails (){\r\n\r\n    \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [classes, setclasses] = useState([]);\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    useEffect(() => {\r\n            setIsLoading(true)\r\n            getMyClasses({instructorId: userId})\r\n            .then(cls => {\r\n                setIsLoading(false)\r\n                setclasses(cls);\r\n\r\n            }).catch(error=>{\r\n                setIsLoading(false)\r\n                console.log(error)\r\n                NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            {isLoading && <Spinner />}\r\n            <Container>\r\n                <Row> \r\n                    <Col md={{span:10, offset:2}}>\r\n                    <h2 className=\"section-heading\">Sessions</h2>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n       </div>\r\n    )  \r\n                \r\n} ","\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup } from 'react-bootstrap';\r\n    \r\nimport Spinner from '../components/common/Spinner';\r\nimport {useForm} from 'react-hook-form';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nimport { getStudentRequestById, createClassRequest } from \"../services\";\r\n\r\n\r\n\r\n\r\nexport default function AcceptStudentRequest (props){\r\n    const { register, handleSubmit, errors, setValue } = useForm(); // initialize the hook\r\n    const [classrequest, setclassrequest] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n\r\n    const onSubbmit = (data)=>{\r\n      \r\n\r\n        data.instructorId = classrequest.to\r\n        data.studentId = classrequest.from\r\n        data.requestId = classrequest.id\r\n        data.fees = parseInt(data.fees)\r\n\r\n        setIsLoading(true)\r\n        createClassRequest(data)\r\n        .then(result => {\r\n            setIsLoading(false)\r\n            if(result.ok && result.ok === false){\r\n                NotificationManager.error(result.statusText, 'Error!', 2000);\r\n                return\r\n            }\r\n            NotificationManager.success(result.message, 'Successful!', 2000);\r\n\r\n        })\r\n        .catch(error => {\r\n            setIsLoading(false)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        getStudentRequestById(props.match.params.requestId)\r\n        .then(request => {\r\n            setIsLoading(false)\r\n            const fields = [\r\n            'lessonType',\r\n            'timeFrom',\r\n            'timeTo',\r\n           ];\r\n           fields.forEach(field => setValue(field, request[field]));\r\n           setclassrequest(request);\r\n\r\n        }).catch(error=>{\r\n            setIsLoading(false)\r\n            console.log(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n            <div style={{ marginBottom:'50px'}} className=\"section\">\r\n            {isLoading && <Spinner />}\r\n\r\n                <Container>\r\n                    <Row>\r\n                    <Col md={{span:8, offset:2}}  id=\"register-signup\">\r\n                    {/* <div> */}\r\n                        <h2>\r\n                            Accepting Student Request\r\n                        </h2>\r\n                        <p>\r\n                           You can teach online as well.\r\n                        </p>\r\n                        {/* <Row> */}\r\n                            {/* <Col md={{span:10, offset:2}}> */}\r\n                        <Form  onSubmit={handleSubmit(onSubbmit)}>\r\n                        \r\n                          <Form.Row>\r\n                              <Col>\r\n                              <Form.Label htmlFor=\"lessonType\" >\r\n                            Lesson Type\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              as=\"select\"\r\n                               value={props.lessonType}\r\n                               name=\"lessonType\" \r\n                               ref={register({\r\n                                   required: 'Select a lesson Type',\r\n                                   \r\n                                }) }\r\n                               \r\n                                >\r\n                                    <option value=\"\" />\r\n                                <option value=\"online\">Online Lesson</option>\r\n                                <option value=\"inperson\">In Person Lesson</option>\r\n                                </FormControl>\r\n                          </InputGroup>\r\n                          {errors.lessonType && <p>{errors.lessonType.message}</p> }\r\n\r\n\r\n                              </Col>\r\n\r\n                              <Col>\r\n                              <Form.Label htmlFor=\"timeFrom\" >\r\n                            Start Time\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              as=\"select\"\r\n                              value={props.timeFrom}\r\n                               name=\"timeFrom\" \r\n                               ref={register({\r\n                                   required: 'Select a time',\r\n                                   \r\n                                }) }\r\n                               \r\n                                >\r\n                                    <option value=\"\" />\r\n                                <option value=\"10:00 AM\">10:00 AM</option>\r\n                                <option value=\"11:00 AM\">11:00 AM</option>\r\n                                <option value=\"12:00 AM\">12:00 AM</option>\r\n                                <option value=\"1:00 PM\">1:00 PM</option>\r\n                                </FormControl>\r\n                          </InputGroup>\r\n                          {errors.timeFrom && <p>{errors.timeFrom.message}</p> }\r\n\r\n                              </Col>\r\n\r\n                              <Col>\r\n                              <Form.Label htmlFor=\"timeTo\" >\r\n                            End Time\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              as=\"select\"\r\n                              value={props.timeTo}\r\n                               name=\"timeTo\" \r\n                               ref={register({\r\n                                   required: 'Select a time',\r\n                                   \r\n                                }) }\r\n                               \r\n                                >\r\n                                    <option value=\"\" />\r\n                                <option value=\"10:00 AM\">10:00 AM</option>\r\n                                <option value=\"11:00 AM\">11:00 AM</option>\r\n                                <option value=\"12:00 AM\">12:00 AM</option>\r\n                                <option value=\"1:00 PM\">1:00 PM</option>\r\n                                </FormControl>\r\n                          </InputGroup>\r\n                          {errors.timeTo && <p>{errors.timeTo.message}</p> }\r\n                          </Col>\r\n                         \r\n                          </Form.Row>\r\n                                                \r\n                          <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"fees\">\r\n                        <Form.Label>Fees</Form.Label>\r\n                        <Form.Control \r\n                        type=\"number\"\r\n                        placeholder=\"fees\"\r\n                        name=\"fees\"\r\n                        value={props.fees}\r\n                        ref={register({required:'Set Your Fees'})}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Per</Form.Label>\r\n                        <Form.Control as=\"select\" \r\n                        defaultValue=\"Month\"\r\n                        name=\"feesPer\"\r\n                        value={props.feesPer}\r\n                        ref={register()}\r\n                        >\r\n                            {/* <option  /> */}\r\n                            <option value=\"month\" >Month</option>\r\n                            <option value=\"week\">Week</option>\r\n                            <option value=\"hour\">Hour</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    {errors.fees && errors.fees.message}\r\n\r\n                         \r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading}\r\n                            className=\"btn-dark\"   \r\n                            type=\"submit\"\r\n                            style={{marginLeft:'25%'}}\r\n                             >\r\n                              \r\n                              Accept Request\r\n                          </Button>\r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n    )\r\n}","import React from \"react\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\n\r\nconst setRatingStars = {\r\n    size: 50,\r\n    count: 5,\r\n    color: \"#BEBEBE\",\r\n    activeColor: \"#e74c3c\",\r\n    value: 0,\r\n    a11y: true,\r\n    char: \"★\",\r\n    isHalf: false,\r\n    emptyIcon: <i className=\"fa fa-star\" />,\r\n    halfIcon: <i className=\"fa fa-star-half-alt\" />,\r\n    filledIcon: <i className=\"fa fa-star\" />,\r\n    // onChange: newValue => {\r\n    //   console.log(`Example 2: new value is ${newValue}`);\r\n      \r\n    // }\r\n  }\r\n\r\nconst profileStars = {\r\n    size: 30,\r\n    count: 5,\r\n    color: \"#BEBEBE\",\r\n    activeColor: \"#e74c3c\",\r\n    value: 0,\r\n    edit: false,\r\n    a11y: true,\r\n    char: \"★\",\r\n    isHalf: true,\r\n    emptyIcon: <i className=\"fa fa-star\" />,\r\n    halfIcon: <i className=\"fa fa-star-half-alt\" />,\r\n    filledIcon: <i className=\"fa fa-star\" />,\r\n    onChange: newValue => {\r\n      console.log(`Example 2: new value is ${newValue}`);\r\n    }\r\n  }\r\n\r\n\r\n  const profileListingStars = {\r\n    size: 20,\r\n    count: 5,\r\n    color: \"#BEBEBE\",\r\n    activeColor: \"#e74c3c\",\r\n    value: 0,\r\n    edit: false,\r\n    a11y: true,\r\n    char: \"★\",\r\n    isHalf: true,\r\n    emptyIcon: <i className=\"fa fa-star\" />,\r\n    halfIcon: <i className=\"fa fa-star-half-alt\" />,\r\n    filledIcon: <i className=\"fa fa-star\" />,\r\n    // onChange: newValue => {\r\n    //   console.log(`Example 2: new value is ${newValue}`);\r\n    // }\r\n  }\r\n\r\n\r\n  export function RatingStars({children}) {\r\n    return (\r\n      <div className=\"\">\r\n        \r\n       {children}\r\n       \r\n      </div>\r\n    );\r\n  }\r\n\r\n  RatingStars.profileView = function ({children, stars}){\r\n      return <ReactStars {...profileStars} value={stars} />\r\n  }\r\n  \r\n\r\n  RatingStars.profileListingStars = function ({children, stars}){\r\n    return <ReactStars {...profileListingStars} value={stars} >\r\n            {children}\r\n            </ReactStars>\r\n}\r\n\r\nRatingStars.rating = function({children, ...restProps}){\r\n    return <div>\r\n        <ReactStars {...setRatingStars} {...restProps}\r\n       \r\n        >\r\n         </ReactStars>\r\n\r\n         </div>\r\n}\r\n\r\nRatingStars.messageBox = function({children, ...restProps}){\r\n    return <span style={{display: 'block'}}>\r\n        {/* <label>Message</label> */}\r\n        <textarea {...restProps}  style={{width:'100%'}}/>\r\n    </span> \r\n    \r\n}\r\n\r\nRatingStars.ratingSubmit = function({children, ...restProps}){\r\n    return <button  {...restProps}\r\n    style={{display: 'block'}}\r\n    > {children}\r\n     </button>\r\n    \r\n}\r\n\r\nconst badReasons = [{title:\"Bad call quality\"}, \r\n{title:\"Bad service quality\"}]\r\nconst goodReasons = [{title:\"Awesom Teacher\"}, \r\n{title:\"Nice Platform\"}]\r\n\r\nRatingStars.feedbackReasons = function ({children, label, stars, ...restProps}){\r\n   let reasons = goodReasons;\r\n   if(stars <= 3){\r\n    reasons = badReasons;\r\n   }\r\n   return < >\r\n    <label>{label}</label>\r\n    <select {...restProps} style={{display: 'block'}}>\r\n        <option value=\"\">Select a reason</option>\r\n        {\r\n            reasons.map(item =>{\r\n                return <option key={item.title} value={item.title}>{item.title} </option>\r\n            })\r\n        }\r\n        </select>\r\n        </>\r\n}","\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col,Form, Button } from 'react-bootstrap';\r\nimport {useForm} from 'react-hook-form';\r\nimport {  getCustomerById, updateCustomerInfo, sendFeedback } from \"../services\"\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { RatingStars } from \"../components\";\r\n\r\n\r\nfunction DSFeedback  (props){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit, setValue, errors, } = useForm();\r\n    const [feedbackMessage, setfeedbackMessage] = useState('');\r\n    const [feedbackstars, setfeedbackstars] = useState(5);\r\n    const [feedbackreason, setfeedbackreason] = useState('');\r\n\r\n    let userId = localStorage.getItem('userId')\r\n    let user = localStorage.getItem('user')\r\n    user = JSON.parse(user)\r\n\r\n\r\n    const submitRating = ()=>{\r\n        console.log('submitRating clicked feedbackMessage', feedbackMessage)\r\n        console.log('submitRating clicked feedbackstars', feedbackstars)\r\n        if(!feedbackMessage || !feedbackreason || feedbackstars === 0){\r\n            return NotificationManager.error('Required More Info.', 'Error!', 2000);\r\n\r\n        }\r\n        \r\n        let data = {\r\n            message:feedbackMessage,\r\n            stars:feedbackstars,\r\n            byId: userId,\r\n            fullname: `${user.firstName}  ${user.lastName}`,\r\n            feedbackreason: feedbackreason,\r\n        }\r\n        sendFeedback(data)\r\n        .then(result=>{\r\n            console.log(result)\r\n            if(result.ok === false){\r\n                NotificationManager.error(result.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n\r\n            NotificationManager.success(result.message || 'Successfully Created!', 'Success!', 2000);\r\n            setfeedbackreason('')\r\n            setfeedbackMessage('')\r\n        })\r\n        .catch(result=>{\r\n            console.log(result)\r\n            NotificationManager.error(result.toString(), 'Error!', 2000);\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            {isLoading && <Spinner />}\r\n            <Container>\r\n                <Row>\r\n                    <Col md={{span:10, offset:2}}>\r\n                    <h2 className=\"section-heading\">Share Your Feed Back</h2>\r\n                \r\n                    <RatingStars >\r\n                              <RatingStars.rating\r\n                                onChange={value=>{setfeedbackstars(value) }}\r\n                               >\r\n                             </RatingStars.rating >\r\n                             \r\n                             {/* {feedbackstars <= 3 ?  */}\r\n                             <RatingStars.feedbackReasons\r\n                                className=\"feedback-select\"\r\n                                label=\"Choose Your Reason\"\r\n                                stars={feedbackstars}\r\n                                onChange={(event)=>setfeedbackreason(event.target.value)}\r\n                             >\r\n                                 \r\n                                 </RatingStars.feedbackReasons>\r\n                                 {/* : null\r\n                             } */}\r\n                              \r\n                              \r\n                              <RatingStars.messageBox \r\n                              placeholder=\"Enter Your Feedback\"\r\n                              value={feedbackMessage}\r\n                              rows={4}\r\n                            //   cols={50}\r\n                             \r\n                              onChange={event => {setfeedbackMessage(event.target.value)}}\r\n                              > \r\n                              </RatingStars.messageBox >\r\n\r\n                              <RatingStars.ratingSubmit\r\n                                className=\"btn-dark\" \r\n                                onClick={submitRating}\r\n                                \r\n                              >{\"Feedback\"}\r\n                                  </RatingStars.ratingSubmit>\r\n\r\n                              </RatingStars>\r\n\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DSFeedback","import React, {useState, useEffect}  from \"react\";\r\n\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default function CallingDemo () {\r\n\r\n    const [imageUrl, setimageUrl] = useState( '/images/calling_demo/01.jpg'); \r\n    const imagesList = [\r\n       \r\n        '/images/calling_demo/02.jpg',\r\n        '/images/calling_demo/03.jpg',\r\n        '/images/calling_demo/04.jpg',\r\n        '/images/calling_demo/01.jpg'\r\n        \r\n    ]\r\n\r\n    useEffect(() => {\r\n        \r\n        var callingDemoImageIndex = 0\r\n      //  setimageUrl(imagesList[callingDemoImageIndex])\r\n        setInterval(() => {\r\n            \r\n            if(callingDemoImageIndex > imagesList.length-1){\r\n                callingDemoImageIndex = 0\r\n            }\r\n            setimageUrl(imagesList[callingDemoImageIndex])\r\n            callingDemoImageIndex = callingDemoImageIndex +1\r\n        }, 1000 * 8);\r\n    }, []);\r\n\r\n\r\n      return (\r\n          <div id=\"calling-demo\"  className=\"section\" >\r\n              <Container >\r\n                  <Row >\r\n                      \r\n                          <h2 className=\"section-heading\">\r\n                          See how online lessons works\r\n                          </h2>\r\n                          <div className=\"calling-demo-content\" >\r\n                          <Col md={8} sm={6}>\r\n                                <span >\r\n                                    <img src={imageUrl} alt=\"video calling demo image\" />\r\n                                </span>\r\n                            </Col>\r\n                            <Col md={4} sm={6}>\r\n                                <span style={{paddingTop:'30px'}}>\r\n                                <p>\r\n                                <i className=\"fa fa-angle-double-right \"></i>  \r\n                                 Meet with the expert of your choice, anywhere in the country, online or in-person\r\n                                </p>\r\n                                <p>\r\n                                <i className=\"fa fa-angle-double-right\"></i>  \r\n                                Save time and easily fit lessons into your schedule\r\n                                </p>\r\n                                <p>\r\n                                <i className=\"fa fa-angle-double-right\"></i>  \r\n                                Collaborate with online features built for any skill or subject\r\n                                </p>\r\n                                <a className=\"btn-link\" href=\"/calling\" target=\"_blank\">See Video Calling</a>\r\n                                </span>\r\n                                </Col>\r\n                          </div>\r\n\r\n                     \r\n                  </Row>\r\n              </Container>\r\n          </div>\r\n      )\r\n    \r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.section`\r\ndisplay: flex;\r\n// border-bottom: 8px solid #222;\r\nmargin-bottom: 25px;\r\n\r\n`;\r\n\r\nexport const Inner = styled.div`\r\ndisplay: flex;\r\n// padding: 70px 45px;\r\nflex-direction: column;\r\n// max-witdth: 815px\r\nwidth: 100%;\r\nmargin: auto;\r\n`;\r\n\r\nexport const Item = styled.div`\r\nmargin-bottom:10px;\r\n&:first-of-type {\r\n    margin-top: 3em;\r\n}\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n\r\n@media (max-width: 600px) {\r\n    font-size: 35px;\r\n}\r\n`;\r\n\r\nexport const Header = styled.div`\r\ndisplay: flex;\r\njustify:content: center;\r\n\r\ncursor: pointer;\r\nmargin-bottom: 1px;\r\n// font-size: 26px;\r\n// font-weight: normal;\r\nbackground: #e74c3c;\r\ncolor: #fff;\r\npadding: 0.8em 1.2em;\r\nuser-select: none;\r\nalign-items: center;\r\n// width: 1020px;\r\nwidth: 100%;\r\n\r\nimg {\r\n    width:25px;\r\n    height:25px;\r\n    font-size: 24px;\r\n    filter: brightness(0) invert(1);\r\n    position: absolute;\r\n    right: 0px;\r\n    left:90%;\r\n    @media (max-width: 600px){\r\n        font-size: 16px;\r\n        width:16px;\r\n        height:16px;\r\n    }\r\n}\r\n@media (max-width: 600px){\r\n    font-size: 16px;\r\n    width: 100%;\r\n}\r\n\r\n\r\n`;\r\n\r\nexport const Body = styled.div`\r\n// font-size: 26px;\r\n// font-weight: normal;\r\n// line-height: normal;\r\npadding: 0.8em 1.2em;\r\nuser-select: none;\r\nalign-items: center;\r\n// width: 1020px;\r\nwidth: 100%;\r\ntext-align:left;\r\n@media (max-width: 600px){\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n    width: 100%;\r\n}\r\n`;","\r\nimport React, {createContext, useContext, useState} from \"react\";\r\nimport { Body, Title, Header, Container, Inner, Item } from './styles/accordion';\r\n\r\nconst ToggleContext = createContext();\r\n\r\nexport default function Accordion ({children, ...restProps}){\r\n  \r\n\r\n    return (\r\n        <Container {...restProps}>\r\n            <Inner>\r\n                {children}\r\n            </Inner>\r\n        </Container>\r\n    )\r\n}\r\n\r\nAccordion.Title = function AccordionTitle({children, ...restProps}){\r\n    return <Title {...restProps}>{children} </Title>\r\n}\r\n\r\nAccordion.Header = function AccordionHeader({children, ...restProps}){\r\n    const {toggleShow, settoggleShow } = useContext(ToggleContext);\r\n    return (\r\n            <Header onClick={()=> settoggleShow(!toggleShow) } {...restProps}>\r\n            {children} \r\n            {toggleShow ? \r\n            <img src=\"images/icons/close.png\" />    \r\n            :\r\n            <img src=\"images/icons/plus.png\" />    \r\n        }\r\n            </Header>\r\n        )\r\n        \r\n}\r\n\r\nAccordion.Body = function AccordionBody({children, ...restProps}){\r\n     const {toggleShow } = useContext(ToggleContext);\r\n    return  toggleShow ? <Body {...restProps}>{children} </Body> : null\r\n}\r\n\r\nAccordion.Item = function AccordionItem({children, ...restProps}){\r\n    const [toggleShow, settoggleShow] = useState(false);\r\n\r\n    return <ToggleContext.Provider value={{toggleShow, settoggleShow}}>\r\n    \r\n            <Item {...restProps}>{children} </Item>\r\n        </ToggleContext.Provider>\r\n}","import styled from \"styled-components\"\r\n\r\n\r\nexport const Inner = styled.div``\r\n\r\nexport const VideoGrid = styled.div`\r\ndisplay: flex;\r\njustify-conten: center;\r\n`\r\n\r\nexport const MyVideo = styled.video`\r\nheight: 200px;\r\nwidth: 300px;\r\nobject-cover: fit;\r\n\r\n`","import React, {useEffect, useState, useRef, useContext, createContext} from \"react\";\r\n\r\nimport { Inner, VideoGrid, MyVideo } from \"./style/room\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\n\r\nexport default function Room ({children, ...restProps}){\r\n\r\n\r\n    return <Container {...restProps}> \r\n    <VideoGrid>  {children}\r\n        </VideoGrid>\r\n      \r\n        </Container>\r\n}\r\n\r\nRoom.MyVideo = function RoomMyVideo({children, ...restProps}){\r\n  \r\n    return <MyVideo id=\"myVideo\" >\r\n            </MyVideo>\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport { Accordion } from \"../components\";\r\nimport faqsList from \"../fixtures/faqs\";\r\nimport Parser  from 'html-react-parser';\r\n\r\nexport function FaqsContainer ({isMoreFaqsShow, showFaqs}){\r\n    const [showTotalFaqs, setshowTotalFaqs] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if(showFaqs){\r\n            setshowTotalFaqs(showFaqs)\r\n        }else{\r\n            setshowTotalFaqs(faqsList.length)\r\n        }\r\n        \r\n    }, []);\r\n    return (\r\n        <div id=\"faqs\" class=\"section\" >\r\n        <Container >\r\n        <Row>\r\n            <Col md={12}>\r\n                <Accordion.Title className=\"section-heading\">\r\n                Frequently Asked Questions [FAQS]\r\n            </Accordion.Title>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n        <Col md={12}>\r\n        <Accordion>\r\n            \r\n            {\r\n               faqsList.map((item, index)=>{\r\n                   if(index < parseInt(showTotalFaqs)){\r\n                    return <Accordion.Item key={index}>\r\n                                <Accordion.Header>\r\n                                    {item.header}\r\n                                </Accordion.Header>\r\n                                <Accordion.Body>\r\n                                    {Parser (item.body)}\r\n                                </Accordion.Body>\r\n                        </Accordion.Item>\r\n                   }\r\n                   \r\n               }) \r\n            }\r\n        </Accordion>\r\n        </Col>\r\n        </Row>\r\n        {isMoreFaqsShow &&\r\n        \r\n        <Row>\r\n            <Col md={12}>\r\n                <Button onClick={()=> window.location.href = '/faqs' } variant=\"btn\" size=\"lg\"  >More Faqs</Button>\r\n            </Col>\r\n        </Row>\r\n        }\r\n        </Container>\r\n        </div>\r\n    )\r\n}","\r\nexport const Routes = {\r\n    createClass: '/class-room/create',\r\n    joinClass: '/class-room/join',\r\n    listClasses: '/class-room/list',\r\n    detailClass: '/class-room/details/:classRoomId',\r\n}","import styled from 'styled-components';\r\n\r\nexport const Inner = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\n`;\r\nexport const Title = styled.h2`\r\nfont-weight: 700;\r\nfont-size: 28px;\r\ntext-align: center;\r\n\r\n@media(max-width: 600px){\r\n    font-size: 18px;\r\n}\r\n\r\n`;\r\nexport const Label = styled.label`\r\nfont-size: 16px;\r\nmargin-bottom:1px;\r\nmargin-top: 10px;\r\n\r\n@media(max-width: 600px){\r\n    font-size: 12px;\r\n}\r\n`;\r\n\r\nexport const Name = styled.input`\r\nfont-size: 36px;\r\nborder: 0px;\r\nborder-bottom: thick solid #bdc3c7;\r\nmargin-bottom: 10px;\r\noutline: none;\r\nfont-size: 28px;\r\nfont-height: 20px;\r\n\r\n&:focus {\r\n    border: 0px;\r\n    border-bottom: thick solid #e74c3c;\r\n}\r\n\r\n@media(max-width: 600px){\r\n    font-size: 24px;\r\n}\r\n\r\n\r\n`;\r\n\r\nexport const Button = styled.button`\r\n font-weight: 700;\r\nfont-size: 28px;\r\nmax-width: 300px;\r\nalign-self: center;\r\nmargin: 10px;\r\nbackground: #e74c3c;\r\ncolor: #fff;\r\nborder-radius: 15%;\r\nletter-spacing: 2px;\r\ntransition: .2s all ease-in-out;\r\noutline: none;\r\npadding: 5px 25px;\r\n\r\n\r\n  &:hover {\r\n    background: rgba(0,0,0,1);\r\n    color: #fff;\r\n  }\r\n    \r\n\r\n@media (max-width: 600px){\r\n    font-size: 24px;\r\n}\r\n`;","\r\n\r\nimport {Inner, Title, Name, Label, Button } from \"./styles/createclass\";\r\n\r\nexport default function CreateClass ({children, ...restProps}){\r\n    return (\r\n        <Inner {...restProps} >\r\n                {children}\r\n            </Inner>\r\n    )\r\n}\r\n\r\nCreateClass.Title = function CreateClassTitle({children, ...restProps}){\r\n    return <Title {...restProps} >{children}</Title>\r\n}\r\n\r\nCreateClass.Label = function CreateClassLabel({children, ...restProps}){\r\n    return <Label {...restProps} >{children}</Label>\r\n}\r\n\r\nCreateClass.Name = function CreateClassName ({children, ...restProps}){\r\n    return <Name {...restProps} >{children}</Name>\r\n}\r\n\r\nCreateClass.Button = function CreateClassButton ({children, ...restProps}){\r\n    return <Button {...restProps} >{children}</Button>\r\n}\r\n","\r\nimport styled from 'styled-components';\r\n\r\nexport const Inner = styled.div`\r\nposition:fixed;\r\n\twidth:60px;\r\n\theight:60px;\r\n\tbottom:40px;\r\n\tright:40px;\r\n\tbackground-color:#e74c3c;\r\n    color:#FFF;\r\n\tborder-radius:50px;\r\n\ttext-align:center;\r\n\tbox-shadow: 2px 2px 3px #999;\r\n`\r\nexport const Text = styled.p``;\r\nexport const Icon = styled.i``;\r\nexport const Item = styled.i``;\r\nexport const ActionMenu = styled.div`\r\nvisibility: hidden;\r\n            transform: translateY(65px);\r\n            opacity: 0;\r\n            max-height: 0;\r\n            overflow: hidden;\r\n\r\n            transition: all 300ms linear;\r\n`;","\r\nimport React, {  } from \"react\";\r\nimport { Inner, Text, Icon, Item, ActionMenu } from \"./styles/floatingbutton\";\r\nimport { Container, Button, Link } from 'react-floating-action-button'\r\nimport { Routes } from \"../../constants/routes\";\r\n\r\nexport default function FloatingButton ({children, ...restProps}){\r\n    return (\r\n        <Container {...restProps}> {children} </Container>\r\n    )\r\n}\r\n\r\nFloatingButton.Link = function FloatingButtonLink({ children, ...restProps}){\r\n    return <Link {...restProps} >{children}</Link>\r\n}\r\n\r\nFloatingButton.Button = function FloatingButtonButton({ children, ...restProps}){\r\n    return <Button {...restProps} >{children}</Button>\r\n}","import { Container, Row, Col, Modal, Button, Toast } from 'react-bootstrap';\r\n\r\n\r\nexport default function MultipleChoiceOptions( { children, title,  ...props}) {\r\n    \r\n  \r\n    return (\r\n      <Row>\r\n        <Col xs={12} md={12}>\r\n          <Toast {...props} >\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">{title}</strong>\r\n              {/* <small></small> */}\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n                {children}\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        {/* <Col xs={6}>\r\n          <Button onClick={() => setShow(true)}>Show Toast</Button>\r\n        </Col> */}\r\n      </Row>\r\n    );\r\n  }","\r\nimport { CreateClass } from \"../components\";\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\nexport default function CreatingClass ({...restProps}) {\r\n    return <Container {...restProps}>\r\n        <Row>\r\n            <Col md={12}>\r\n                <CreateClass>\r\n                    \r\n                    <CreateClass.Title> Create New Class\r\n                    </CreateClass.Title>\r\n                    <CreateClass.Label>Class Name <em>(required)</em>\r\n                    </CreateClass.Label>\r\n                    <CreateClass.Name\r\n                    placeholder=\"\"\r\n                    >\r\n                    </CreateClass.Name>\r\n\r\n                    <CreateClass.Label>Subject\r\n                    </CreateClass.Label>\r\n                    <CreateClass.Name\r\n                    placeholder=\"\"\r\n                    >\r\n                    </CreateClass.Name>\r\n\r\n\r\n                    <CreateClass.Button>Create\r\n                    </CreateClass.Button>\r\n\r\n                </CreateClass>\r\n            </Col>\r\n            </Row>\r\n        </Container>\r\n} ","import CreatingClass from \"../containers/createclass\";\r\n\r\n\r\nexport default function CreateClassRoom({...restProps}){\r\n    return (\r\n        <CreatingClass {...restProps}  > \r\n        \r\n        </CreatingClass>\r\n    )\r\n}","\r\nimport React, {  } from \"react\";\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport {Link } from \"react-router-dom\";\r\nimport { Routes } from \"../constants/routes\";\r\n\r\nexport default function ListCalsses (){\r\n\r\n    return <Container>\r\n        <Row>\r\n            <Col md={4} className=\"details-class-section\">\r\n                \r\n                    <Link className=\"details-class\" to={`/class-room/details/classroom01`}>\r\n                        Mathematics 11\r\n                    </Link>\r\n                \r\n            </Col>\r\n            <Col md={4} className=\"details-class-section\">\r\n                    <Link className=\"details-class\" to={`/class-room/details/classroom01`}>\r\n                        Mathematics 11\r\n                    </Link>\r\n                \r\n            </Col>\r\n            <Col md={4} className=\"details-class-section\">\r\n                    <Link className=\"details-class\" to={`/class-room/details/classroom01`}>\r\n                        Mathematics 11\r\n                    </Link>\r\n                \r\n            </Col>\r\n            <Col md={4} className=\"details-class-section\">\r\n                    <Link className=\"details-class\" to={`/class-room/details/classroom01`}>\r\n                        Mathematics 11\r\n                    </Link>\r\n                \r\n            </Col>\r\n        </Row>\r\n        </Container>\r\n}","import ListCalsses from \"../containers/listclasses\";\r\n\r\nexport default function ListCalssesPage({...restProps}){\r\n    return (\r\n        <ListCalsses {...restProps}  > \r\n        \r\n        </ListCalsses>\r\n    )\r\n}","\r\nimport { Container, Row, Col, Modal, Button, Form } from 'react-bootstrap';\r\n\r\nimport {useForm} from 'react-hook-form';\r\n\r\n\r\n\r\nexport default function CreateAssignment(props) {\r\n\r\n  const { register, handleSubmit, setValue, errors, } = useForm();\r\n\r\n \r\n\r\n    return (\r\n      <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Assignment\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"show-grid\">\r\n          <Container>\r\n            <Row>\r\n              <Col xs={12} md={8}>\r\n              <Form>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} md={12} controlId=\"title\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        name=\"title\"\r\n                        value={props.title}\r\n                        ref={register({required: 'title is required!'})}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} md={12} controlId=\"exampleForm.instruction\">\r\n                          <Form.Label>Instructions</Form.Label>\r\n                          <Form.Control as=\"textarea\" rows={3} \r\n                          \r\n                          name=\"instructions\"\r\n                          value={props.instructions}\r\n                          ref={register({required: 'instructions is required!'})}\r\n                          />\r\n                        </Form.Group>\r\n                     \r\n                    </Form.Row>\r\n                  </Form>\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n              <Form>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} md={12} controlId=\"scores\">\r\n                        <Form.Label>Scores</Form.Label>\r\n                        <Form.Control type=\"number\" \r\n                        name=\"scores\"\r\n                        value={props.scores}\r\n                        ref={register({required: 'scores is required!'})}\r\n                        />\r\n                        </Form.Group>\r\n                      </Form.Row>\r\n                  </Form>\r\n              </Col>\r\n            </Row>\r\n  \r\n            {/* <Row>\r\n              <Col xs={6} md={4}>\r\n                .col-xs-6 .col-md-4\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                .col-xs-6 .col-md-4\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                .col-xs-6 .col-md-4\r\n              </Col>\r\n            </Row> */}\r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {/* <Button size=\"sm\" className=\"btn-dark\" onClick={props.onHide}>Close</Button> */}\r\n          <Button size=\"sm\" className=\"btn-dark\" onClick={handleSubmit(props.create)}>Create Assignment</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n  ","\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\n\r\nimport { Container, Row, Col, Modal, Button, Form } from 'react-bootstrap';\r\n\r\nimport {useForm} from 'react-hook-form';\r\nimport {  MultipleChoiceOptions} from \"../components\";\r\n\r\n\r\nexport default function CreateQuize(props) {\r\n  const [show, setShow] = useState(false);\r\n  const { register, handleSubmit, setValue, errors, } = useForm();\r\n  const [multipleChoices, setmultipleChoices] = useState([]);\r\n  const [isMultipleChoiceAnser, setisMultipleChoiceAnser] = useState(false);\r\n\r\n\r\n  const addMultipleChoices = ()=>{\r\n\r\n    let newMultipleChoices = []\r\n\r\n    if(multipleChoices.length > 0){\r\n\r\n      newMultipleChoices = multipleChoices.slice()\r\n      newMultipleChoices.push(newMultipleChoices.length + 1)\r\n      setmultipleChoices(newMultipleChoices)\r\n\r\n    }else{\r\n      newMultipleChoices.push(newMultipleChoices.length + 1)\r\n      setmultipleChoices(newMultipleChoices)\r\n    }\r\n      \r\n      console.log(multipleChoices)\r\n  }\r\n\r\n  const removeMultipleChoices = (index)=>{\r\n    console.log('remove index: ', index)\r\n    let newMultipleChoices = multipleChoices.slice()\r\n    newMultipleChoices.splice(index, 1)\r\n    setmultipleChoices(newMultipleChoices)\r\n  }\r\n\r\n  const handleAnswers = (event) =>{\r\n    console.log(event.target.value)\r\n  }\r\n\r\n  const setAnswerType = (event)=>{\r\n    const {value, name} = event.target\r\n    \r\n    if(value === 'Multiple Choices'){\r\n      setisMultipleChoiceAnser(true)\r\n      \r\n    }else{\r\n      setisMultipleChoiceAnser(false)\r\n      setmultipleChoices([])\r\n    }\r\n\r\n  }\r\n\r\n  // const closeModel = ()=>{\r\n    \r\n  //   setisMultipleChoiceAnser(false)\r\n  //   setmultipleChoices([])\r\n  // }\r\n\r\n  useEffect(() => {\r\n    \r\n    setisMultipleChoiceAnser(false)\r\n    setmultipleChoices([])\r\n    return {\r\n\r\n    }\r\n\r\n  }, []);\r\n \r\n\r\n    return (\r\n      <Modal {...props} size=\"lg\" \r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Quize\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"show-grid\">\r\n          <Container>\r\n            <Row>\r\n              <Col xs={12} md={8}>\r\n              <Form>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} md={12} controlId=\"title\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        name=\"title\"\r\n                        value={props.title}\r\n                        ref={register({required: 'title is required!'})}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} md={12} controlId=\"exampleForm.instruction\">\r\n                          <Form.Label>Instructions</Form.Label>\r\n                          <Form.Control as=\"textarea\" rows={3} \r\n                          \r\n                          name=\"instructions\"\r\n                          value={props.instructions}\r\n                          ref={register({required: 'instructions is required!'})}\r\n                          />\r\n                        </Form.Group>\r\n\r\n                     \r\n                     \r\n                    </Form.Row>\r\n\r\n                      {multipleChoices && multipleChoices.length > 0 ?\r\n                       multipleChoices.map((item, index) => {\r\n                         return <MultipleChoiceOptions className=\"multiple-choice-toast\"\r\n                                    show={true}\r\n                                    title={`Answer ${index+1}`}\r\n                                    onClose={() => removeMultipleChoices(index)}\r\n                                    \r\n                                    >\r\n                                      <Form.Group as={Col} md={12} >\r\n                                      <Form.Control type=\"text\" \r\n                                      onChange={handleAnswers}\r\n                                      \r\n                                      />\r\n                                      </Form.Group>\r\n                            </MultipleChoiceOptions>\r\n                       })\r\n                       : null\r\n                      }\r\n\r\n                    \r\n\r\n                  </Form>\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n              <Form>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} md={12} controlId=\"scores\">\r\n                        <Form.Label>Scores</Form.Label>\r\n                        <Form.Control type=\"number\" \r\n                        name=\"scores\"\r\n                        value={props.scores}\r\n                        ref={register({required: 'scores is required!'})}\r\n                        />\r\n                        </Form.Group>\r\n                      </Form.Row>\r\n                      \r\n                      <Form.Row>\r\n                        <Form.Group as={Col} >\r\n                          <Form.Label>Answer Types</Form.Label>\r\n                          <Form.Control as=\"select\" \r\n                          name=\"answerType\"\r\n                          value={props.answerType}\r\n                          onChange={setAnswerType}\r\n                          \r\n                          >\r\n                            \r\n                              <option>Short Answer</option>\r\n                              <option>Multiple Choices</option>\r\n\r\n                          </Form.Control>\r\n                          </Form.Group>\r\n\r\n                      </Form.Row>\r\n                      {isMultipleChoiceAnser &&\r\n                      \r\n                          <Col xs={12}>\r\n                          <Button \r\n\r\n                          className=\"btn-dark btn-add-choice\" \r\n                          size=\"sm\" \r\n                          onClick={addMultipleChoices}\r\n                          title=\"add multiple choices\"\r\n                          >\r\n                            Add\r\n                          </Button>\r\n                        </Col>\r\n                      }\r\n                  </Form>\r\n              </Col>\r\n            </Row>\r\n  \r\n            {/* <Row>\r\n              <Col xs={6} md={4}>\r\n                .col-xs-6 .col-md-4\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                .col-xs-6 .col-md-4\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                .col-xs-6 .col-md-4\r\n              </Col>\r\n            </Row> */}\r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {/* <Button className=\"btn-dark\" size=\"sm\" onClick={props.onHide}>Close</Button> */}\r\n          <Button className=\"btn-dark\" size=\"sm\" onClick={handleSubmit(props.create)}>Create Quize</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n  ","\r\nimport { Container, Row, Col, Modal, Button, Form } from 'react-bootstrap';\r\n\r\nimport {useForm} from 'react-hook-form';\r\n\r\n\r\n\r\nexport default function CreateTopic(props) {\r\n\r\n  const { register, handleSubmit, setValue, errors, } = useForm();\r\n\r\n \r\n\r\n    return (\r\n      <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Topic\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"show-grid\">\r\n          <Container>\r\n            <Row>\r\n              <Col xs={12} md={8}>\r\n              <Form>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} md={12} controlId=\"title\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        name=\"title\"\r\n                        value={props.title}\r\n                        ref={register({required: 'title is required!'})}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        {/* <Form.Group as={Col} md={12} controlId=\"exampleForm.instruction\">\r\n                          <Form.Label>Instructions</Form.Label>\r\n                          <Form.Control as=\"textarea\" rows={3} \r\n                          \r\n                          name=\"instructions\"\r\n                          value={props.instructions}\r\n                          ref={register({required: 'instructions is required!'})}\r\n                          />\r\n                        </Form.Group> */}\r\n                     \r\n                    </Form.Row>\r\n                  </Form>\r\n              </Col>\r\n             \r\n            </Row>\r\n  \r\n           \r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {/* <Button size=\"sm\" className=\"btn-dark\" onClick={props.onHide}>Close</Button> */}\r\n          <Button  size=\"sm\" className=\"btn-dark\" onClick={handleSubmit(props.create)}>Create Topic</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n  ","\r\nimport React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, Tabs, Tab, ButtonGroup, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport {Link } from \"react-router-dom\";\r\nimport { Routes } from \"../constants/routes\";\r\nimport CreateAssignment from \"./assignement\";\r\nimport CreateQuize from \"./quize\";\r\nimport CreateTopic from \"./topic\";\r\n\r\nexport default function DetailsCalss (props){\r\n    const [assignementModalShow, setAssignementModalShow] = useState(false);\r\n    const [quizeModalShow, setQuizeModalShow] = useState(false);\r\n    const [topicModalShow, setTopicModalShow] = useState(false);\r\n\r\n    const createAssignment = (data)=>{\r\n        console.log(data)\r\n        \r\n    }\r\n    const createQuize = (data)=>{\r\n        console.log(data)\r\n        \r\n    }\r\n    \r\n    const createTopic = (data)=>{\r\n        console.log(data)\r\n        \r\n    }\r\n\r\n    return <Container>\r\n        <CreateAssignment\r\n        show={assignementModalShow} \r\n        onHide={() => setAssignementModalShow(false)}\r\n        create={createAssignment}\r\n        >\r\n        </CreateAssignment>\r\n\r\n        <CreateQuize\r\n        show={quizeModalShow} \r\n        onHide={() => setQuizeModalShow(false)}\r\n        create={createQuize}\r\n        >\r\n        </CreateQuize>\r\n       \r\n        <CreateTopic\r\n        show={topicModalShow} \r\n        onHide={() => setTopicModalShow(false)}\r\n        create={createTopic}\r\n        >\r\n        </CreateTopic>\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Tabs defaultActiveKey=\"classwork\" >\r\n                        <Tab eventKey=\"classwork\" title=\"Class Work\" className=\"class-work\">\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <ButtonGroup vertical id=\"classwork-create-button\" >\r\n                                    <DropdownButton as={ButtonGroup} title=\"Create Class Work\"  >\r\n                                        <Dropdown.Item eventKey=\"1\" onClick={() => setTopicModalShow(true)} >Topic</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"2\"  >Material</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"3\" onClick={() => setAssignementModalShow(true)} >Assignment</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"4\" onClick={() => setQuizeModalShow(true)}>Quize</Dropdown.Item>\r\n                                    \r\n                                        \r\n                                    </DropdownButton>\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                            </Row>\r\n                            \r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    hello class\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Tab>\r\n                        <Tab eventKey=\"peopel\" title=\"People\">\r\n                           \r\n                        </Tab>\r\n                        <Tab eventKey=\"exams\" title=\"Exams\" >\r\n                           \r\n                        </Tab>\r\n                    </Tabs>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n}","import DetailsCalss from \"../containers/detailsclass\";\r\n\r\nexport default function DetailsCalssPage({...restProps}){\r\n    return (\r\n        <DetailsCalss {...restProps}  > \r\n        \r\n        </DetailsCalss>\r\n    )\r\n}","import React, {  } from \"react\";\r\nimport FloatingButton from \"../components/floatingbutton\";\r\nimport { Routes } from \"../../constants/routes\";\r\n\r\n\r\n\r\nexport default function ClassRoomPage (){\r\n    return <>\r\n    hello class room\r\n    <FloatingButton className=\"create-class-button\">\r\n        <FloatingButton.Link \r\n        href={Routes.createClass}\r\n        tooltip=\"Create Class\"\r\n        icon=\"fa fa-sticky-note\"\r\n        >\r\n        </FloatingButton.Link>\r\n\r\n        <FloatingButton.Link \r\n        href={Routes.joinClass}\r\n        tooltip=\"Join Class\"\r\n        icon=\"fa fa-user-plus\"\r\n        >\r\n        </FloatingButton.Link>\r\n\r\n        <FloatingButton.Button\r\n        tooltip=\"Class Room Action!\"\r\n        icon=\"fa fa-plus\"\r\n        rotate={true}\r\n        > \r\n        </FloatingButton.Button> \r\n    </FloatingButton>\r\n    </>\r\n}","import React, {  } from \"react\";\r\nimport './index.css';\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  \r\n} from \"react-router-dom\";\r\n\r\nimport { Routes } from \"./constants/routes\";\r\nimport CreateClassRoom from \"./pages/createclass\";\r\nimport ListCalssesPage from \"./pages/listclasses\";\r\nimport DetailsCalssPage from \"./pages/detailsclass\";\r\nimport ClassRoomPage from \"./pages/classroom\";\r\n\r\n\r\n\r\nfunction ClassRoom ({...restProps}) {\r\n  \r\n        return (\r\n    \r\n          <div {...restProps}>\r\n         \r\n\r\n              <Router >\r\n                <Switch>\r\n                    <Route  exact path=\"/class-room\">                 \r\n                                  <ClassRoomPage />           \r\n                    </Route>\r\n\r\n                    <Route  path={Routes.createClass}>                 \r\n                            <CreateClassRoom />                  \r\n                    </Route>\r\n                   \r\n                    <Route  path={Routes.listClasses}>                 \r\n                            <ListCalssesPage />                  \r\n                    </Route>\r\n                    \r\n                    <Route  path={Routes.detailClass}>                 \r\n                            <DetailsCalssPage />                  \r\n                    </Route>\r\n\r\n\r\n                </Switch>\r\n            </Router>\r\n\r\n\r\n          </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default ClassRoom;","\r\nimport React from \"react\";\r\n\r\nimport {  Banner, Services,\r\n   Testimonials,StartTutoringBanner, CallingDemo,\r\n   HaveQuestion} from \"./../components\";\r\n\r\n   import { FaqsContainer } from \"../containers/faqs.js\";\r\n\r\n   import ClassRoom from \"../classroom\";\r\n\r\nclass Home extends React.Component {\r\n \r\n  render(){\r\n    return (\r\n\r\n      <div>\r\n       \r\n        <Banner />\r\n        <Services />\r\n        <CallingDemo />\r\n        <Testimonials />\r\n        <StartTutoringBanner />\r\n        <HaveQuestion />\r\n        <FaqsContainer isMoreFaqsShow=\"true\" showFaqs=\"5\" />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport {  TutorsFilter} from \"./../components\";\r\n\r\n\r\nexport default class Tutors extends React.Component {\r\n \r\n  render(){\r\n    return (\r\n        <div className=\"new-page section\">\r\n            <h2 className=\"section-heading\">Find Your Tutors</h2>\r\n            <TutorsFilter />\r\n           \r\n        </div>\r\n    )\r\n  }\r\n}","\r\nimport React, {useState} from \"react\";\r\nimport {\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup } from 'react-bootstrap';\r\n    \r\n    import Spinner from '../../components/common/Spinner';\r\nimport {useForm} from 'react-hook-form';\r\nimport { MessageBox, signUp } from \"../../services\"\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction RegisterView (props){\r\n    const { register, handleSubmit, errors, watch } = useForm(); // initialize the hook\r\n    const password = {}\r\n    password.current = watch(\"password\", \"\");\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n    const onSubmit = (data) => {\r\n        data.origion = window.location.origin\r\n        setIsLoading(true)\r\n        signUp(data)\r\n        .then((responseJson) => {\r\n            setIsLoading(false)\r\n            // Do something with the response\r\n            console.log('responseJson', responseJson)\r\n            if(responseJson.ok === false){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.status || 'Error')\r\n                // setModalMessage(`${responseJson.statusText}`)\r\n                \r\n                // setModalShow(true)\r\n                NotificationManager.error(responseJson.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n            if(responseJson.resultCode && responseJson.resultCode != 2001){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.error.code || 'Error')\r\n                // setModalMessage(`${responseJson.error.message}`)\r\n                // setModalShow(true)\r\n\r\n                NotificationManager.error(responseJson.message, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n          //  window.location.href ='/dashboard';\r\n          setisSuccessModal(true)\r\n          setModalHeading('Thanks')\r\n          setModalMessage(`Thanks for Signup. please verify you Email: ${data.email}`)          \r\n          setModalShow(true)\r\n\r\n          })\r\n          .catch((error) => {\r\n            setIsLoading(false)\r\n            console.trace(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n          });\r\n    };\r\n\r\n   \r\n    return (\r\n\r\n        <div id=\"register\" className=\"section\">\r\n             \r\n            {isLoading && <Spinner />}\r\n             <MessageBox\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n            />\r\n\r\n        <Container>\r\n            <Row>\r\n                <Col md={5} id=\"register-left-side\">\r\n                    <h1>\r\n                        Welcome To Foster!\r\n                    </h1>\r\n                    <p>\r\n                        Meet with your tutor. We provide best online tutoring service.\r\n                    </p>\r\n                    <Link className=\"btn-link\" to=\"/login\" size=\"lg\">Login</Link>{' '}\r\n                </Col>\r\n\r\n                <Col md={7}  id=\"register-signup\">\r\n                    <div>\r\n                        <h2>\r\n                            Foster\r\n                        </h2>\r\n                        <p>\r\n                            Sign up with your email.\r\n                        </p>\r\n                        <Row>\r\n                            <Col md={{span:10, offset:2}}>\r\n                        <Form  onSubmit={handleSubmit(onSubmit)}>\r\n                        \r\n                        <Form.Label htmlFor=\"confirmPassword\" srOnly>\r\n                            User Type\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" \r\n                                as=\"select\"\r\n                                className=\"mr-sm-2\"\r\n                                id=\"userType\"\r\n                                name=\"userType\"\r\n                                custom\r\n                                placeholder=\"user tyoe\" \r\n                               value={props.userType}\r\n                                ref={register({\r\n                                    required: \"Select User Type\"\r\n                                  })}\r\n                                 title=\"userType is required\"\r\n                                >\r\n                                <option value=\"\" />\r\n                                <option value=\"tutor\">Tutor</option>\r\n                                <option value=\"student\">Student</option>\r\n                                <option value=\"parents\">Parents</option>\r\n                            </FormControl>\r\n                          </InputGroup>\r\n                          {errors.userType && <p>{errors.userType.message}</p> }\r\n\r\n                        <Form.Label htmlFor=\"firstName\" srOnly>\r\n                              First Name \r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" id=\"firstName\"\r\n                               name=\"firstName\" \r\n                               value={props.firstName} \r\n                               placeholder=\"first name\" \r\n                               ref={register({required: 'first name is required'}) } \r\n                               title=\"first name is required\" \r\n                               />\r\n                              \r\n                          </InputGroup>\r\n                          {errors.firstName && <p>{errors.firstName.message}</p> }\r\n\r\n                          <Form.Label htmlFor=\"lastName\" srOnly>\r\n                              Last Name\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" id=\"lastName\" \r\n                              name=\"lastName\" \r\n                              value={props.lastName} \r\n                              placeholder=\"last name\" \r\n                              ref={register({required: 'Required Last Name'}) } \r\n                              title=\"last name is required\"\r\n                               />\r\n                          </InputGroup>\r\n                          {errors.lastName && <p>{errors.lastName.message}</p> }\r\n\r\n                          <Form.Label htmlFor=\"email\" srOnly>\r\n                              Email\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" type=\"email\"\r\n                               value={props.emailAddress} \r\n                               id=\"email\" \r\n                               name=\"email\" \r\n                               placeholder=\"Email\" \r\n                               ref={register({\r\n                                   required: 'required a valid email',\r\n                                   \r\n                                }) }\r\n                                title=\"email is required\" />\r\n                          </InputGroup>\r\n                          {errors.email && <p>{errors.email.message}</p> }\r\n\r\n                          <Form.Label htmlFor=\"userPassword\" srOnly>\r\n                              Password\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\"\r\n                               type=\"password\"\r\n                               id=\"userPassword\" \r\n                               name=\"userPassword\" \r\n                              value={props.userPassword} \r\n                              placeholder=\"Password\" \r\n                              ref={register({\r\n                                required: \"You must specify a password\",\r\n                                minLength: {\r\n                                  value: 4,\r\n                                  message: \"Password must have at least 4 characters\"\r\n                                }\r\n                              })}\r\n                               title=\"password is required\" \r\n                               />\r\n                          </InputGroup>\r\n                          {errors.userPassword && <p>{errors.userPassword.message}</p>}\r\n                          \r\n\r\n                          {/* <Form.Label htmlFor=\"confirmPassword\" srOnly>\r\n                              Confirm Password\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" type=\"password\" \r\n                              id=\"confirmPassword\" \r\n                              name=\"confirmPassword\" \r\n                              placeholder=\"Confirm Password\" \r\n                              ref={register({\r\n                                validate: value =>\r\n                                \r\n                                  value === password.password || \"The passwords do not match\"\r\n                              })}\r\n                               />\r\n                               {errors.password_repeat && <p>{errors.password_repeat.message}</p>}\r\n                          </InputGroup> */}\r\n                        \r\n\r\n\r\n\r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading}\r\n                            className=\"btn-dark\"   \r\n                            type=\"submit\"\r\n                             >\r\n                              \r\n                              Sign Up\r\n                          </Button>\r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                        </Row>\r\n                            \r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default RegisterView","\r\nimport React, { useState} from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup, } from 'react-bootstrap';\r\n    \r\nimport {useForm} from 'react-hook-form';\r\nimport { MessageBox, login } from \"../../services\"\r\nimport Spinner from '../../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction LoginView (props){\r\n    const { register, handleSubmit, errors, watch } = useForm();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n    const onSubmit = (data) => {\r\n        setIsLoading(true)\r\n        login(data)\r\n        .then((responseJson) => {\r\n            setIsLoading(false)\r\n            // Do something with the response\r\n            console.log('responseJson', responseJson)\r\n            if(responseJson.ok === false){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.status || 'Error')\r\n                // setModalMessage(`${responseJson.statusText}`)\r\n                \r\n                // setModalShow(true)\r\n                NotificationManager.error(responseJson.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n            if(responseJson.resultCode && responseJson.resultCode != 2001){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.code || 'Error')\r\n                // setModalMessage(`${responseJson.message}`)\r\n                // setModalShow(true)\r\n                NotificationManager.error(responseJson.message, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n          \r\n            localStorage.setItem('userId', responseJson.id);\r\n            localStorage.setItem('access_token', responseJson.access_token);\r\n            localStorage.setItem('userType', responseJson.userType);\r\n            localStorage.setItem('user', JSON.stringify(responseJson));\r\n            localStorage.setItem('userImage', responseJson.imageUrl)\r\n            window.location.href ='/dashboard/about';\r\n          // window.location.href = '/'\r\n        \r\n\r\n          })\r\n          .catch((error) => {\r\n            setIsLoading(false)\r\n            console.trace(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n          });\r\n    };\r\n\r\n\r\n    return (\r\n        <div id=\"register\" className=\"section\">\r\n             {isLoading && <Spinner />}\r\n               <MessageBox\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n            />\r\n        <Container>\r\n            <Row>\r\n                <Col md={5} id=\"register-left-side\">\r\n                    <h1>\r\n                        Welcome To Foster!\r\n                    </h1>\r\n                    <p>\r\n                        Meet with your tutor. We provide best online tutoring service.\r\n                    </p>\r\n                    <Link className=\"btn-link\" to=\"/register\" size=\"lg\">Register</Link>{' '}\r\n                </Col>\r\n\r\n                <Col md={7}  id=\"register-signup\">\r\n                    <div>\r\n                        <h2>\r\n                            Foster\r\n                        </h2>\r\n                        <p>\r\n                            Login with your email.\r\n                        </p>\r\n                        <Row>\r\n                            <Col md={{span:10, offset:2}}>\r\n                        <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        \r\n                        <Form.Label htmlFor=\"email\" srOnly>\r\n                              Email\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text>\r\n                              <i className=\"fa fa-user\"></i>\r\n                              </InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" \r\n                              id=\"email\" \r\n                              name=\"username\" \r\n                              placeholder=\"Email\"\r\n                              ref={register({required: 'Enter Your Email'})}\r\n                               />\r\n                          </InputGroup>\r\n                          \r\n                          <Form.Label htmlFor=\"password\" srOnly>\r\n                              Password\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\"\r\n                              type=\"password\"\r\n                               id=\"password\"\r\n                               name=\"password\"\r\n                                placeholder=\"Password\" \r\n                                ref={register({required: 'Enter Your Password'})}\r\n                                />\r\n                          </InputGroup>\r\n\r\n                          \r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading} \r\n                           className=\"btn-dark\"\r\n                           type=\"submit\"\r\n                           >\r\n                              \r\n                              Login\r\n                          </Button>\r\n                          <Link className=\"forgot-password\" to=\"/forgotpassword\" size=\"lg\">Forgot Password?</Link>{' '}\r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                        </Row>\r\n                            \r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default LoginView","\r\nimport React, {setState, useState} from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup, } from 'react-bootstrap';\r\n\r\nimport {useForm} from 'react-hook-form';\r\nimport { MessageBox, forGotPassword } from \"../../services\"\r\nimport Spinner from '../../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nfunction ForgotPasswordView (props){\r\n\r\n    const { register, handleSubmit, errors, watch } = useForm();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n    const onSubmit = (data) => {\r\n        setIsLoading(true)\r\n        forGotPassword(data)\r\n        .then((responseJson) => {\r\n            setIsLoading(false)\r\n            // Do something with the response\r\n            console.log('responseJson', responseJson)\r\n            if(responseJson.ok === false){\r\n                NotificationManager.error(responseJson.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n            if(responseJson.resultCode && responseJson.resultCode != 2001 ){\r\n                NotificationManager.error(responseJson.message, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n          \r\n            window.location.href =`/customers/${responseJson.customerId}/reset-password`;\r\n        \r\n\r\n          })\r\n          .catch((error) => {\r\n            setIsLoading(false)\r\n            console.trace(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n          });\r\n    };\r\n\r\n\r\n    return (\r\n        <div id=\"register\" className=\"section\">\r\n            {isLoading && <Spinner />}\r\n            <MessageBox\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n            />\r\n        <Container>\r\n            <Row>\r\n                <Col md={5} id=\"register-left-side\">\r\n                    <h1>\r\n                        Welcome To Foster!\r\n                    </h1>\r\n                    <p>\r\n                        Meet with your tutor. We provide best online tutoring service.\r\n                    </p>\r\n                    <Link className=\"btn-link\" to=\"/register\" size=\"lg\">Register</Link>{' '}\r\n                </Col>\r\n\r\n                <Col md={7}  id=\"register-signup\">\r\n                    <div>\r\n                        <h2>\r\n                            Foster\r\n                        </h2>\r\n                        <p>\r\n                            Reset password with your email.\r\n                        </p>\r\n                        <Row>\r\n                            <Col md={{span:10, offset:2}}>\r\n                        <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        \r\n                        <Form.Label htmlFor=\"email\" srOnly>\r\n                              Email\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl size=\"lg\" \r\n                              id=\"email\" \r\n                              name=\"username\" \r\n                              placeholder=\"Email\" \r\n                              ref={register({required:'Enter your email address'})}\r\n                              />\r\n                          </InputGroup>\r\n                          {errors.email && <p>{errors.email.message}</p>}\r\n                                                   \r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading} \r\n                           className=\"btn-dark\" \r\n                           type=\"submit\"\r\n                           >\r\n                               \r\n                              Reset Passowrd\r\n                          </Button>\r\n                          \r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                        </Row>\r\n                            \r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordView","\r\nimport React, {setState} from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\n\r\nimport RegisterView from \"./views/register-view\";\r\nimport LoginView from \"./views/login-view\";\r\nimport ForgotPasswordView from \"./views/forgot-password\";\r\n\r\nexport default class Register extends React.Component {\r\n\r\n    // constructor (){\r\n    //     super()\r\n    //     this.state = {\r\n    //         loading: false,\r\n    //         locationPath: '/register'\r\n    //     }\r\n\r\n    //     this.submitSignUp = this.submitSignUp.bind(this)\r\n    //     // this.showLoginView = this.showLoginView.bind(this)\r\n    // }\r\n  \r\n    \r\n\r\n    componentDidMount(){\r\n       \r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            \r\n            <Switch>\r\n                  <Route path=\"/register\">\r\n                  <RegisterView />\r\n                  </Route>\r\n\r\n                  <Route path=\"/login\">\r\n                  <LoginView />\r\n                  </Route>\r\n                  \r\n                  <Route path=\"/forgotpassword\">\r\n                  <ForgotPasswordView />\r\n                  </Route>\r\n                  \r\n                  \r\n                  {/* <Route path=\"/forgotpassword\" component={ForgotPasswordView} /> */}\r\n\r\n            </Switch>\r\n        )\r\n    //   return (\r\n    //       <span>\r\n    //            {this.state.locationPath === '/register'? <RegisterView \r\n    //             submitSignUp={this.submitSignUp}\r\n    //             showLoginView={()=> this.setState({locationPath:'/login'})}\r\n    //      />: null }\r\n\r\n    //         {this.state.locationPath === '/login'? <LoginView \r\n    //             submitSignIn={this.submitSignUp}\r\n    //             showRegisterView={()=> this.setState({locationPath:'/register'})}\r\n    //             forgotPassword={()=> this.setState({locationPath:'/forgot-password'})}\r\n    //      />: null }\r\n           \r\n    //         {this.state.locationPath === '/forgot-password'? <ForgotPassword \r\n    //             submitSignIn={this.submitSignUp}\r\n    //             showRegisterView={()=> this.setState({locationPath:'/register'})}\r\n                \r\n    //      />: null }\r\n    //       </span>\r\n        \r\n         \r\n\r\n    //   )\r\n    }\r\n}","\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup } from 'react-bootstrap';\r\n    \r\nimport Spinner from '../../components/common/Spinner';\r\nimport {useForm} from 'react-hook-form';\r\nimport { MessageBox, sendContactUs } from \"../../services\"\r\nimport { NotificationManager } from 'react-notifications';\r\nimport FooterData from \"../../fixtures/footer.json\";\r\n\r\n\r\n\r\n\r\nfunction ContactUs (props){\r\n    const { register, handleSubmit, errors, watch } = useForm(); // initialize the hook\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n    const [socialLinks, setsocialLinks] = useState([]);\r\n\r\n    const onSubmit = (data) => {\r\n        setIsLoading(true)\r\n        sendContactUs(data)\r\n        .then((responseJson) => {\r\n            setIsLoading(false)\r\n            // Do something with the response\r\n            console.log('responseJson', responseJson)\r\n            if(responseJson.ok === false){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.status || 'Error')\r\n                // setModalMessage(`${responseJson.statusText}`)\r\n                \r\n                // setModalShow(true)\r\n                NotificationManager.error(responseJson.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n            if(responseJson.resultCode && responseJson.resultCode != 2001){\r\n                // setisSuccessModal(false)\r\n                // setModalHeading(responseJson.error.code || 'Error')\r\n                // setModalMessage(`${responseJson.error.message}`)\r\n                // setModalShow(true)\r\n\r\n                NotificationManager.error(responseJson.message, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n          //  window.location.href ='/dashboard';\r\n          setisSuccessModal(true)\r\n          setModalHeading('Thank You')\r\n          setModalMessage(`Our team will contact you soon.`)          \r\n          setModalShow(true)\r\n\r\n          })\r\n          .catch((error) => {\r\n            setIsLoading(false)\r\n            console.trace(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n          });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setsocialLinks(FooterData.socialLinks)\r\n    }, []);\r\n\r\n   \r\n    return (\r\n\r\n        <div id=\"register\" className=\"section\">\r\n             \r\n            {isLoading && <Spinner />}\r\n             <MessageBox\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n            />\r\n\r\n        <Container>\r\n            <Row>\r\n                <Col md={5} id=\"contact-us-left-side\">\r\n                    <h1>\r\n                        Contact Information\r\n                    </h1>\r\n                    <div id=\"contact-us-info\">\r\n                            <p>\r\n                               <strong>Address: </strong> \r\n                               \r\n                               {FooterData.contactus.addressline}\r\n                            </p>\r\n\r\n                            <p>\r\n                            <strong>Email: </strong> \r\n                                <i className=\"fa fa-envelope\"></i>\r\n                                {FooterData.contactus.email}\r\n                            </p>\r\n                            <p>\r\n                            <strong>Phone: </strong> \r\n                                <i className=\"fa fa-phone\"></i> \r\n                                {FooterData.contactus.phone}\r\n                            </p>\r\n\r\n                        </div>\r\n                        <div id=\"contact-us-social-links\"  style={{float:'right', marginRight:'25px'}} >\r\n                        {socialLinks.map(item=>{\r\n                            return <a target=\"_blank\" href={item.link}>\r\n                                    <i className={item.icon}>\r\n                                    </i>\r\n                                    </a>\r\n                        })}\r\n                        </div>\r\n                </Col>\r\n\r\n                <Col md={7}  id=\"register-signup\">\r\n                    <div>\r\n                        <h2>\r\n                            Send, Your Query\r\n                        </h2>\r\n                        <p>\r\n                           We will get back to you in short. \r\n                        </p>\r\n                        <Row>\r\n                            <Col md={{span:10, offset:2}}>\r\n                        <Form  onSubmit={handleSubmit(onSubmit)}>\r\n                        \r\n                        \r\n                        <Form.Label htmlFor=\"fullname\" >\r\n                            Full Name \r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\"\r\n                               name=\"fullname\" \r\n                               placeholder=\"full name\" \r\n                               ref={register({required: 'full name is required'}) } \r\n                               \r\n                               />\r\n                              \r\n                          </InputGroup>\r\n                          {errors.fullname && <p>{errors.fullname.message}</p> }\r\n\r\n                          \r\n                          <Form.Label htmlFor=\"phone\" >\r\n                              Phone or Email\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              type=\"text\"\r\n                               \r\n                               name=\"phone\" \r\n                               placeholder=\"phone or email\" \r\n                               ref={register({\r\n                                   required: 'required a valid phone or email',\r\n                                   \r\n                                }) }\r\n                               \r\n                                />\r\n                          </InputGroup>\r\n                          {errors.phone && <p>{errors.phone.message}</p> }\r\n\r\n\r\n                          <Form.Label htmlFor=\"message\" >\r\n                            Message \r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              {/* <InputGroup.Prepend>\r\n                             \r\n                              </InputGroup.Prepend> */}\r\n                              <FormControl size=\"lg\"\r\n                               name=\"message\"  \r\n                               placeholder=\"message\" \r\n                               ref={register({required: 'message is required'}) } \r\n                               as=\"textarea\"\r\n                               />\r\n                              \r\n                          </InputGroup>\r\n                          {errors.message && <p>{errors.message.message}</p> }\r\n\r\n\r\n                         \r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading}\r\n                            className=\"btn-dark\"   \r\n                            type=\"submit\"\r\n                             >\r\n                              \r\n                              Send Request\r\n                          </Button>\r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                        </Row>\r\n                            \r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ContactUs","import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col, Accordion, Card } from 'react-bootstrap';\r\nimport {  DSHeader, DSMenu, DSContent} from \"./../components\";\r\n\r\n\r\nexport default function Dashboard () {\r\n  const [isDashboard, setisDashboard] = useState(true);\r\n\r\n  const changeMenuToggle = (event) => {\r\n    \r\n      if(document.getElementById(\"dashboar-menu\").classList.value.split(' ').includes('toogleMenuShow') ){\r\n        document.getElementById(\"dashboar-menu\").classList.remove('toogleMenuShow');\r\n        document.getElementById(\"dashboar-menu\").classList.add('toogleMenuHide');       \r\n      }else{\r\n          document.getElementById(\"dashboar-menu\").classList.remove('toogleMenuHide');\r\n          document.getElementById(\"dashboar-menu\").classList.add('toogleMenuShow');       \r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      \r\n      return () => {\r\n        setisDashboard(false)\r\n      };\r\n    }, []);\r\n\r\n\r\n    return (\r\n\r\n      <div id=\"dashboard\">\r\n                   \r\n          <Container>\r\n            \r\n                <Row>\r\n                  \r\n                    <Col md={{span:3}} >\r\n                    <DSMenu  className=\"toogleMenuHide dashboar-menu\" />\r\n                    </Col>\r\n                    <Col md={{span:9}}>\r\n                      {isDashboard &&\r\n                        <div  className=\"Navbar__Link Navbar__Link-toggle float-right\">\r\n                        <i class=\"fa fa-bars\" onClick={changeMenuToggle} ></i>\r\n                        </div>\r\n                      }\r\n                    \r\n                    <DSContent />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n         \r\n            \r\n\r\n         \r\n      </div>\r\n      )\r\n    \r\n}","\r\nimport React, {useState} from \"react\";\r\n\r\nimport { Container, Row, Col, Button, Spinner } from 'react-bootstrap';\r\nimport { verifyEmail, MessageBox } from \"../services\";\r\n\r\nfunction VerifyEmail (props){\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n\r\n    const emailVerificationClickHandler = ()=>{\r\n        \r\n        let data = {\r\n            phone: props.match.params.id,\r\n            emailCode: +props.match.params.code\r\n        }\r\n        setIsLoading(true)\r\n        verifyEmail(data)\r\n        .then(responseJson => {\r\n            setIsLoading(false)\r\n            if(responseJson.ok === false){\r\n                setModalHeading(responseJson.status || 'Error')\r\n                setModalMessage(`${responseJson.statusText}`)\r\n                setModalShow(true)\r\n                return\r\n            }\r\n\r\n            if(responseJson.resultCode && responseJson.resultCode !== '2001'){\r\n                setModalHeading(responseJson.code || 'Error')\r\n                setModalMessage(`${responseJson.message}`)\r\n                setModalShow(true)\r\n\r\n            \r\n                return\r\n            }\r\n\r\n            setisSuccessModal(true)\r\n            setModalHeading(responseJson.code || 'Success')\r\n            setModalMessage(`${responseJson.message}`)\r\n                setModalShow(true)\r\n                setTimeout(() => {\r\n                    window.location.href = '/login'\r\n                }, 1500);\r\n            \r\n        })\r\n        .catch( error => {\r\n            setIsLoading(true)\r\n            console.log(error)\r\n            setModalMessage(error.toString())\r\n                setModalShow(true)\r\n                return\r\n        })\r\n    }\r\n\r\n        return(\r\n            <div id=\"verify-email\">\r\n                <MessageBox \r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n                />\r\n                <Container>\r\n                {/* <Row>\r\n                    <Col md={{span: 12}}>\r\n                    <div className=\"custom-header\">\r\n                                <img src=\"/header_logo.png\" alt=\"foster logo\" />\r\n                                <h1>Foster</h1>\r\n                                    </div>\r\n                        </Col>\r\n                </Row> */}\r\n\r\n                    <Row>\r\n                    \r\n                        <Col md={{span: 8, offset:2}}>\r\n                            <div className=\"section\" >\r\n                               \r\n                               \r\n                                <h2 className=\"section-heading\">\r\n                                    Email Confirmation\r\n                                </h2>\r\n                                <p>\r\n                                    Hi You are all most ready to start with Foster.\r\n                                    Hope, You will enjoy your learning path.\r\n                                    </p>\r\n                                    <p>\r\n                                    <strong>Click </strong> below button to verify <strong> Email Address </strong>\r\n                                        </p>\r\n\r\n                                        <Button\r\n                                        size=\"lg\"\r\n                                        className=\"btn-dark\"\r\n                                        disabled={props.isLoading}\r\n                                        onClick={emailVerificationClickHandler}\r\n                                        > \r\n                                        {props.isLoading && <Spinner\r\n                                            as=\"span\"\r\n                                            animation=\"grow\"\r\n                                            size=\"sm\"\r\n                                            role=\"status\"\r\n                                            aria-hidden=\"true\"\r\n                                            />}\r\n                                        Verify Email Address\r\n                                        </Button>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default VerifyEmail","\r\nimport React, {useState} from \"react\";\r\n\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup,\r\n } from 'react-bootstrap';\r\n import {useForm} from 'react-hook-form';\r\nimport { passwordReset, MessageBox } from \"../services\";\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction ResetPassword (props){\r\n    const { register, handleSubmit, errors, watch } = useForm();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n\r\n\r\n    const onSubmit = (formData)=>{\r\n        \r\n        let data = {\r\n            customerId: props.match.params.customerId,\r\n            phone: props.match.params.customerId,\r\n            emailCode: +formData.code,\r\n            newPassword: formData.password,\r\n        }\r\n        setIsLoading(true)\r\n        passwordReset(data, {customerId: data.customerId})\r\n        .then(responseJson => {\r\n            setIsLoading(false)\r\n            if(responseJson.ok === false){\r\n                NotificationManager.error(responseJson.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n\r\n            if(responseJson.resultCode && responseJson.resultCode !== '2001'){\r\n                NotificationManager.error(responseJson.message, 'Error!', 2000);\r\n            \r\n                return\r\n            }\r\n\r\n            NotificationManager.success(responseJson.message, 'Success!', 2000);\r\n\r\n                setTimeout(() => {\r\n                    window.location.href = '/login'\r\n                }, 1500);\r\n            \r\n        })\r\n        .catch( error => {\r\n            setIsLoading(false)\r\n            console.log(error)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n                return\r\n        })\r\n    }\r\n\r\n        return(\r\n            <div id=\"verify-email\">\r\n                {isLoading && <Spinner />}\r\n                <MessageBox \r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                heading={modalHeading}\r\n                message={modalMessage}\r\n                isSuccess={isSuccessModal}\r\n                />\r\n                <Container>\r\n                {/* <Row>\r\n                    <Col md={{span: 12}}>\r\n                    <div className=\"custom-header\">\r\n                                <img src=\"/header_logo.png\" alt=\"foster logo\" />\r\n                                <h1>Foster</h1>\r\n                                    </div>\r\n                        </Col>\r\n                </Row> */}\r\n\r\n                    <Row>\r\n                    \r\n                        <Col md={{span: 8, offset:2}}>\r\n                            <div className=\"section\" >\r\n                               \r\n                               \r\n                                <h2 className=\"section-heading\">\r\n                                    Reset Password\r\n                                </h2>\r\n                                    <p>\r\n                                    Enter code and new password, click below button to <strong> reset password </strong>\r\n                                        </p>\r\n                                        <Row>\r\n                                            <Col md={{span:8, offset:2}}>\r\n                                            \r\n                                            <Form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                                                <Form.Label htmlFor=\"code\" srOnly>\r\n                                                    Code\r\n                                                </Form.Label>\r\n                                                <InputGroup>\r\n                                                    <InputGroup.Prepend>\r\n                                                    <InputGroup.Text>\r\n                                                    <i className=\"fa fa-user\"></i>\r\n                                                    </InputGroup.Text>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <FormControl size=\"lg\" \r\n                                                    id=\"code\" \r\n                                                    name=\"code\" \r\n                                                    placeholder=\"Code\"\r\n                                                    type=\"number\"\r\n                                                    ref={register({required: 'Enter Your Code'})}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                                {errors.code && <p>{errors.code.message}</p>}\r\n\r\n                                                <Form.Label htmlFor=\"password\" srOnly>\r\n                                                Password\r\n                                                </Form.Label>\r\n                                                <InputGroup>\r\n                                                <InputGroup.Prepend>\r\n                                                <InputGroup.Text><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                                                </InputGroup.Prepend>\r\n                                                <FormControl size=\"lg\"\r\n                                                type=\"password\"\r\n                                                id=\"password\"\r\n                                                name=\"password\"\r\n                                                    placeholder=\"Password\" \r\n                                                    ref={register({required: 'Enter Your Password'})}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                                {errors.password && <p>{errors.password.message}</p>}\r\n\r\n                                                <div className=\"sign-up-link\">\r\n                                                    <Button\r\n                                                        size=\"lg\"\r\n                                                        className=\"btn-dark\"\r\n                                                        disabled={isLoading}\r\n                                                        type=\"submit\"\r\n                                                        > \r\n                                                        Reset Password\r\n                                                    </Button>\r\n                                                 \r\n                                                 </div>\r\n\r\n                                                </Form>\r\n\r\n                                                \r\n                                            </Col>\r\n                                        </Row>\r\n                                       \r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default ResetPassword","\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { Container, Row, Col, Badge,\r\n     Button, Card\r\n     } from 'react-bootstrap';\r\n\r\n\r\n\r\nimport { getCustomerById, sendFeedback, getProfilerReviewsById } from \"../services\";\r\nimport { constants } from \"../constants\";\r\nimport { RatingStars } from \"../components\";\r\nimport Spinner from '../components/common/Spinner';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\n\r\n\r\n\r\nexport default function ViewProfile (props){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [feedbackMessage, setfeedbackMessage] = useState('');\r\n    const [feedbackstars, setfeedbackstars] = useState(5);\r\n    const [sharefeedback, setsharefeedback] = useState(false);\r\n    const [feedbackreason, setfeedbackreason] = useState('');\r\n    const [profilerId, setprofilerId] = useState('');\r\n    const [profileRating, setprofileRating] = useState('');\r\n    const [totalRating, settotalRating] = useState('');\r\n    const [tutor, settutor] = useState({});\r\n    const [reviews, setreviews] = useState({});\r\n   \r\n\r\n    if(!props.match || !props.match.params){\r\n        window.location.href = \"/\"\r\n    }\r\n    let userId = '';\r\n    let user = {};\r\n    try{\r\n        userId = localStorage.getItem('userId')\r\n        user = localStorage.getItem('user')\r\n        user = JSON.parse(user)\r\n    }catch(e){\r\n        console.log(e)\r\n    }\r\n   \r\n\r\n\r\n   useEffect(() => {\r\n    setprofilerId(props.match.params.id)\r\n    getCustomerById(props.match.params.id)\r\n    .then(result=>{\r\n       // console.log(result)\r\n        settutor(result)\r\n        settutor(prevState =>{\r\n            return {\r\n                ...prevState,\r\n                teachingSubjects: result.teachingSubjects || [],\r\n                teachingGrades: result.teachingGrades || [],\r\n                education: result.education || []\r\n            }\r\n        })\r\n\r\n        if(result.stars){\r\n            setprofileRating(result.stars)\r\n        }\r\n       \r\n        settotalRating(result.totalRatings) \r\n        loadReviews(props.match.params.id)\r\n\r\n\r\n    }).catch(error=>{\r\n        console.log(error)\r\n    })\r\n      \r\n   }, []);\r\n\r\n\r\n   function loadReviews(profilerId) {\r\n        getProfilerReviewsById({toId :{like:profilerId}})\r\n        .then(result=>{\r\n            setreviews(result)\r\n            \r\n        })\r\n        .catch(result=>{\r\n            console.log(result)\r\n        })\r\n   }\r\n\r\n    const submitRating = ()=>{\r\n        if(profilerId === userId){\r\n            return NotificationManager.error('Not allowed to self rating.', 'Error!', 2000);\r\n        }\r\n        if(!feedbackMessage || !feedbackreason || feedbackstars === 0){\r\n            return NotificationManager.error('Required More Info.', 'Error!', 2000);\r\n\r\n        }\r\n        \r\n        let data = {\r\n            message:feedbackMessage,\r\n            stars:feedbackstars,\r\n            byId: userId,\r\n            fullname: `${user.firstName}  ${user.lastName}`,\r\n            toId: profilerId,\r\n            feedbackreason: feedbackreason,\r\n        }\r\n        sendFeedback(data)\r\n        .then(result=>{\r\n            if(result.ok === false){\r\n                NotificationManager.error(result.statusText, 'Error!', 2000);\r\n\r\n                return\r\n            }\r\n\r\n            NotificationManager.success(result.message || 'Successfully Created!', 'Success!', 2000);\r\n            setfeedbackreason('')\r\n            setfeedbackMessage('')\r\n        })\r\n        .catch(result=>{\r\n            console.log(result)\r\n            NotificationManager.error(result.toString(), 'Error!', 2000);\r\n\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{marginTop:'50px', marginBottom:'50px'}} className=\"section\">\r\n            {isLoading && <Spinner />}\r\n            <Container>\r\n                <Row>\r\n                    <Col md={{span: 8}}>\r\n                    <div style={{display:'flex'}}>\r\n                    {/* <img className=\"profile-img\" src={constants.api_server() + tutor.imageUrl}alt=\"user profile image\"></img> */}\r\n                    <img className=\"profile-img\" src=\"/images/default-user.jpg\" alt=\"user profile image\"></img>\r\n                        <span style={{marginLeft:'20px'}} className=\"user-profile-title\">\r\n                            <h2>{tutor.firstName} {tutor.lastName}</h2>\r\n                            <p><strong>\r\n                                {tutor.tagLine}\r\n                                </strong></p>\r\n                                {profileRating &&\r\n                                <RatingStars.profileListingStars stars={parseInt(profileRating)}> </RatingStars.profileListingStars>\r\n                                }\r\n                                {!profileRating &&\r\n                                <RatingStars.profileListingStars stars={0}> </RatingStars.profileListingStars>\r\n                                }\r\n                              \r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"bio\">\r\n                        <h4>About {tutor.lastName}</h4>\r\n                        <hr></hr>\r\n                                              \r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>Bio</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                                <p>\r\n                                {tutor.greateTutorLine}\r\n                                </p>\r\n                                <p>\r\n                                {tutor.teachingExperienceLine}\r\n                                </p>\r\n                            </Col>\r\n\r\n                        </span>\r\n                                                \r\n\r\n                    </div>\r\n\r\n                    <div className=\"education\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>Education</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                               \r\n                            { tutor.education &&\r\n                            tutor.education.map((edu, index)=>  <span key={index}>\r\n                                <p>{edu.institute}</p>\r\n                                <p>{edu.degree}</p>\r\n                                <p>Passing year <strong>{edu.passingYear}</strong></p>\r\n                                </span>)\r\n                            }\r\n                            {/* <p >\r\n                                {tutor.education.institute}\r\n                            </p>\r\n                            <p >\r\n                                {tutor.education.institute}\r\n                            </p> */}\r\n                            </Col>\r\n                        </span>\r\n\r\n                    </div>\r\n                    \r\n                    <div className=\"policies\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                                <p>Policies</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                            <p>Teaching Rate: <strong>Rs{tutor.fees}</strong>/{tutor.feesPer}</p>\r\n                            </Col>\r\n                        </span>\r\n                       \r\n                    </div>\r\n\r\n                    <div className=\"schedule\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>Schedule</p> \r\n                            </Col>\r\n                            <Col md={10}>\r\n                            {tutor.isOnlineTeaching && <p>Teaches Online</p> }\r\n                            {tutor.isOfflineTeaching && <p>Teaches In person</p> }\r\n                            </Col>\r\n                        </span>\r\n                       \r\n                    </div>\r\n\r\n                    <div className=\"subjects\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>Subjects</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                                \r\n                            {/* {teachingSubjects} */}\r\n                            { tutor.teachingSubjects &&\r\n                            tutor.teachingSubjects.map(subject=> <Badge key={subject} style={{marginRight:'5px'}} variant=\"success\">{subject}</Badge>  ) }\r\n                            \r\n                            </Col>\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"grades\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>Teaching Grades</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                                <p>\r\n                                { tutor.teachingGrades &&\r\n                                tutor.teachingGrades.map(grade=> <Badge key={grade} style={{marginRight:'5px'}} variant=\"success\">{grade}</Badge>  )}\r\n                                </p>\r\n                            </Col>\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"ratings\">\r\n                        <h4>Ratting & Reviews</h4>\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            <p>ratings</p>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                            \r\n                              <div style={{display:'flex'}}>\r\n                                  {profileRating &&\r\n                                    \r\n                                   <RatingStars.profileView stars={parseInt(profileRating)} > </RatingStars.profileView >\r\n                                  }\r\n                                  { !profileRating &&\r\n                                    <RatingStars.profileView stars={0} > </RatingStars.profileView >\r\n\r\n                                  }\r\n                              \r\n                              \r\n                              <strong> { `${profileRating} (${totalRating} ratings)` } </strong>\r\n                              \r\n                              </div>\r\n                             {!sharefeedback && userId && <button className=\"btn float-right\"  onClick={()=>setsharefeedback(true)}>Share Your Feedback </button>}\r\n                              \r\n                             {sharefeedback && <button className=\"btn float-right\"  onClick={()=>setsharefeedback(false)}>Hide Feedback </button> }\r\n                              {/* <p><strong>5 stars</strong> ================================ (100)</p>\r\n                              <p><strong>4 stars</strong> ================================ (80)</p>\r\n                              <p><strong>3 stars</strong> ================================ (80)</p>\r\n                              <p><strong>2 stars</strong> ================================ (80)</p>\r\n                              <p><strong>1 stars</strong> ================================ (80)</p> */}\r\n                            </Col>\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    {sharefeedback && \r\n                    \r\n                    <div className=\"ratings\">\r\n                        <h4>Share Your Feedback </h4>\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <Col md={2}>\r\n                            {/* <p>Feed Back</p> */}\r\n                            </Col>\r\n                            <Col md={10}>\r\n                            <RatingStars>\r\n                              <RatingStars.rating\r\n                                onChange={value=>{setfeedbackstars(value) }}\r\n                               >\r\n                             </RatingStars.rating >\r\n                             \r\n                             {/* {feedbackstars <= 3 ?  */}\r\n                             <RatingStars.feedbackReasons\r\n                                className=\"feedback-select\"\r\n                                label=\"Choose Your Reason\"\r\n                                stars={feedbackstars}\r\n                                onChange={(event)=>setfeedbackreason(event.target.value)}\r\n\r\n                             >\r\n                                 \r\n                                 </RatingStars.feedbackReasons>\r\n                                 {/* : null\r\n                             } */}\r\n                              \r\n                              \r\n                              <RatingStars.messageBox \r\n                              placeholder=\"Enter Your Feedback\"\r\n                              value={feedbackMessage}\r\n                              rows={4}\r\n                            //   cols={50}\r\n                              onChange={event => {setfeedbackMessage(event.target.value)}}\r\n                              > \r\n                              </RatingStars.messageBox >\r\n\r\n                              <RatingStars.ratingSubmit\r\n                              className=\"btn-dark\" \r\n                              style={{margin:'0px auto'}}\r\n                              onClick={submitRating}\r\n\r\n                              >{\"Feedback\"}\r\n                                  </RatingStars.ratingSubmit>\r\n\r\n                              </RatingStars>\r\n                              \r\n                            </Col>\r\n                        </span>\r\n\r\n                    </div>\r\n                    \r\n                    }\r\n\r\n\r\n                    <div className=\"reviews\">\r\n                        <hr></hr>\r\n                        <span style={{display:'flex'}}>\r\n                            <p>Reviews</p>\r\n                            <span style={{marginLeft:'100px'}}>\r\n                            {reviews && reviews.length > 0 ?\r\n                            reviews.map((item, index)=>{\r\n                                return <span key={index}>\r\n                                        <p><strong>{item.feedbackreason}</strong></p>\r\n                                        <em>Given Stars {item.stars}</em>\r\n                                        <p>\r\n                                        {item.message}\r\n                                        </p>\r\n                                        <p> <em><a href={`/profile/${item.byId}`}>{item.fullname}</a></em></p>\r\n                                       </span>\r\n                            })\r\n                           \r\n\r\n                            :\r\n                            null    \r\n                            }\r\n                            </span>\r\n\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    </Col>\r\n                        <Col md={{span: 4}}>\r\n                        <Card style={{ width: '18rem', marginTop:'70px' }} className=\"\">\r\n                        <Card.Header style={{background:'#e74c3c', color:'#fff'}}>Fees Rs{tutor.fees}/{tutor.feesPer}</Card.Header>\r\n                            <Card.Body>\r\n                            \r\n                                <Card.Subtitle className=\"mb-2 text-muted\"></Card.Subtitle>\r\n                                \r\n                                <Card.Text>No subscriptions or upfront payments</Card.Text>\r\n                                <Card.Text>Only pay for the time you need </Card.Text>\r\n                                <Card.Text>Find the right fit, or your first hour is free</Card.Text>\r\n                                \r\n                                <Link\r\n                                to={`/request/to/${props.match.params.id}`}\r\n                                className=\"btn-dark\"\r\n                                style={{marginLeft:'10%',}}\r\n                                >\r\n                                    Connect to {tutor.lastName}\r\n                                </Link> \r\n                                {/* <Card.Link href=\"#\">Card Link</Card.Link>\r\n                                <Card.Link href=\"#\">Another Link</Card.Link> */}\r\n                            </Card.Body>\r\n                            <Card.Footer  className=\"text-muted\">Response Time: 24 hours</Card.Footer>\r\n                        </Card>\r\n                            \r\n                        </Col>\r\n                </Row>\r\n            </Container>\r\n           \r\n        </div>\r\n    )\r\n}","\r\nimport React, {useState} from \"react\";\r\nimport {\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col, Button,\r\n    FormControl, Form, InputGroup } from 'react-bootstrap';\r\n    \r\nimport Spinner from '../components/common/Spinner';\r\nimport {useForm} from 'react-hook-form';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nimport { studyRequests } from \"../services\";\r\nimport Socket from \"../components/common/Socket.js\";\r\n\r\n\r\n\r\nexport default function StudentRequest (props){\r\n    const { register, handleSubmit, errors, watch } = useForm(); // initialize the hook\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('Error!');\r\n    const [modalMessage, setModalMessage] = useState('');\r\n    const [isSuccessModal, setisSuccessModal] = useState(false);\r\n    let userId = localStorage.getItem('userId')\r\n\r\n    const onSubbmit = (data)=>{\r\n        if(!userId){\r\n            NotificationManager.error('Sign Up is required!', 'Error!', 2000);    \r\n            return\r\n        }\r\n        data.from = userId\r\n        data.to = props.match.params.tutorId\r\n        if(data.from === data.to){\r\n            NotificationManager.error('Yourself Request Is Not Allowed!', 'Error!', 2000);\r\n            return\r\n        }\r\n        let req_message = {from: data.from, to: data.to, message: data.message}\r\n        if(window.currentSocket){\r\n            window.currentSocket.emit('message', req_message)\r\n        }\r\n        \r\n        setIsLoading(true)\r\n        studyRequests(data)\r\n        .then(result => {\r\n            setIsLoading(false)\r\n            console.log('study requests', result)\r\n            NotificationManager.success('Request Sent!', 'Successful!', 2000);\r\n            window.location.href = 'dashboard/new-requests'\r\n        })\r\n        .catch(error => {\r\n            setIsLoading(false)\r\n            NotificationManager.error(error.toString(), 'Error!', 2000);\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n            <div style={{ marginBottom:'50px'}} className=\"section\">\r\n                <Socket />\r\n            {isLoading && <Spinner />}\r\n\r\n                <Container>\r\n                    <Row>\r\n                    <Col md={7}  id=\"register-signup\">\r\n                    {/* <div> */}\r\n                        <h2>\r\n                            Send, Your Request\r\n                        </h2>\r\n                        <p>\r\n                           Your instructor will contact you soon.\r\n                        </p>\r\n                        {/* <Row> */}\r\n                            {/* <Col md={{span:10, offset:2}}> */}\r\n                        <Form  onSubmit={handleSubmit(onSubbmit)}>\r\n                        \r\n                        \r\n                        <Form.Label htmlFor=\"subjects\" >\r\n                            Subject\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\"\r\n                               name=\"subjects\" \r\n                               placeholder=\"subject\" \r\n                               ref={register({required: 'subject is required'}) } \r\n                               \r\n                               />\r\n                              \r\n                          </InputGroup>\r\n                          {errors.subjects && <p>{errors.subjects.message}</p> }\r\n\r\n                          <Form.Row>\r\n                              <Col>\r\n                              <Form.Label htmlFor=\"lessonType\" >\r\n                            Lesson Type\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              as=\"select\"\r\n                               \r\n                               name=\"lessonType\" \r\n                               ref={register({\r\n                                   required: 'Select a lesson Type',\r\n                                   \r\n                                }) }\r\n                               \r\n                                >\r\n                                    <option value=\"\" />\r\n                                <option value=\"online\">Online Lesson</option>\r\n                                <option value=\"inperson\">In Person Lesson</option>\r\n                                </FormControl>\r\n                          </InputGroup>\r\n                          {errors.lessonType && <p>{errors.lessonType.message}</p> }\r\n\r\n\r\n                              </Col>\r\n\r\n                              <Col>\r\n                              <Form.Label htmlFor=\"timeFrom\" >\r\n                            Availability From\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              as=\"select\"\r\n                               \r\n                               name=\"timeFrom\" \r\n                               ref={register({\r\n                                   required: 'Select a time',\r\n                                   \r\n                                }) }\r\n                               \r\n                                >\r\n                                    <option value=\"\" />\r\n                                <option value=\"10:00 AM\">10:00 AM</option>\r\n                                <option value=\"11:00 AM\">11:00 AM</option>\r\n                                <option value=\"12:00 AM\">12:00 AM</option>\r\n                                <option value=\"1:00 PM\">1:00 PM</option>\r\n                                </FormControl>\r\n                          </InputGroup>\r\n                          {errors.timeFrom && <p>{errors.timeFrom.message}</p> }\r\n\r\n                              </Col>\r\n\r\n                              <Col>\r\n                              <Form.Label htmlFor=\"timeTo\" >\r\n                            Availability To\r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              \r\n                              <FormControl size=\"lg\" \r\n                              as=\"select\"\r\n                               \r\n                               name=\"timeTo\" \r\n                               ref={register({\r\n                                   required: 'Select a time',\r\n                                   \r\n                                }) }\r\n                               \r\n                                >\r\n                                    <option value=\"\" />\r\n                                <option value=\"10:00 AM\">10:00 AM</option>\r\n                                <option value=\"11:00 AM\">11:00 AM</option>\r\n                                <option value=\"12:00 AM\">12:00 AM</option>\r\n                                <option value=\"1:00 PM\">1:00 PM</option>\r\n                                </FormControl>\r\n                          </InputGroup>\r\n                          {errors.timeTo && <p>{errors.timeTo.message}</p> }\r\n                          </Col>\r\n                          </Form.Row>\r\n                                                \r\n\r\n\r\n                          <Form.Label htmlFor=\"message\" >\r\n                            Message \r\n                          </Form.Label>\r\n                          <InputGroup>\r\n                              {/* <InputGroup.Prepend>\r\n                             \r\n                              </InputGroup.Prepend> */}\r\n                              <FormControl size=\"lg\"\r\n                               name=\"message\"  \r\n                               placeholder=\"message\" \r\n                               ref={register({required: 'message is required'}) } \r\n                               as=\"textarea\"\r\n                               />\r\n                              \r\n                          </InputGroup>\r\n                          {errors.message && <p>{errors.message.message}</p> }\r\n\r\n\r\n                         \r\n                          <div className=\"sign-up-link\">\r\n                           {/* <Link className=\"btn-dark\" to=\"/dashboard\" size=\"lg\">Sign Up</Link>{' '} */}\r\n                           <Button disabled={isLoading}\r\n                            className=\"btn-dark\"   \r\n                            type=\"submit\"\r\n                            style={{marginLeft:'25%'}}\r\n                             >\r\n                              \r\n                              Send Request\r\n                          </Button>\r\n                          </div>\r\n                          \r\n                        </Form>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n    )\r\n}","\r\n\r\nimport React from \"react\";\r\nimport { FaqsContainer } from \"../containers/faqs.js\";\r\n\r\nexport default function Faqs () {\r\n      \r\n    return <>\r\n                <FaqsContainer  />\r\n             </>\r\n    \r\n    \r\n}","import React, {useEffect, useState, useRef} from \"react\";\r\n\r\nimport { Room } from \"../components\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport { constants } from \"../constants\";\r\n\r\n\r\n\r\nexport default function VideoConferenceRoom({...restProps}){\r\n\r\n    const [localStream, setlocalStream] = useState({});\r\n    const socket = useRef();\r\n\r\n\r\n    useEffect(() => {\r\n        let instance = constants.signalling_server()\r\n   \r\n        socket.current = io.connect(instance);\r\n        socket.current.on('connect', () => {\r\n            let userId = localStorage.getItem('userId')\r\n            socket.current.emit('session', {userId})\r\n            //window.currentSocket = socket.current;\r\n            \r\n        \r\n        })\r\n\r\n        socket.current.on(\"yourID\", (id) => {\r\n            console.log('room id: ', id)\r\n            //setYourID(id);\r\n           // setcallingLink(`${window.location.origin}/calling-route/${id}`)\r\n           socket.current.emit('join-room', {userId: id})\r\n           \r\n          })\r\n          socket.current.on('user-connected', (userId)=>{\r\n              console.log('user-connected: ', userId)\r\n          })\r\n          \r\n          navigator.mediaDevices.getUserMedia({\r\n            video: true,\r\n            audio: true,\r\n        })\r\n        .then(stream =>{\r\n           // setlocalStream(window.URL.createObjectURL(stream) )\r\n           var video = document.getElementById(\"myVideo\");\r\n\r\n            video.srcObject = stream;\r\n            video.onloadedmetadata = function(e) {\r\n                video.play();\r\n                video.muted = true;\r\n            };\r\n        })\r\n        .catch()\r\n\r\n        const peer = new Peer()\r\n\r\n        peer.on('open', function(id) {\r\n            console.log('My peer ID is: ' + id);\r\n          });\r\n\r\n          \r\n    })\r\n   \r\n    return <Room {...restProps}> \r\n    <Room.MyVideo></Room.MyVideo>\r\n    </Room>\r\n}","import React from \"react\";\r\nimport VideoConferenceRoom from \"../containers/videoconferenceroom\";\r\n\r\nexport default function ConferenceRoom ({...restProps}){\r\n    return <VideoConferenceRoom {...restProps}></VideoConferenceRoom>\r\n}","\r\nimport React from \"react\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  \r\n} from \"react-router-dom\";\r\n\r\nimport {Routes} from \"./constants/routes\";\r\n\r\nimport './App.css';\r\n\r\n/**import components */\r\nimport  {Header, Footer, }  from \"./components\";\r\n\r\nimport  {Home, Tutors, Register,  \r\n  Dashboard, ForgotPasswordView,\r\n  VerifyEmail,\r\n  ResetPassword,\r\n  ViewProfile,\r\n  ContactUs,\r\n  StudentRequest,\r\n  Faqs,\r\n  ConferenceRoom,\r\n }  from \"./pages\";\r\n\r\n import { DSChatBox } from \"./components\";\r\n import Dashboard2 from \"./pages/Dashboard/Dashboard\";\r\n// React Notification\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer } from 'react-notifications';\r\n\r\nimport WebrtcApp from \"./webrtc/App\";\r\nimport ClassRoom from \"./classroom\";\r\n\r\nexport default class App extends React.Component {\r\n    render(){\r\n\r\n        return (<div>\r\n           <NotificationContainer/>\r\n            <Router >\r\n            <Header />\r\n          \r\n                <Switch>\r\n                  <Route exact path={Routes.home}>                 \r\n                   <Home />                  \r\n                  </Route>\r\n\r\n                  <Route path={Routes.verifyCustomer} render={(props) => <VerifyEmail {...props} />} />\r\n                  <Route path={Routes.resetPassword} render={(props) => <ResetPassword {...props} />} />\r\n                 \r\n\r\n                  <Route path={Routes.login}>\r\n                    <Register />\r\n                   \r\n                  </Route>\r\n\r\n                  <Route path={Routes.faqs}>\r\n                    <Faqs />\r\n                   \r\n                  </Route>\r\n\r\n                  <Route path={Routes.register}>\r\n                    <Register />\r\n                  \r\n                  </Route>\r\n\r\n                  <Route path={Routes.forgotpassword}>\r\n                    <Register />\r\n                   \r\n                  </Route>\r\n\r\n                  <Route path={Routes.tutors}>\r\n                    <Tutors />\r\n                  </Route>\r\n                  \r\n                  <Route path={Routes.dashboard}>\r\n                    <Dashboard />                   \r\n                  </Route>\r\n                  \r\n                  \r\n                  <Route path={Routes.contactUs}>\r\n                    <ContactUs />\r\n                   \r\n                  </Route>\r\n                 \r\n                 \r\n                  <Route path={Routes.annonymousCall}>\r\n                    <WebrtcApp />\r\n                  </Route>\r\n                   <Route path={Routes.studentCall} render={(props) => <WebrtcApp {...props} />} >\r\n                   </Route>\r\n                  \r\n                  \r\n                  <Route path={Routes.tutorsProfile} render={(props) => <ViewProfile {...props} />} >\r\n                                        \r\n                  </Route>\r\n                  \r\n                  <Route path={Routes.studentRequest} render={(props) => <StudentRequest {...props} />} >\r\n                                        \r\n                  </Route>\r\n\r\n                  <Route path={Routes.classRoom} >\r\n                    \r\n                    <ClassRoom className=\"section\"  />\r\n                    </Route>\r\n                  \r\n                  <Route path={Routes.conferencecall} >\r\n                    \r\n                    <ConferenceRoom className=\"section\"  />\r\n                    </Route>\r\n                  \r\n\r\n                 \r\n                </Switch>\r\n             \r\n                <Footer />\r\n           \r\n            </Router>\r\n            </div>\r\n          )\r\n    }\r\n  \r\n}\r\n\r\n// You can think of these components as \"pages\"\r\n// in your app.\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport App from './Router';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}